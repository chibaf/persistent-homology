(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1463688,      32740]
NotebookOptionsPosition[   1453975,      32517]
NotebookOutlinePosition[   1455739,      32569]
CellTagsIndexPosition[   1455696,      32566]
WindowTitle->PersistentHomology | Example Notebook
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]",
 Cell["(3)", "ExampleCount"],
 "\[NonBreakingSpace]"
}], "Subsection",
 TaggingRules->{},
 CellID->904125756],

Cell["Perform persistent homology on random data:", "Text",
 TaggingRules->{},
 CellID->235333725],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "314", "]"}], ";", 
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "3"}], "}"}]}], " ", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ph", "=", 
  RowBox[{
   InterpretationBox[
    TagBox[
     DynamicModuleBox[{Typeset`open = False}, 
      FrameBox[
       PaneSelectorBox[{False->GridBox[{
          {
           PaneBox[GridBox[{
              {
               StyleBox[
                StyleBox[
                 AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                  BoxBaselineShift->-0.25,
                  BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                 
                 FontColor->RGBColor[
                  0.8745098039215686, 0.2784313725490196, 
                   0.03137254901960784]],
                ShowStringCharacters->False,
                FontFamily->"Source Sans Pro Black",
                FontSize->0.6538461538461539 Inherited,
                FontWeight->"Heavy",
                PrivateFontOptions->{"OperatorSubstitution"->False}], 
               StyleBox[
                RowBox[{
                 StyleBox["PersistentHomology", "ResourceFunctionLabel"], 
                 " "}],
                ShowAutoStyles->False,
                ShowStringCharacters->False,
                FontSize->Rational[12, 13] Inherited,
                FontColor->GrayLevel[0.1]]}
             },
             GridBoxSpacings->{"Columns" -> {{0.25}}}],
            Alignment->Left,
            BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
            BaselinePosition->Baseline,
            FrameMargins->{{3, 0}, {0, 0}}], 
           ItemBox[
            PaneBox[
             TogglerBox[Dynamic[Typeset`open], {True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "IconizeCloser"],
               ImageSizeCache->{11., {1., 10.}}], False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "IconizeOpener"],
               ImageSizeCache->{11., {1., 10.}}]},
              Appearance->None,
              BaselinePosition->Baseline,
              ContentPadding->False,
              FrameMargins->0],
             Alignment->Left,
             BaselinePosition->Baseline,
             FrameMargins->{{1, 1}, {0, 0}}],
            Frame->{{
               RGBColor[
               0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                0.5], False}, {False, False}}]}
         },
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
        GridBox[{
          {GridBox[{
             {
              PaneBox[GridBox[{
                 {
                  StyleBox[
                   StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                   ShowStringCharacters->False,
                   FontFamily->"Source Sans Pro Black",
                   FontSize->0.6538461538461539 Inherited,
                   FontWeight->"Heavy",
                   PrivateFontOptions->{"OperatorSubstitution"->False}], 
                  StyleBox[
                   RowBox[{
                    StyleBox["PersistentHomology", "ResourceFunctionLabel"], 
                    " "}],
                   ShowAutoStyles->False,
                   ShowStringCharacters->False,
                   FontSize->Rational[12, 13] Inherited,
                   FontColor->GrayLevel[0.1]]}
                },
                GridBoxSpacings->{"Columns" -> {{0.25}}}],
               Alignment->Left,
               BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
               BaselinePosition->Baseline,
               FrameMargins->{{3, 0}, {0, 0}}], 
              ItemBox[
               PaneBox[
                TogglerBox[Dynamic[Typeset`open], {True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "IconizeCloser"]], False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "IconizeOpener"]]},
                 Appearance->None,
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0],
                Alignment->Left,
                BaselinePosition->Baseline,
                FrameMargins->{{1, 1}, {0, 0}}],
               Frame->{{
                  RGBColor[
                  0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                   0.5], False}, {False, False}}]}
            },
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
          {
           StyleBox[
            PaneBox[GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Version (latest): \"\>",
                  "IconizedLabel"], " ", 
                 TagBox["\<\"1.0.1\"\>",
                  "IconizedItem"]}]},
               {
                TagBox[
                 
                 TemplateBox[{
                  "\"Documentation \[RightGuillemet]\"", 
                   "https://resources.wolframcloud.com/FunctionRepository/\
resources/PersistentHomology"},
                  "HyperlinkURL"],
                 "IconizedItem"]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             Alignment->Left,
             BaselinePosition->Baseline,
             FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
            FontFamily->"Roboto",
            FontSize->11]}
         },
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
              GrayLevel[0.8]}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open],
        BaselinePosition->Baseline,
        ImageSize->Automatic],
       Background->RGBColor[
        0.9686274509803922, 0.9764705882352941, 0.984313725490196],
       BaselinePosition->Baseline,
       DefaultBaseStyle->{},
       FrameMargins->{{0, 0}, {1, 0}},
       FrameStyle->RGBColor[
        0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
       RoundingRadius->4]],
     {"FunctionResourceBox", 
      RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
      "PersistentHomology"},
     TagBoxNote->"FunctionResourceBox"],
    ResourceFunction["PersistentHomology"],
    BoxID -> "PersistentHomology",
    Selectable->False], "[", "data", "]"}]}]}], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.804451288235099*^9, 3.804451288830531*^9}, {
   3.804491968220285*^9, 3.80449199429005*^9}, {3.804492160063196*^9, 
   3.804492161268553*^9}, {3.804492196207881*^9, 3.804492196652082*^9}, {
   3.804492294692589*^9, 3.804492333831108*^9}, 3.8230212397818146`*^9},
 CellID->947072097],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PersistentHomologyObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             GraphicsComplexBox[CompressedData["
1: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
DD7UNnFU6mGhG2+T145RH+SY9ZrzutlY7vy4V2ngKex2UAy4ntEDQ02/GiX9
uKDJkxbtMe2FnIE50gkPudC2yslK4U8vuN6sNTtygQs/bOInhsL7oH7xMpH5
+7lwbMI9rWBHP9j/elIzto4Ll5b2/DvS2g+9zSapiqJcyHELv6J/bQB6/5yh
fejhwNU9a713TQzAq5uXer3SOCCd1ZT4e5IEwwV3F73RYsFbYtPio/vJMLLR
fO8MwblvmZvRMhMfMhyJ/r1/YTsT+vpG+7sayVDt3Z3WHckE0a8R/0rmUaA7
Oumf62UmxF97+LHnEAVWe4QHrlVlQqhcYuJcdwoo+ob4MzkMMFzx1E+lmAJP
OM5No4Lzu/PamhCp6m4ItV2u09LCgSGFhxdOa/XAj6p/Tv2CcyO6d17KS+yB
343jjjHHOSBRFJTLV+yFXRmsOQdlOHA6amCsMKYXjOuKzbkDbBg02+Jet7EP
ajPeVeQlsqEjeJP/18w+UFDZ9aXyPhuIPzddcNbrh/Xha36rG7Khdd7JEBkF
EnhTNTbtaWZACvvN+uBrJNAx116zIZYBpxTHLBbkCtrPDc7GPmLA4CbFZ+Zi
ZEg4K6XXZMaAV38W9+07LpgfvcezC3cwYNUq5eQ4Qf0YSm1IfyjHAG5Oj7nh
TzJYO778IT+DAVfutr2eEtQb29zf6xTx6FCrrrpJn9gHZZcC51i3cUBWN/n9
tiUDsENcpnOpHwcub7w5sn7XINSfJDzw0ufA/Tei9ReshuDYjxADBpcNexLt
Y1fvIkCLiXjhlSA20C6/qPKuIoCLYp+97hY2KPgFPl9tSARH20Huu3oWyJR1
/A6oJoJVGdO/zpIFJZe/kOXfMcDN/l5Y3xoKUHYVqm+QZoLCTHkbqTQyPHE+
mejkzQSKpTbtvRYZhtXvz20ZZcKPubvnlgvmRaPGMpgneE7RxhzWF01BHi35
rhNayoIfzPK0yUQinPb9Xum7jA3K3j3HC+SIQH/aRv9wnQ2h/PYHh3wIsEp/
nVdGUA/0nv31bsZrNuipMFratXvhwOfvn4P/sUBSnkn4zBXk/wWJK8Z3WPAq
b7H60vQ+yFu7TNWLwYR59EEDk8f98ETfb56vDRN4xuvERc0F+c0L2JxOZcD6
BvM/sXsGweRgaubOmwxwcNLzz9AYAn6/6eM7Y4J6keK/lWZHg8W+RI/npYLx
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
              "], {{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                Arrowheads[0.], {
                 ArrowBox[{1, 2}, 0.02254220222992223], 
                 ArrowBox[{1, 5}, 0.02254220222992223], 
                 ArrowBox[{1, 7}, 0.02254220222992223], 
                 ArrowBox[{1, 9}, 0.02254220222992223], 
                 ArrowBox[{1, 11}, 0.02254220222992223], 
                 ArrowBox[{1, 13}, 0.02254220222992223], 
                 ArrowBox[{1, 15}, 0.02254220222992223], 
                 ArrowBox[{1, 17}, 0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-2.1409496216940123`*^-16, -1.0434049156924905`}, 5}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {1.0704748108470062`*^-15, -0.9225412836753133}, 5}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.19317181243605622`, -1.0333779239158283`}, 7}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.1495108326247347, -0.7998123114976872}, 7}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.3696769958201283, -0.9542463251548349}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.24459071364353785`, -0.6313614109083246}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.5056775470872312, -0.8166972803055038}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.272398578269021, -0.43993880945047653`}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.582805838183662, -0.6393075500603161}, 13}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.229178820294798, -0.251397190160288}, 13}], 
                  0.02254220222992223], 
                 ArrowBox[
                  BezierCurveBox[{
                   2, {-0.590645266014236, -0.4460346004393019}, 15}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.12076850752425144`, -0.09120014346806327}, 15}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {-0.04103500681170743, -0.01167546606958506}, 4}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.5674671696890601, 0.16145833033997112`}, 4}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.15069014333422975`, 0.013963498134084052`}, 6}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.7369836857302795, 0.06829159554065786}, 6}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.33873038367193714`, -0.031387992444006356`}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.8613974228519735, -0.07982022606495483}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.49768983777687453`, -0.14160496769998895`}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.9239056164555438, -0.26287381225308243`}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.6061001505474233, -0.3018020143922123}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.9160661886249679, -0.45614676187410347`}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.6493199085216432, -0.4903436336824059}, 14}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.8389378975285393, -0.633536492119288}, 14}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.6215120438961692, -0.6817662351402451}, 16}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.7029373462614268, -0.7710855369686257}, 16}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.19172515014593514`, 1.0256389642036672`}, 6}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.16951651604121815`, 0.9068332652006886}, 6}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.37976539048364444`, 0.9802874736255784}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.2939302531629152, 0.7587214435950802}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.5387248445885809, 0.8700704983695936}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.35643844676648223`, 0.5756678574069446}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.6471351573591255, 0.7098734516773724}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.34859901893590606`, 0.3823949077859304}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.6903549153333459, 0.5213318323871787}, 14}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.27147072783947207`, 0.20500517754074105`}, 14}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.3769213302526145, -0.9729461079072422}, 7}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.33326035044130586`, -0.8602441275062771}, 7}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.5534265136367049, -0.8938145091462413}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.4283402314601095, -0.6917932269169124}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.6894270649037971, -0.7562654642969203}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.4561480960855884, -0.500370625459065}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.7665553560002341, -0.5788757340517223}, 13}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.41292833811137236`, -0.31182900616887055`}, 13}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.5492819065248636, 0.887120738826274}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.4856554033088557, 0.7843604077987405}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.7082413606297987, 0.7769037635702826}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.5481635969124143, 0.6013068216106137}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.8166516734003458, 0.616706716878059}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.5403241690818401, 0.4080338719895959}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   7, {-0.7029373462614349, -0.7710855369686219}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   7, {-0.6215120438961611, -0.6817662351402489}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   7, {-0.8389378975285295, -0.6335364921192947}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   7, {-0.6493199085216452, -0.4903436336824001}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   8, {0.83265509775149, 0.6287919419646689}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   8, {0.7362038372501287, 0.5559553310325218}, 10}], 
                  0.02254220222992223]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                DiskBox[1, 0.02254220222992223], 
                DiskBox[2, 0.02254220222992223], 
                DiskBox[3, 0.02254220222992223], 
                DiskBox[4, 0.02254220222992223], 
                DiskBox[5, 0.02254220222992223], 
                DiskBox[6, 0.02254220222992223], 
                DiskBox[7, 0.02254220222992223], 
                DiskBox[8, 0.02254220222992223], 
                DiskBox[9, 0.02254220222992223], 
                DiskBox[10, 0.02254220222992223], 
                DiskBox[11, 0.02254220222992223], 
                DiskBox[12, 0.02254220222992223], 
                DiskBox[13, 0.02254220222992223], 
                DiskBox[14, 0.02254220222992223], 
                DiskBox[15, 0.02254220222992223], 
                DiskBox[16, 0.02254220222992223], 
                DiskBox[17, 0.02254220222992223]}}], {
             Background -> GrayLevel[0, 0], FormatType -> TraditionalForm, 
              FrameTicks -> None, ImageSize -> 32}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  StyleBox["\"Points: \"", 
                   RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                  InterpretationBox["\"\\!\\(\\*RowBox[{\\\"10\\\"}]\\)\"", 
                   StringForm["``", 10], Editable -> False]}, "RowDefault"], 
                "SummaryItem"]}, {
               TagBox[
                TemplateBox[{
                  StyleBox["\"Dimensions: \"", 
                   RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                  InterpretationBox["\"\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\"", 
                   StringForm["``", 3], Editable -> False]}, "RowDefault"], 
                "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             GraphicsComplexBox[CompressedData["
1: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
DD7UNnFU6mGhG2+T145RH+SY9ZrzutlY7vy4V2ngKex2UAy4ntEDQ02/GiX9
uKDJkxbtMe2FnIE50gkPudC2yslK4U8vuN6sNTtygQs/bOInhsL7oH7xMpH5
+7lwbMI9rWBHP9j/elIzto4Ll5b2/DvS2g+9zSapiqJcyHELv6J/bQB6/5yh
fejhwNU9a713TQzAq5uXer3SOCCd1ZT4e5IEwwV3F73RYsFbYtPio/vJMLLR
fO8MwblvmZvRMhMfMhyJ/r1/YTsT+vpG+7sayVDt3Z3WHckE0a8R/0rmUaA7
Oumf62UmxF97+LHnEAVWe4QHrlVlQqhcYuJcdwoo+ob4MzkMMFzx1E+lmAJP
OM5No4Lzu/PamhCp6m4ItV2u09LCgSGFhxdOa/XAj6p/Tv2CcyO6d17KS+yB
343jjjHHOSBRFJTLV+yFXRmsOQdlOHA6amCsMKYXjOuKzbkDbBg02+Jet7EP
ajPeVeQlsqEjeJP/18w+UFDZ9aXyPhuIPzddcNbrh/Xha36rG7Khdd7JEBkF
EnhTNTbtaWZACvvN+uBrJNAx116zIZYBpxTHLBbkCtrPDc7GPmLA4CbFZ+Zi
ZEg4K6XXZMaAV38W9+07LpgfvcezC3cwYNUq5eQ4Qf0YSm1IfyjHAG5Oj7nh
TzJYO778IT+DAVfutr2eEtQb29zf6xTx6FCrrrpJn9gHZZcC51i3cUBWN/n9
tiUDsENcpnOpHwcub7w5sn7XINSfJDzw0ufA/Tei9ReshuDYjxADBpcNexLt
Y1fvIkCLiXjhlSA20C6/qPKuIoCLYp+97hY2KPgFPl9tSARH20Huu3oWyJR1
/A6oJoJVGdO/zpIFJZe/kOXfMcDN/l5Y3xoKUHYVqm+QZoLCTHkbqTQyPHE+
mejkzQSKpTbtvRYZhtXvz20ZZcKPubvnlgvmRaPGMpgneE7RxhzWF01BHi35
rhNayoIfzPK0yUQinPb9Xum7jA3K3j3HC+SIQH/aRv9wnQ2h/PYHh3wIsEp/
nVdGUA/0nv31bsZrNuipMFratXvhwOfvn4P/sUBSnkn4zBXk/wWJK8Z3WPAq
b7H60vQ+yFu7TNWLwYR59EEDk8f98ETfb56vDRN4xuvERc0F+c0L2JxOZcD6
BvM/sXsGweRgaubOmwxwcNLzz9AYAn6/6eM7Y4J6keK/lWZHg8W+RI/npYLx
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
              "], {{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                Arrowheads[0.], {
                 ArrowBox[{1, 2}, 0.02254220222992223], 
                 ArrowBox[{1, 5}, 0.02254220222992223], 
                 ArrowBox[{1, 7}, 0.02254220222992223], 
                 ArrowBox[{1, 9}, 0.02254220222992223], 
                 ArrowBox[{1, 11}, 0.02254220222992223], 
                 ArrowBox[{1, 13}, 0.02254220222992223], 
                 ArrowBox[{1, 15}, 0.02254220222992223], 
                 ArrowBox[{1, 17}, 0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-2.1409496216940123`*^-16, -1.0434049156924905`}, 5}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {1.0704748108470062`*^-15, -0.9225412836753133}, 5}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.19317181243605622`, -1.0333779239158283`}, 7}], 
                  0.02254220222992223], 
                 ArrowBox[
                  BezierCurveBox[{
                   2, {-0.1495108326247347, -0.7998123114976872}, 7}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.3696769958201283, -0.9542463251548349}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.24459071364353785`, -0.6313614109083246}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.5056775470872312, -0.8166972803055038}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.272398578269021, -0.43993880945047653`}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.582805838183662, -0.6393075500603161}, 13}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.229178820294798, -0.251397190160288}, 13}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.590645266014236, -0.4460346004393019}, 15}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.12076850752425144`, -0.09120014346806327}, 15}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {-0.04103500681170743, -0.01167546606958506}, 4}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.5674671696890601, 0.16145833033997112`}, 4}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.15069014333422975`, 0.013963498134084052`}, 6}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.7369836857302795, 0.06829159554065786}, 6}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.33873038367193714`, -0.031387992444006356`}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.8613974228519735, -0.07982022606495483}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.49768983777687453`, -0.14160496769998895`}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.9239056164555438, -0.26287381225308243`}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.6061001505474233, -0.3018020143922123}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.9160661886249679, -0.45614676187410347`}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.6493199085216432, -0.4903436336824059}, 14}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.8389378975285393, -0.633536492119288}, 14}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.6215120438961692, -0.6817662351402451}, 16}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.7029373462614268, -0.7710855369686257}, 16}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.19172515014593514`, 1.0256389642036672`}, 6}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.16951651604121815`, 0.9068332652006886}, 6}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.37976539048364444`, 0.9802874736255784}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.2939302531629152, 0.7587214435950802}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.5387248445885809, 0.8700704983695936}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.35643844676648223`, 0.5756678574069446}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.6471351573591255, 0.7098734516773724}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.34859901893590606`, 0.3823949077859304}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.6903549153333459, 0.5213318323871787}, 14}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.27147072783947207`, 0.20500517754074105`}, 14}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.3769213302526145, -0.9729461079072422}, 7}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.33326035044130586`, -0.8602441275062771}, 7}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.5534265136367049, -0.8938145091462413}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.4283402314601095, -0.6917932269169124}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.6894270649037971, -0.7562654642969203}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.4561480960855884, -0.500370625459065}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.7665553560002341, -0.5788757340517223}, 13}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.41292833811137236`, -0.31182900616887055`}, 13}], 
                  0.02254220222992223], 
                 ArrowBox[
                  BezierCurveBox[{
                   6, {0.5492819065248636, 0.887120738826274}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.4856554033088557, 0.7843604077987405}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.7082413606297987, 0.7769037635702826}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.5481635969124143, 0.6013068216106137}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.8166516734003458, 0.616706716878059}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.5403241690818401, 0.4080338719895959}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   7, {-0.7029373462614349, -0.7710855369686219}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   7, {-0.6215120438961611, -0.6817662351402489}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   7, {-0.8389378975285295, -0.6335364921192947}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   7, {-0.6493199085216452, -0.4903436336824001}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   8, {0.83265509775149, 0.6287919419646689}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   8, {0.7362038372501287, 0.5559553310325218}, 10}], 
                  0.02254220222992223]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                DiskBox[1, 0.02254220222992223], 
                DiskBox[2, 0.02254220222992223], 
                DiskBox[3, 0.02254220222992223], 
                DiskBox[4, 0.02254220222992223], 
                DiskBox[5, 0.02254220222992223], 
                DiskBox[6, 0.02254220222992223], 
                DiskBox[7, 0.02254220222992223], 
                DiskBox[8, 0.02254220222992223], 
                DiskBox[9, 0.02254220222992223], 
                DiskBox[10, 0.02254220222992223], 
                DiskBox[11, 0.02254220222992223], 
                DiskBox[12, 0.02254220222992223], 
                DiskBox[13, 0.02254220222992223], 
                DiskBox[14, 0.02254220222992223], 
                DiskBox[15, 0.02254220222992223], 
                DiskBox[16, 0.02254220222992223], 
                DiskBox[17, 0.02254220222992223]}}], {
             Background -> GrayLevel[0, 0], FormatType -> TraditionalForm, 
              FrameTicks -> None, ImageSize -> 32}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  StyleBox["\"Points: \"", 
                   RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                  InterpretationBox["\"\\!\\(\\*RowBox[{\\\"10\\\"}]\\)\"", 
                   StringForm["``", 10], Editable -> False]}, "RowDefault"], 
                "SummaryItem"]}, {
               TagBox[
                TemplateBox[{
                  StyleBox["\"Dimensions: \"", 
                   RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                  InterpretationBox["\"\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\"", 
                   StringForm["``", 3], Editable -> False]}, "RowDefault"], 
                "SummaryItem"]}, {
               TagBox[
                TemplateBox[{
                  StyleBox["\"Simplex Count: \"", 
                   RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                  InterpretationBox["\"\\!\\(\\*RowBox[{\\\"385\\\"}]\\)\"", 
                   StringForm["``", 385], Editable -> False]}, "RowDefault"], 
                "SummaryItem"]}, {
               TagBox[
                TemplateBox[{
                  StyleBox["\"Filtration Length: \"", 
                   RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                  InterpretationBox["\"\\!\\(\\*RowBox[{\\\"45\\\"}]\\)\"", 
                   StringForm["``", 45], Editable -> False]}, "RowDefault"], 
                "SummaryItem"]}, {
               TagBox[
                TemplateBox[{
                  StyleBox["\"Generators: \"", 
                   RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                  InterpretationBox["\"\\!\\(\\*RowBox[{\\\"10\\\"}]\\)\"", 
                   StringForm["``", 10], Editable -> False]}, "RowDefault"], 
                "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  $CellContext`PersistentHomologyObject[<|
   "Points" -> {{0.9589271300722904, 0.8755703406218736, 
     0.5104113619785617}, {0.365070773638551, 0.3133995396571083, 
     0.4898323120443908}, {0.26741698820518556`, 0.8430785912274881, 
     0.9808738939080246}, {0.9335243049381621, 0.44241954730262933`, 
     0.06337626929149276}, {0.41960370149380144`, 0.5949882047651012, 
     0.971834705965744}, {0.9586226504815263, 0.6540411011983964, 
     0.3657454800495634}, {0.07743220336527079, 0.791848999965826, 
     0.5448016539478446}, {0.7039574429458202, 0.1749612447344242, 
     0.1976250431163522}, {0.4007191716796281, 0.5567566282516452, 
     0.8637857743018562}, {0.5017011280053401, 0.07978605757937851, 
     0.8332161136601213}}, "Dimension" -> 3, "MaximumDistance" -> 
    1.2025092590333624`, 
    "Simplices" -> {{1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {10}, {5, 
      9}, {1, 6}, {3, 5}, {3, 9}, {3, 5, 9}, {4, 6}, {4, 8}, {2, 10}, {2, 
      9}, {2, 8}, {3, 7}, {9, 10}, {2, 9, 10}, {7, 9}, {3, 7, 9}, {5, 10}, {5,
       9, 10}, {2, 5}, {2, 5, 9}, {2, 5, 10}, {2, 5, 9, 10}, {2, 7}, {2, 7, 
      9}, {6, 8}, {4, 6, 8}, {5, 7}, {2, 5, 7}, {3, 5, 7}, {5, 7, 9}, {2, 5, 
      7, 9}, {3, 5, 7, 9}, {1, 4}, {1, 4, 6}, {8, 10}, {2, 8, 10}, {2, 6}, {2,
       6, 8}, {2, 4}, {2, 4, 6}, {2, 4, 8}, {2, 4, 6, 8}, {2, 3}, {2, 3, 5}, {
      2, 3, 7}, {2, 3, 9}, {2, 3, 5, 7}, {2, 3, 5, 9}, {2, 3, 7, 9}, {1, 9}, {
      6, 9}, {1, 6, 9}, {2, 6, 9}, {1, 5}, {1, 5, 9}, {1, 8}, {1, 4, 8}, {1, 
      6, 8}, {1, 4, 6, 8}, {3, 10}, {2, 3, 10}, {3, 5, 10}, {3, 9, 10}, {2, 3,
       5, 10}, {2, 3, 9, 10}, {3, 5, 9, 10}, {5, 6}, {1, 5, 6}, {2, 5, 6}, {5,
       6, 9}, {1, 5, 6, 9}, {2, 5, 6, 9}, {1, 2}, {1, 2, 4}, {1, 2, 5}, {1, 2,
       6}, {1, 2, 8}, {1, 2, 9}, {1, 2, 4, 6}, {1, 2, 4, 8}, {1, 2, 5, 6}, {1,
       2, 5, 9}, {1, 2, 6, 8}, {1, 2, 6, 9}, {8, 9}, {1, 8, 9}, {2, 8, 9}, {6,
       8, 9}, {8, 9, 10}, {1, 2, 8, 9}, {1, 6, 8, 9}, {2, 6, 8, 9}, {2, 8, 9, 
      10}, {1, 3}, {1, 2, 3}, {1, 3, 5}, {1, 3, 9}, {1, 2, 3, 5}, {1, 2, 3, 
      9}, {1, 3, 5, 9}, {6, 10}, {2, 6, 10}, {5, 6, 10}, {6, 8, 10}, {6, 9, 
      10}, {2, 5, 6, 10}, {2, 6, 8, 10}, {2, 6, 9, 10}, {5, 6, 9, 10}, {6, 8, 
      9, 10}, {7, 10}, {2, 7, 10}, {3, 7, 10}, {5, 7, 10}, {7, 9, 10}, {2, 3, 
      7, 10}, {2, 5, 7, 10}, {2, 7, 9, 10}, {3, 5, 7, 10}, {3, 7, 9, 10}, {5, 
      7, 9, 10}, {1, 7}, {1, 2, 7}, {1, 3, 7}, {1, 5, 7}, {1, 7, 9}, {1, 2, 3,
       7}, {1, 2, 5, 7}, {1, 2, 7, 9}, {1, 3, 5, 7}, {1, 3, 7, 9}, {1, 5, 7, 
      9}, {6, 7}, {1, 6, 7}, {2, 6, 7}, {5, 6, 7}, {6, 7, 9}, {6, 7, 10}, {1, 
      2, 6, 7}, {1, 5, 6, 7}, {1, 6, 7, 9}, {2, 5, 6, 7}, {2, 6, 7, 9}, {2, 6,
       7, 10}, {5, 6, 7, 9}, {5, 6, 7, 10}, {6, 7, 9, 10}, {5, 8}, {1, 5, 
      8}, {2, 5, 8}, {5, 6, 8}, {5, 8, 9}, {5, 8, 10}, {1, 2, 5, 8}, {1, 5, 6,
       8}, {1, 5, 8, 9}, {2, 5, 6, 8}, {2, 5, 8, 9}, {2, 5, 8, 10}, {5, 6, 8, 
      9}, {5, 6, 8, 10}, {5, 8, 9, 10}, {3, 6}, {1, 3, 6}, {2, 3, 6}, {3, 5, 
      6}, {3, 6, 7}, {3, 6, 9}, {3, 6, 10}, {1, 2, 3, 6}, {1, 3, 5, 6}, {1, 3,
       6, 7}, {1, 3, 6, 9}, {2, 3, 5, 6}, {2, 3, 6, 7}, {2, 3, 6, 9}, {2, 3, 
      6, 10}, {3, 5, 6, 7}, {3, 5, 6, 9}, {3, 5, 6, 10}, {3, 6, 7, 9}, {3, 6, 
      7, 10}, {3, 6, 9, 10}, {7, 8}, {1, 7, 8}, {2, 7, 8}, {5, 7, 8}, {6, 7, 
      8}, {7, 8, 9}, {7, 8, 10}, {1, 2, 7, 8}, {1, 5, 7, 8}, {1, 6, 7, 8}, {1,
       7, 8, 9}, {2, 5, 7, 8}, {2, 6, 7, 8}, {2, 7, 8, 9}, {2, 7, 8, 10}, {5, 
      6, 7, 8}, {5, 7, 8, 9}, {5, 7, 8, 10}, {6, 7, 8, 9}, {6, 7, 8, 10}, {7, 
      8, 9, 10}, {4, 10}, {2, 4, 10}, {4, 6, 10}, {4, 8, 10}, {2, 4, 6, 10}, {
      2, 4, 8, 10}, {4, 6, 8, 10}, {4, 9}, {1, 4, 9}, {2, 4, 9}, {4, 6, 9}, {
      4, 8, 9}, {4, 9, 10}, {1, 2, 4, 9}, {1, 4, 6, 9}, {1, 4, 8, 9}, {2, 4, 
      6, 9}, {2, 4, 8, 9}, {2, 4, 9, 10}, {4, 6, 8, 9}, {4, 6, 9, 10}, {4, 8, 
      9, 10}, {1, 10}, {1, 2, 10}, {1, 3, 10}, {1, 4, 10}, {1, 5, 10}, {1, 6, 
      10}, {1, 7, 10}, {1, 8, 10}, {1, 9, 10}, {1, 2, 3, 10}, {1, 2, 4, 10}, {
      1, 2, 5, 10}, {1, 2, 6, 10}, {1, 2, 7, 10}, {1, 2, 8, 10}, {1, 2, 9, 
      10}, {1, 3, 5, 10}, {1, 3, 6, 10}, {1, 3, 7, 10}, {1, 3, 9, 10}, {1, 4, 
      6, 10}, {1, 4, 8, 10}, {1, 4, 9, 10}, {1, 5, 6, 10}, {1, 5, 7, 10}, {1, 
      5, 8, 10}, {1, 5, 9, 10}, {1, 6, 7, 10}, {1, 6, 8, 10}, {1, 6, 9, 10}, {
      1, 7, 8, 10}, {1, 7, 9, 10}, {1, 8, 9, 10}, {4, 7}, {1, 4, 7}, {2, 4, 
      7}, {4, 6, 7}, {4, 7, 8}, {4, 7, 9}, {4, 7, 10}, {1, 2, 4, 7}, {1, 4, 6,
       7}, {1, 4, 7, 8}, {1, 4, 7, 9}, {1, 4, 7, 10}, {2, 4, 6, 7}, {2, 4, 7, 
      8}, {2, 4, 7, 9}, {2, 4, 7, 10}, {4, 6, 7, 8}, {4, 6, 7, 9}, {4, 6, 7, 
      10}, {4, 7, 8, 9}, {4, 7, 8, 10}, {4, 7, 9, 10}, {4, 5}, {1, 4, 5}, {2, 
      4, 5}, {4, 5, 6}, {4, 5, 7}, {4, 5, 8}, {4, 5, 9}, {4, 5, 10}, {1, 2, 4,
       5}, {1, 4, 5, 6}, {1, 4, 5, 7}, {1, 4, 5, 8}, {1, 4, 5, 9}, {1, 4, 5, 
      10}, {2, 4, 5, 6}, {2, 4, 5, 7}, {2, 4, 5, 8}, {2, 4, 5, 9}, {2, 4, 5, 
      10}, {4, 5, 6, 7}, {4, 5, 6, 8}, {4, 5, 6, 9}, {4, 5, 6, 10}, {4, 5, 7, 
      8}, {4, 5, 7, 9}, {4, 5, 7, 10}, {4, 5, 8, 9}, {4, 5, 8, 10}, {4, 5, 9, 
      10}, {3, 8}, {1, 3, 8}, {2, 3, 8}, {3, 5, 8}, {3, 6, 8}, {3, 7, 8}, {3, 
      8, 9}, {3, 8, 10}, {1, 2, 3, 8}, {1, 3, 5, 8}, {1, 3, 6, 8}, {1, 3, 7, 
      8}, {1, 3, 8, 9}, {1, 3, 8, 10}, {2, 3, 5, 8}, {2, 3, 6, 8}, {2, 3, 7, 
      8}, {2, 3, 8, 9}, {2, 3, 8, 10}, {3, 5, 6, 8}, {3, 5, 7, 8}, {3, 5, 8, 
      9}, {3, 5, 8, 10}, {3, 6, 7, 8}, {3, 6, 8, 9}, {3, 6, 8, 10}, {3, 7, 8, 
      9}, {3, 7, 8, 10}, {3, 8, 9, 10}, {3, 4}, {1, 3, 4}, {2, 3, 4}, {3, 4, 
      5}, {3, 4, 6}, {3, 4, 7}, {3, 4, 8}, {3, 4, 9}, {3, 4, 10}, {1, 2, 3, 
      4}, {1, 3, 4, 5}, {1, 3, 4, 6}, {1, 3, 4, 7}, {1, 3, 4, 8}, {1, 3, 4, 
      9}, {1, 3, 4, 10}, {2, 3, 4, 5}, {2, 3, 4, 6}, {2, 3, 4, 7}, {2, 3, 4, 
      8}, {2, 3, 4, 9}, {2, 3, 4, 10}, {3, 4, 5, 6}, {3, 4, 5, 7}, {3, 4, 5, 
      8}, {3, 4, 5, 9}, {3, 4, 5, 10}, {3, 4, 6, 7}, {3, 4, 6, 8}, {3, 4, 6, 
      9}, {3, 4, 6, 10}, {3, 4, 7, 8}, {3, 4, 7, 9}, {3, 4, 7, 10}, {3, 4, 8, 
      9}, {3, 4, 8, 10}, {3, 4, 9, 10}}, "SimplexWeights" -> CompressedData["
1:eJxTTMoPSmVkYGBoBBFUBi86naWm7NlrLxQbnfTi3QX7p/PtMm8uumQvEpLM
sa/vKpzO69g8+8ia6/aHfGPf9SvfsH+0KuCe7+/b9hd6DrS6Lb1jP3vai0rD
X3ftjz+vvuA9757950nvz0x3vg+npawZA7NjH8Bptamz2IXdHsJpx54te45+
wk2fmfN8TeRnBB3Im6CmqvsITs9rCX3NMId4uk7uyonS94/hNGeV85KE/qdw
2m/9du4ljs/gdJK7zobNMs9x0oLqdkzbg0in1/1d/iuk8rm96mLdXDmlFxi0
u+cym4AcBL3/+r6NMfdf4qRtfwnL7/hNOi2i0xyiyPaKaPrWzcwyfl3a0Ysy
/ktszqKcdnB7YbnvBOl0YI4m/93rr6lGx3npCVaLvqE6LSur81s7mvp0p0Ew
g63MW7rT0q0rml3n0Z9+cTm+pdbi3aCnVYtjPRgcBj99ct+kiNhO0mnhK7sK
Qv/Qn1604+Cq34rvRzy9Wfbx/v9rPwwZuqEwOHLBg+FPx4rxP7J/8nHY0/u+
e0VW2X4epQnQAG1F6TM=
     "], 
    "IntervalIndices" -> {{9, 11}, {6, 12}, {5, 13}, {4, 16}, {8, 17}, {10, 
     18}, {3, 19}, {2, 20}, {7, 21}, {59, 62}}, 
    "Intervals" -> {{0., 0.11615872994619958`}, {0., 0.26458177189984255`}, {
     0., 0.2911895301608623}, {0., 0.36991992192463996`}, {0., 
     0.3771705463197713}, {0., 0.4372133894964191}, {0., 
     0.44758761464818253`}, {0., 0.4683955851090588}, {0., 
     0.4784116302467933}, {0.7335610290173713, 0.7541648991001223}}, 
    "FiltrationRadii" -> CompressedData["
1:eJwBfQGC/iFib1JlAQAAAC4AAAAAAAAAAAAAAOiJQxqUvL0/El1bYuju0D/l
nz5p2aLSPxRUYwi+jtU/boizm8Ss1z/CTV3ujyPYP+KqUN5N+9s/0IzAhUal
3D+bluh5MfrdP8fne9BLnt4/85LvzJdD3z8aOwFRa13gPyaVmgcTRuE/QYy0
vMXy4T/MnOesWfPhP1ENYCYlLeI/noRV6wCc4j9+HtTIde/jPwl6Q6Rgj+U/
Tq+3C6RB5j9iRyywsxznPxEnPgK3Uuc/rv2n+lR55z8loy1tHiLoP0dJpjxQ
bOg/v9e+sVzf6T89+hMfuPvpPxQsg1QhBuo/2tlpdg8t6j+iaP8Ys2rqP0BG
6Dm+yOo/UWwpD93X6z9eSi4RexXsPx0dLPsrW+w/iTBTAD0c7T8bhaiDRZ7t
P+jTX4R9OO4/JXNdSABA7j/JvpJYXYnuPxPUunBV/O4/orjBqvsh7z+zHeO/
/63wP4BxU1mg4PA/XRYP4j/k8T++90pZej3zP1Aetxo=
     "], "Edges" -> {
      DirectedEdge[11, 14], 
      DirectedEdge[13, 14], 
      DirectedEdge[12, 16], 
      DirectedEdge[11, 19], 
      DirectedEdge[13, 19], 
      DirectedEdge[17, 20], 
      DirectedEdge[16, 20], 
      DirectedEdge[18, 22], 
      DirectedEdge[11, 22], 
      DirectedEdge[13, 22], 
      DirectedEdge[19, 22], 
      DirectedEdge[11, 24], 
      DirectedEdge[21, 24], 
      DirectedEdge[13, 24], 
      DirectedEdge[18, 26], 
      DirectedEdge[13, 26], 
      DirectedEdge[19, 26], 
      DirectedEdge[13, 28], 
      DirectedEdge[19, 28], 
      DirectedEdge[29, 30], 
      DirectedEdge[27, 30], 
      DirectedEdge[23, 30], 
      DirectedEdge[21, 32], 
      DirectedEdge[19, 32], 
      DirectedEdge[17, 34], 
      DirectedEdge[12, 34], 
      DirectedEdge[16, 34], 
      DirectedEdge[21, 36], 
      DirectedEdge[13, 36], 
      DirectedEdge[37, 38], 
      DirectedEdge[33, 38], 
      DirectedEdge[29, 38], 
      DirectedEdge[25, 38], 
      DirectedEdge[15, 38], 
      DirectedEdge[37, 39], 
      DirectedEdge[33, 39], 
      DirectedEdge[29, 39], 
      DirectedEdge[40, 41], 
      DirectedEdge[16, 42], 
      DirectedEdge[18, 44], 
      DirectedEdge[17, 44], 
      DirectedEdge[16, 44], 
      DirectedEdge[20, 44], 
      DirectedEdge[12, 46], 
      DirectedEdge[20, 46], 
      DirectedEdge[16, 48], 
      DirectedEdge[20, 48], 
      DirectedEdge[49, 50], 
      DirectedEdge[47, 50], 
      DirectedEdge[35, 50], 
      DirectedEdge[19, 52], 
      DirectedEdge[53, 54], 
      DirectedEdge[33, 54], 
      DirectedEdge[29, 54], 
      DirectedEdge[25, 54], 
      DirectedEdge[15, 54], 
      DirectedEdge[53, 55], 
      DirectedEdge[29, 55], 
      DirectedEdge[15, 55], 
      DirectedEdge[57, 58], 
      DirectedEdge[56, 58], 
      DirectedEdge[41, 58], 
      DirectedEdge[11, 59], 
      DirectedEdge[13, 59], 
      DirectedEdge[19, 59], 
      DirectedEdge[20, 59], 
      DirectedEdge[11, 60], 
      DirectedEdge[12, 60], 
      DirectedEdge[13, 60], 
      DirectedEdge[19, 60], 
      DirectedEdge[20, 60], 
      DirectedEdge[61, 62], 
      DirectedEdge[13, 63], 
      DirectedEdge[19, 63], 
      DirectedEdge[20, 63], 
      DirectedEdge[17, 65], 
      DirectedEdge[16, 65], 
      DirectedEdge[66, 67], 
      DirectedEdge[43, 67], 
      DirectedEdge[35, 67], 
      DirectedEdge[18, 69], 
      DirectedEdge[19, 69], 
      DirectedEdge[70, 71], 
      DirectedEdge[53, 71], 
      DirectedEdge[29, 71], 
      DirectedEdge[27, 71], 
      DirectedEdge[23, 71], 
      DirectedEdge[70, 72], 
      DirectedEdge[53, 72], 
      DirectedEdge[29, 72], 
      DirectedEdge[23, 72], 
      DirectedEdge[15, 72], 
      DirectedEdge[74, 75], 
      DirectedEdge[73, 75], 
      DirectedEdge[57, 75], 
      DirectedEdge[31, 75], 
      DirectedEdge[12, 76], 
      DirectedEdge[13, 76], 
      DirectedEdge[19, 76], 
      DirectedEdge[20, 76], 
      DirectedEdge[77, 78], 
      DirectedEdge[64, 78], 
      DirectedEdge[62, 78], 
      DirectedEdge[29, 78], 
      DirectedEdge[77, 79], 
      DirectedEdge[64, 79], 
      DirectedEdge[61, 79], 
      DirectedEdge[80, 81], 
      DirectedEdge[20, 82], 
      DirectedEdge[83, 84], 
      DirectedEdge[64, 84], 
      DirectedEdge[62, 84], 
      DirectedEdge[49, 84], 
      DirectedEdge[43, 84], 
      DirectedEdge[29, 84], 
      DirectedEdge[83, 85], 
      DirectedEdge[49, 85], 
      DirectedEdge[43, 85], 
      DirectedEdge[83, 86], 
      DirectedEdge[66, 86], 
      DirectedEdge[49, 86], 
      DirectedEdge[47, 86], 
      DirectedEdge[35, 86], 
      DirectedEdge[83, 87], 
      DirectedEdge[62, 87], 
      DirectedEdge[49, 87], 
      DirectedEdge[43, 87], 
      DirectedEdge[88, 90], 
      DirectedEdge[89, 92], 
      DirectedEdge[88, 92], 
      DirectedEdge[68, 92], 
      DirectedEdge[51, 92], 
      DirectedEdge[91, 93], 
      DirectedEdge[88, 93], 
      DirectedEdge[90, 93], 
      DirectedEdge[81, 93], 
      DirectedEdge[11, 94], 
      DirectedEdge[17, 94], 
      DirectedEdge[13, 94], 
      DirectedEdge[16, 94], 
      DirectedEdge[19, 94], 
      DirectedEdge[20, 94], 
      DirectedEdge[95, 96], 
      DirectedEdge[66, 96], 
      DirectedEdge[62, 96], 
      DirectedEdge[47, 96], 
      DirectedEdge[43, 96], 
      DirectedEdge[35, 96], 
      DirectedEdge[95, 97], 
      DirectedEdge[66, 97], 
      DirectedEdge[61, 97], 
      DirectedEdge[43, 97], 
      DirectedEdge[35, 97], 
      DirectedEdge[95, 98], 
      DirectedEdge[66, 98], 
      DirectedEdge[62, 98], 
      DirectedEdge[47, 98], 
      DirectedEdge[45, 98], 
      DirectedEdge[43, 98], 
      DirectedEdge[35, 98], 
      DirectedEdge[23, 98], 
      DirectedEdge[100, 101], 
      DirectedEdge[99, 101], 
      DirectedEdge[91, 101], 
      DirectedEdge[89, 101], 
      DirectedEdge[90, 101], 
      DirectedEdge[81, 101], 
      DirectedEdge[68, 101], 
      DirectedEdge[51, 101], 
      DirectedEdge[19, 103], 
      DirectedEdge[20, 103], 
      DirectedEdge[104, 105], 
      DirectedEdge[83, 105], 
      DirectedEdge[64, 105], 
      DirectedEdge[62, 105], 
      DirectedEdge[53, 105], 
      DirectedEdge[49, 105], 
      DirectedEdge[43, 105], 
      DirectedEdge[29, 105], 
      DirectedEdge[104, 106], 
      DirectedEdge[83, 106], 
      DirectedEdge[62, 106], 
      DirectedEdge[53, 106], 
      DirectedEdge[49, 106], 
      DirectedEdge[43, 106], 
      DirectedEdge[29, 106], 
      DirectedEdge[15, 106], 
      DirectedEdge[108, 109], 
      DirectedEdge[107, 109], 
      DirectedEdge[91, 109], 
      DirectedEdge[57, 109], 
      DirectedEdge[18, 110], 
      DirectedEdge[12, 110], 
      DirectedEdge[20, 110], 
      DirectedEdge[111, 112], 
      DirectedEdge[77, 112], 
      DirectedEdge[64, 112], 
      DirectedEdge[62, 112], 
      DirectedEdge[27, 112], 
      DirectedEdge[23, 112], 
      DirectedEdge[111, 113], 
      DirectedEdge[47, 113], 
      DirectedEdge[45, 113], 
      DirectedEdge[111, 114], 
      DirectedEdge[61, 114], 
      DirectedEdge[62, 114], 
      DirectedEdge[23, 114], 
      DirectedEdge[117, 118], 
      DirectedEdge[115, 118], 
      DirectedEdge[80, 118], 
      DirectedEdge[81, 118], 
      DirectedEdge[31, 118], 
      DirectedEdge[117, 119], 
      DirectedEdge[116, 119], 
      DirectedEdge[102, 119], 
      DirectedEdge[100, 119], 
      DirectedEdge[99, 119], 
      DirectedEdge[91, 119], 
      DirectedEdge[89, 119], 
      DirectedEdge[90, 119], 
      DirectedEdge[81, 119], 
      DirectedEdge[68, 119], 
      DirectedEdge[51, 119], 
      DirectedEdge[18, 120], 
      DirectedEdge[21, 120], 
      DirectedEdge[19, 120], 
      DirectedEdge[121, 122], 
      DirectedEdge[70, 122], 
      DirectedEdge[53, 122], 
      DirectedEdge[33, 122], 
      DirectedEdge[29, 122], 
      DirectedEdge[25, 122], 
      DirectedEdge[15, 122], 
      DirectedEdge[121, 123], 
      DirectedEdge[37, 123], 
      DirectedEdge[29, 123], 
      DirectedEdge[27, 123], 
      DirectedEdge[23, 123], 
      DirectedEdge[121, 124], 
      DirectedEdge[33, 124], 
      DirectedEdge[23, 124], 
      DirectedEdge[126, 128], 
      DirectedEdge[125, 128], 
      DirectedEdge[73, 128], 
      DirectedEdge[56, 128], 
      DirectedEdge[127, 129], 
      DirectedEdge[125, 129], 
      DirectedEdge[74, 129], 
      DirectedEdge[57, 129], 
      DirectedEdge[56, 129], 
      DirectedEdge[41, 129], 
      DirectedEdge[127, 130], 
      DirectedEdge[126, 130], 
      DirectedEdge[40, 130], 
      DirectedEdge[31, 130], 
      DirectedEdge[21, 131], 
      DirectedEdge[19, 131], 
      DirectedEdge[20, 131], 
      DirectedEdge[132, 133], 
      DirectedEdge[104, 133], 
      DirectedEdge[53, 133], 
      DirectedEdge[33, 133], 
      DirectedEdge[29, 133], 
      DirectedEdge[25, 133], 
      DirectedEdge[15, 133], 
      DirectedEdge[132, 134], 
      DirectedEdge[83, 134], 
      DirectedEdge[64, 134], 
      DirectedEdge[62, 134], 
      DirectedEdge[49, 134], 
      DirectedEdge[43, 134], 
      DirectedEdge[37, 134], 
      DirectedEdge[29, 134], 
      DirectedEdge[132, 135], 
      DirectedEdge[83, 135], 
      DirectedEdge[62, 135], 
      DirectedEdge[49, 135], 
      DirectedEdge[43, 135], 
      DirectedEdge[33, 135], 
      DirectedEdge[137, 139], 
      DirectedEdge[136, 139], 
      DirectedEdge[107, 139], 
      DirectedEdge[56, 139], 
      DirectedEdge[138, 140], 
      DirectedEdge[136, 140], 
      DirectedEdge[108, 140], 
      DirectedEdge[57, 140], 
      DirectedEdge[56, 140], 
      DirectedEdge[41, 140], 
      DirectedEdge[138, 141], 
      DirectedEdge[137, 141], 
      DirectedEdge[91, 141], 
      DirectedEdge[40, 141], 
      DirectedEdge[21, 142], 
      DirectedEdge[12, 142], 
      DirectedEdge[19, 142], 
      DirectedEdge[20, 142], 
      DirectedEdge[143, 144], 
      DirectedEdge[132, 144], 
      DirectedEdge[83, 144], 
      DirectedEdge[49, 144], 
      DirectedEdge[43, 144], 
      DirectedEdge[143, 145], 
      DirectedEdge[132, 145], 
      DirectedEdge[83, 145], 
      DirectedEdge[77, 145], 
      DirectedEdge[64, 145], 
      DirectedEdge[62, 145], 
      DirectedEdge[49, 145], 
      DirectedEdge[43, 145], 
      DirectedEdge[37, 145], 
      DirectedEdge[29, 145], 
      DirectedEdge[143, 146], 
      DirectedEdge[132, 146], 
      DirectedEdge[83, 146], 
      DirectedEdge[61, 146], 
      DirectedEdge[62, 146], 
      DirectedEdge[49, 146], 
      DirectedEdge[43, 146], 
      DirectedEdge[33, 146], 
      DirectedEdge[143, 147], 
      DirectedEdge[132, 147], 
      DirectedEdge[121, 147], 
      DirectedEdge[111, 147], 
      DirectedEdge[83, 147], 
      DirectedEdge[49, 147], 
      DirectedEdge[43, 147], 
      DirectedEdge[149, 151], 
      DirectedEdge[148, 151], 
      DirectedEdge[137, 151], 
      DirectedEdge[88, 151], 
      DirectedEdge[90, 151], 
      DirectedEdge[150, 152], 
      DirectedEdge[148, 152], 
      DirectedEdge[138, 152], 
      DirectedEdge[91, 152], 
      DirectedEdge[88, 152], 
      DirectedEdge[90, 152], 
      DirectedEdge[81, 152], 
      DirectedEdge[150, 154], 
      DirectedEdge[149, 154], 
      DirectedEdge[138, 154], 
      DirectedEdge[137, 154], 
      DirectedEdge[91, 154], 
      DirectedEdge[80, 154], 
      DirectedEdge[40, 154], 
      DirectedEdge[153, 155], 
      DirectedEdge[149, 155], 
      DirectedEdge[148, 155], 
      DirectedEdge[137, 155], 
      DirectedEdge[126, 155], 
      DirectedEdge[115, 155], 
      DirectedEdge[88, 155], 
      DirectedEdge[90, 155], 
      DirectedEdge[153, 156], 
      DirectedEdge[150, 156], 
      DirectedEdge[148, 156], 
      DirectedEdge[138, 156], 
      DirectedEdge[127, 156], 
      DirectedEdge[117, 156], 
      DirectedEdge[91, 156], 
      DirectedEdge[88, 156], 
      DirectedEdge[90, 156], 
      DirectedEdge[81, 156], 
      DirectedEdge[17, 157], 
      DirectedEdge[13, 157], 
      DirectedEdge[16, 157], 
      DirectedEdge[19, 157], 
      DirectedEdge[20, 157], 
      DirectedEdge[158, 159], 
      DirectedEdge[66, 159], 
      DirectedEdge[64, 159], 
      DirectedEdge[62, 159], 
      DirectedEdge[47, 159], 
      DirectedEdge[43, 159], 
      DirectedEdge[35, 159], 
      DirectedEdge[29, 159], 
      DirectedEdge[158, 160], 
      DirectedEdge[77, 160], 
      DirectedEdge[66, 160], 
      DirectedEdge[43, 160], 
      DirectedEdge[35, 160], 
      DirectedEdge[158, 161], 
      DirectedEdge[95, 161], 
      DirectedEdge[64, 161], 
      DirectedEdge[158, 162], 
      DirectedEdge[66, 162], 
      DirectedEdge[64, 162], 
      DirectedEdge[62, 162], 
      DirectedEdge[47, 162], 
      DirectedEdge[45, 162], 
      DirectedEdge[43, 162], 
      DirectedEdge[35, 162], 
      DirectedEdge[27, 162], 
      DirectedEdge[23, 162], 
      DirectedEdge[164, 166], 
      DirectedEdge[163, 166], 
      DirectedEdge[89, 166], 
      DirectedEdge[90, 166], 
      DirectedEdge[68, 166], 
      DirectedEdge[51, 166], 
      DirectedEdge[165, 167], 
      DirectedEdge[163, 167], 
      DirectedEdge[99, 167], 
      DirectedEdge[91, 167], 
      DirectedEdge[165, 169], 
      DirectedEdge[164, 169], 
      DirectedEdge[100, 169], 
      DirectedEdge[80, 169], 
      DirectedEdge[168, 170], 
      DirectedEdge[164, 170], 
      DirectedEdge[163, 170], 
      DirectedEdge[116, 170], 
      DirectedEdge[115, 170], 
      DirectedEdge[89, 170], 
      DirectedEdge[90, 170], 
      DirectedEdge[68, 170], 
      DirectedEdge[51, 170], 
      DirectedEdge[168, 171], 
      DirectedEdge[165, 171], 
      DirectedEdge[163, 171], 
      DirectedEdge[102, 171], 
      DirectedEdge[99, 171], 
      DirectedEdge[91, 171], 
      DirectedEdge[31, 171], 
      DirectedEdge[12, 172], 
      DirectedEdge[19, 172], 
      DirectedEdge[20, 172], 
      DirectedEdge[173, 174], 
      DirectedEdge[104, 174], 
      DirectedEdge[83, 174], 
      DirectedEdge[49, 174], 
      DirectedEdge[43, 174], 
      DirectedEdge[173, 175], 
      DirectedEdge[104, 175], 
      DirectedEdge[83, 175], 
      DirectedEdge[77, 175], 
      DirectedEdge[64, 175], 
      DirectedEdge[62, 175], 
      DirectedEdge[53, 175], 
      DirectedEdge[49, 175], 
      DirectedEdge[43, 175], 
      DirectedEdge[29, 175], 
      DirectedEdge[173, 176], 
      DirectedEdge[143, 176], 
      DirectedEdge[132, 176], 
      DirectedEdge[104, 176], 
      DirectedEdge[53, 176], 
      DirectedEdge[33, 176], 
      DirectedEdge[29, 176], 
      DirectedEdge[25, 176], 
      DirectedEdge[15, 176], 
      DirectedEdge[173, 177], 
      DirectedEdge[104, 177], 
      DirectedEdge[83, 177], 
      DirectedEdge[61, 177], 
      DirectedEdge[62, 177], 
      DirectedEdge[53, 177], 
      DirectedEdge[49, 177], 
      DirectedEdge[43, 177], 
      DirectedEdge[29, 177], 
      DirectedEdge[15, 177], 
      DirectedEdge[173, 178], 
      DirectedEdge[111, 178], 
      DirectedEdge[104, 178], 
      DirectedEdge[83, 178], 
      DirectedEdge[70, 178], 
      DirectedEdge[49, 178], 
      DirectedEdge[43, 178], 
      DirectedEdge[180, 183], 
      DirectedEdge[179, 183], 
      DirectedEdge[107, 183], 
      DirectedEdge[88, 183], 
      DirectedEdge[90, 183], 
      DirectedEdge[181, 184], 
      DirectedEdge[179, 184], 
      DirectedEdge[148, 184], 
      DirectedEdge[136, 184], 
      DirectedEdge[182, 185], 
      DirectedEdge[179, 185], 
      DirectedEdge[108, 185], 
      DirectedEdge[91, 185], 
      DirectedEdge[88, 185], 
      DirectedEdge[90, 185], 
      DirectedEdge[81, 185], 
      DirectedEdge[181, 187], 
      DirectedEdge[180, 187], 
      DirectedEdge[149, 187], 
      DirectedEdge[137, 187], 
      DirectedEdge[136, 187], 
      DirectedEdge[107, 187], 
      DirectedEdge[56, 187], 
      DirectedEdge[182, 188], 
      DirectedEdge[180, 188], 
      DirectedEdge[108, 188], 
      DirectedEdge[107, 188], 
      DirectedEdge[91, 188], 
      DirectedEdge[80, 188], 
      DirectedEdge[57, 188], 
      DirectedEdge[186, 189], 
      DirectedEdge[180, 189], 
      DirectedEdge[179, 189], 
      DirectedEdge[115, 189], 
      DirectedEdge[107, 189], 
      DirectedEdge[88, 189], 
      DirectedEdge[90, 189], 
      DirectedEdge[73, 189], 
      DirectedEdge[182, 190], 
      DirectedEdge[181, 190], 
      DirectedEdge[150, 190], 
      DirectedEdge[138, 190], 
      DirectedEdge[136, 190], 
      DirectedEdge[108, 190], 
      DirectedEdge[57, 190], 
      DirectedEdge[56, 190], 
      DirectedEdge[41, 190], 
      DirectedEdge[186, 191], 
      DirectedEdge[181, 191], 
      DirectedEdge[179, 191], 
      DirectedEdge[153, 191], 
      DirectedEdge[148, 191], 
      DirectedEdge[136, 191], 
      DirectedEdge[125, 191], 
      DirectedEdge[186, 192], 
      DirectedEdge[182, 192], 
      DirectedEdge[179, 192], 
      DirectedEdge[117, 192], 
      DirectedEdge[108, 192], 
      DirectedEdge[91, 192], 
      DirectedEdge[88, 192], 
      DirectedEdge[90, 192], 
      DirectedEdge[81, 192], 
      DirectedEdge[74, 192], 
      DirectedEdge[17, 193], 
      DirectedEdge[21, 193], 
      DirectedEdge[16, 193], 
      DirectedEdge[19, 193], 
      DirectedEdge[20, 193], 
      DirectedEdge[194, 195], 
      DirectedEdge[132, 195], 
      DirectedEdge[83, 195], 
      DirectedEdge[66, 195], 
      DirectedEdge[49, 195], 
      DirectedEdge[47, 195], 
      DirectedEdge[35, 195], 
      DirectedEdge[194, 196], 
      DirectedEdge[158, 196], 
      DirectedEdge[132, 196], 
      DirectedEdge[83, 196], 
      DirectedEdge[64, 196], 
      DirectedEdge[62, 196], 
      DirectedEdge[49, 196], 
      DirectedEdge[43, 196], 
      DirectedEdge[37, 196], 
      DirectedEdge[29, 196], 
      DirectedEdge[194, 197], 
      DirectedEdge[143, 197], 
      DirectedEdge[66, 197], 
      DirectedEdge[43, 197], 
      DirectedEdge[35, 197], 
      DirectedEdge[194, 198], 
      DirectedEdge[132, 198], 
      DirectedEdge[95, 198], 
      DirectedEdge[83, 198], 
      DirectedEdge[62, 198], 
      DirectedEdge[49, 198], 
      DirectedEdge[43, 198], 
      DirectedEdge[33, 198], 
      DirectedEdge[194, 199], 
      DirectedEdge[132, 199], 
      DirectedEdge[121, 199], 
      DirectedEdge[83, 199], 
      DirectedEdge[66, 199], 
      DirectedEdge[49, 199], 
      DirectedEdge[47, 199], 
      DirectedEdge[45, 199], 
      DirectedEdge[35, 199], 
      DirectedEdge[201, 204], 
      DirectedEdge[200, 204], 
      DirectedEdge[163, 204], 
      DirectedEdge[137, 204], 
      DirectedEdge[202, 205], 
      DirectedEdge[200, 205], 
      DirectedEdge[148, 205], 
      DirectedEdge[89, 205], 
      DirectedEdge[88, 205], 
      DirectedEdge[68, 205], 
      DirectedEdge[51, 205], 
      DirectedEdge[203, 206], 
      DirectedEdge[200, 206], 
      DirectedEdge[138, 206], 
      DirectedEdge[99, 206], 
      DirectedEdge[202, 208], 
      DirectedEdge[201, 208], 
      DirectedEdge[164, 208], 
      DirectedEdge[149, 208], 
      DirectedEdge[203, 209], 
      DirectedEdge[201, 209], 
      DirectedEdge[165, 209], 
      DirectedEdge[138, 209], 
      DirectedEdge[137, 209], 
      DirectedEdge[91, 209], 
      DirectedEdge[40, 209], 
      DirectedEdge[207, 210], 
      DirectedEdge[201, 210], 
      DirectedEdge[200, 210], 
      DirectedEdge[168, 210], 
      DirectedEdge[163, 210], 
      DirectedEdge[137, 210], 
      DirectedEdge[126, 210], 
      DirectedEdge[203, 211], 
      DirectedEdge[202, 211], 
      DirectedEdge[150, 211], 
      DirectedEdge[100, 211], 
      DirectedEdge[207, 212], 
      DirectedEdge[202, 212], 
      DirectedEdge[200, 212], 
      DirectedEdge[153, 212], 
      DirectedEdge[148, 212], 
      DirectedEdge[116, 212], 
      DirectedEdge[89, 212], 
      DirectedEdge[88, 212], 
      DirectedEdge[68, 212], 
      DirectedEdge[51, 212], 
      DirectedEdge[207, 213], 
      DirectedEdge[203, 213], 
      DirectedEdge[200, 213], 
      DirectedEdge[138, 213], 
      DirectedEdge[127, 213], 
      DirectedEdge[102, 213], 
      DirectedEdge[99, 213], 
      DirectedEdge[18, 214], 
      DirectedEdge[16, 214], 
      DirectedEdge[20, 214], 
      DirectedEdge[215, 216], 
      DirectedEdge[111, 216], 
      DirectedEdge[49, 216], 
      DirectedEdge[215, 217], 
      DirectedEdge[49, 217], 
      DirectedEdge[47, 217], 
      DirectedEdge[45, 217], 
      DirectedEdge[35, 217], 
      DirectedEdge[219, 220], 
      DirectedEdge[218, 220], 
      DirectedEdge[116, 220], 
      DirectedEdge[51, 220], 
      DirectedEdge[11, 221], 
      DirectedEdge[13, 221], 
      DirectedEdge[16, 221], 
      DirectedEdge[19, 221], 
      DirectedEdge[20, 221], 
      DirectedEdge[222, 223], 
      DirectedEdge[62, 223], 
      DirectedEdge[49, 223], 
      DirectedEdge[43, 223], 
      DirectedEdge[222, 224], 
      DirectedEdge[61, 224], 
      DirectedEdge[43, 224], 
      DirectedEdge[222, 225], 
      DirectedEdge[95, 225], 
      DirectedEdge[66, 225], 
      DirectedEdge[222, 226], 
      DirectedEdge[215, 226], 
      DirectedEdge[62, 226], 
      DirectedEdge[49, 226], 
      DirectedEdge[43, 226], 
      DirectedEdge[23, 226], 
      DirectedEdge[228, 230], 
      DirectedEdge[227, 230], 
      DirectedEdge[91, 230], 
      DirectedEdge[90, 230], 
      DirectedEdge[81, 230], 
      DirectedEdge[229, 231], 
      DirectedEdge[227, 231], 
      DirectedEdge[99, 231], 
      DirectedEdge[89, 231], 
      DirectedEdge[229, 233], 
      DirectedEdge[228, 233], 
      DirectedEdge[100, 233], 
      DirectedEdge[68, 233], 
      DirectedEdge[232, 234], 
      DirectedEdge[228, 234], 
      DirectedEdge[227, 234], 
      DirectedEdge[218, 234], 
      DirectedEdge[117, 234], 
      DirectedEdge[91, 234], 
      DirectedEdge[90, 234], 
      DirectedEdge[81, 234], 
      DirectedEdge[232, 235], 
      DirectedEdge[229, 235], 
      DirectedEdge[227, 235], 
      DirectedEdge[219, 235], 
      DirectedEdge[102, 235], 
      DirectedEdge[99, 235], 
      DirectedEdge[89, 235], 
      DirectedEdge[18, 236], 
      DirectedEdge[20, 236], 
      DirectedEdge[237, 238], 
      DirectedEdge[104, 238], 
      DirectedEdge[70, 238], 
      DirectedEdge[237, 239], 
      DirectedEdge[215, 239], 
      DirectedEdge[83, 239], 
      DirectedEdge[237, 240], 
      DirectedEdge[83, 240], 
      DirectedEdge[64, 240], 
      DirectedEdge[62, 240], 
      DirectedEdge[49, 240], 
      DirectedEdge[43, 240], 
      DirectedEdge[27, 240], 
      DirectedEdge[23, 240], 
      DirectedEdge[237, 241], 
      DirectedEdge[111, 241], 
      DirectedEdge[83, 241], 
      DirectedEdge[49, 241], 
      DirectedEdge[43, 241], 
      DirectedEdge[237, 242], 
      DirectedEdge[132, 242], 
      DirectedEdge[121, 242], 
      DirectedEdge[237, 243], 
      DirectedEdge[83, 243], 
      DirectedEdge[66, 243], 
      DirectedEdge[49, 243], 
      DirectedEdge[47, 243], 
      DirectedEdge[45, 243], 
      DirectedEdge[35, 243], 
      DirectedEdge[237, 244], 
      DirectedEdge[83, 244], 
      DirectedEdge[62, 244], 
      DirectedEdge[49, 244], 
      DirectedEdge[43, 244], 
      DirectedEdge[23, 244], 
      DirectedEdge[247, 252], 
      DirectedEdge[245, 252], 
      DirectedEdge[107, 252], 
      DirectedEdge[73, 252], 
      DirectedEdge[248, 253], 
      DirectedEdge[245, 253], 
      DirectedEdge[186, 253], 
      DirectedEdge[179, 253], 
      DirectedEdge[249, 254], 
      DirectedEdge[245, 254], 
      DirectedEdge[136, 254], 
      DirectedEdge[125, 254], 
      DirectedEdge[251, 255], 
      DirectedEdge[245, 255], 
      DirectedEdge[108, 255], 
      DirectedEdge[74, 255], 
      DirectedEdge[248, 256], 
      DirectedEdge[246, 256], 
      DirectedEdge[218, 256], 
      DirectedEdge[88, 256], 
      DirectedEdge[250, 257], 
      DirectedEdge[246, 257], 
      DirectedEdge[219, 257], 
      DirectedEdge[89, 257], 
      DirectedEdge[251, 258], 
      DirectedEdge[246, 258], 
      DirectedEdge[232, 258], 
      DirectedEdge[227, 258], 
      DirectedEdge[248, 259], 
      DirectedEdge[247, 259], 
      DirectedEdge[115, 259], 
      DirectedEdge[88, 259], 
      DirectedEdge[90, 259], 
      DirectedEdge[249, 260], 
      DirectedEdge[247, 260], 
      DirectedEdge[137, 260], 
      DirectedEdge[126, 260], 
      DirectedEdge[250, 261], 
      DirectedEdge[247, 261], 
      DirectedEdge[168, 261], 
      DirectedEdge[163, 261], 
      DirectedEdge[251, 262], 
      DirectedEdge[247, 262], 
      DirectedEdge[91, 262], 
      DirectedEdge[31, 262], 
      DirectedEdge[249, 263], 
      DirectedEdge[248, 263], 
      DirectedEdge[153, 263], 
      DirectedEdge[148, 263], 
      DirectedEdge[250, 264], 
      DirectedEdge[248, 264], 
      DirectedEdge[116, 264], 
      DirectedEdge[89, 264], 
      DirectedEdge[88, 264], 
      DirectedEdge[68, 264], 
      DirectedEdge[51, 264], 
      DirectedEdge[251, 265], 
      DirectedEdge[248, 265], 
      DirectedEdge[117, 265], 
      DirectedEdge[91, 265], 
      DirectedEdge[88, 265], 
      DirectedEdge[90, 265], 
      DirectedEdge[81, 265], 
      DirectedEdge[250, 266], 
      DirectedEdge[249, 266], 
      DirectedEdge[207, 266], 
      DirectedEdge[200, 266], 
      DirectedEdge[251, 267], 
      DirectedEdge[249, 267], 
      DirectedEdge[138, 267], 
      DirectedEdge[127, 267], 
      DirectedEdge[251, 268], 
      DirectedEdge[250, 268], 
      DirectedEdge[102, 268], 
      DirectedEdge[99, 268], 
      DirectedEdge[21, 269], 
      DirectedEdge[16, 269], 
      DirectedEdge[19, 269], 
      DirectedEdge[20, 269], 
      DirectedEdge[270, 271], 
      DirectedEdge[132, 271], 
      DirectedEdge[83, 271], 
      DirectedEdge[270, 272], 
      DirectedEdge[143, 272], 
      DirectedEdge[43, 272], 
      DirectedEdge[270, 273], 
      DirectedEdge[194, 273], 
      DirectedEdge[66, 273], 
      DirectedEdge[270, 274], 
      DirectedEdge[222, 274], 
      DirectedEdge[132, 274], 
      DirectedEdge[83, 274], 
      DirectedEdge[62, 274], 
      DirectedEdge[49, 274], 
      DirectedEdge[43, 274], 
      DirectedEdge[33, 274], 
      DirectedEdge[270, 275], 
      DirectedEdge[215, 275], 
      DirectedEdge[132, 275], 
      DirectedEdge[121, 275], 
      DirectedEdge[83, 275], 
      DirectedEdge[277, 281], 
      DirectedEdge[276, 281], 
      DirectedEdge[148, 281], 
      DirectedEdge[88, 281], 
      DirectedEdge[278, 282], 
      DirectedEdge[276, 282], 
      DirectedEdge[200, 282], 
      DirectedEdge[89, 282], 
      DirectedEdge[279, 283], 
      DirectedEdge[276, 283], 
      DirectedEdge[227, 283], 
      DirectedEdge[138, 283], 
      DirectedEdge[280, 284], 
      DirectedEdge[276, 284], 
      DirectedEdge[249, 284], 
      DirectedEdge[246, 284], 
      DirectedEdge[278, 285], 
      DirectedEdge[277, 285], 
      DirectedEdge[202, 285], 
      DirectedEdge[68, 285], 
      DirectedEdge[279, 286], 
      DirectedEdge[277, 286], 
      DirectedEdge[228, 286], 
      DirectedEdge[150, 286], 
      DirectedEdge[280, 287], 
      DirectedEdge[277, 287], 
      DirectedEdge[249, 287], 
      DirectedEdge[246, 287], 
      DirectedEdge[218, 287], 
      DirectedEdge[153, 287], 
      DirectedEdge[148, 287], 
      DirectedEdge[88, 287], 
      DirectedEdge[279, 288], 
      DirectedEdge[278, 288], 
      DirectedEdge[229, 288], 
      DirectedEdge[203, 288], 
      DirectedEdge[280, 289], 
      DirectedEdge[278, 289], 
      DirectedEdge[249, 289], 
      DirectedEdge[246, 289], 
      DirectedEdge[219, 289], 
      DirectedEdge[207, 289], 
      DirectedEdge[200, 289], 
      DirectedEdge[89, 289], 
      DirectedEdge[280, 290], 
      DirectedEdge[279, 290], 
      DirectedEdge[249, 290], 
      DirectedEdge[246, 290], 
      DirectedEdge[232, 290], 
      DirectedEdge[227, 290], 
      DirectedEdge[138, 290], 
      DirectedEdge[127, 290], 
      DirectedEdge[13, 291], 
      DirectedEdge[16, 291], 
      DirectedEdge[19, 291], 
      DirectedEdge[20, 291], 
      DirectedEdge[292, 293], 
      DirectedEdge[64, 293], 
      DirectedEdge[62, 293], 
      DirectedEdge[49, 293], 
      DirectedEdge[43, 293], 
      DirectedEdge[29, 293], 
      DirectedEdge[292, 294], 
      DirectedEdge[77, 294], 
      DirectedEdge[43, 294], 
      DirectedEdge[292, 295], 
      DirectedEdge[270, 295], 
      DirectedEdge[132, 295], 
      DirectedEdge[83, 295], 
      DirectedEdge[64, 295], 
      DirectedEdge[62, 295], 
      DirectedEdge[49, 295], 
      DirectedEdge[43, 295], 
      DirectedEdge[37, 295], 
      DirectedEdge[29, 295], 
      DirectedEdge[292, 296], 
      DirectedEdge[158, 296], 
      DirectedEdge[66, 296], 
      DirectedEdge[292, 297], 
      DirectedEdge[222, 297], 
      DirectedEdge[64, 297], 
      DirectedEdge[292, 298], 
      DirectedEdge[215, 298], 
      DirectedEdge[64, 298], 
      DirectedEdge[62, 298], 
      DirectedEdge[49, 298], 
      DirectedEdge[43, 298], 
      DirectedEdge[27, 298], 
      DirectedEdge[23, 298], 
      DirectedEdge[300, 305], 
      DirectedEdge[299, 305], 
      DirectedEdge[90, 305], 
      DirectedEdge[301, 306], 
      DirectedEdge[299, 306], 
      DirectedEdge[276, 306], 
      DirectedEdge[137, 306], 
      DirectedEdge[302, 307], 
      DirectedEdge[299, 307], 
      DirectedEdge[163, 307], 
      DirectedEdge[89, 307], 
      DirectedEdge[303, 308], 
      DirectedEdge[299, 308], 
      DirectedEdge[227, 308], 
      DirectedEdge[91, 308], 
      DirectedEdge[304, 309], 
      DirectedEdge[299, 309], 
      DirectedEdge[247, 309], 
      DirectedEdge[246, 309], 
      DirectedEdge[301, 310], 
      DirectedEdge[300, 310], 
      DirectedEdge[277, 310], 
      DirectedEdge[149, 310], 
      DirectedEdge[302, 311], 
      DirectedEdge[300, 311], 
      DirectedEdge[164, 311], 
      DirectedEdge[68, 311], 
      DirectedEdge[303, 312], 
      DirectedEdge[300, 312], 
      DirectedEdge[228, 312], 
      DirectedEdge[80, 312], 
      DirectedEdge[304, 313], 
      DirectedEdge[300, 313], 
      DirectedEdge[247, 313], 
      DirectedEdge[246, 313], 
      DirectedEdge[218, 313], 
      DirectedEdge[115, 313], 
      DirectedEdge[90, 313], 
      DirectedEdge[302, 314], 
      DirectedEdge[301, 314], 
      DirectedEdge[278, 314], 
      DirectedEdge[201, 314], 
      DirectedEdge[303, 315], 
      DirectedEdge[301, 315], 
      DirectedEdge[279, 315], 
      DirectedEdge[138, 315], 
      DirectedEdge[137, 315], 
      DirectedEdge[91, 315], 
      DirectedEdge[40, 315], 
      DirectedEdge[304, 316], 
      DirectedEdge[301, 316], 
      DirectedEdge[280, 316], 
      DirectedEdge[249, 316], 
      DirectedEdge[247, 316], 
      DirectedEdge[137, 316], 
      DirectedEdge[126, 316], 
      DirectedEdge[303, 317], 
      DirectedEdge[302, 317], 
      DirectedEdge[229, 317], 
      DirectedEdge[165, 317], 
      DirectedEdge[304, 318], 
      DirectedEdge[302, 318], 
      DirectedEdge[247, 318], 
      DirectedEdge[246, 318], 
      DirectedEdge[219, 318], 
      DirectedEdge[168, 318], 
      DirectedEdge[163, 318], 
      DirectedEdge[89, 318], 
      DirectedEdge[304, 319], 
      DirectedEdge[303, 319], 
      DirectedEdge[247, 319], 
      DirectedEdge[246, 319], 
      DirectedEdge[232, 319], 
      DirectedEdge[227, 319], 
      DirectedEdge[91, 319], 
      DirectedEdge[31, 319], 
      DirectedEdge[17, 320], 
      DirectedEdge[16, 320], 
      DirectedEdge[19, 320], 
      DirectedEdge[20, 320], 
      DirectedEdge[321, 322], 
      DirectedEdge[104, 322], 
      DirectedEdge[83, 322], 
      DirectedEdge[66, 322], 
      DirectedEdge[49, 322], 
      DirectedEdge[47, 322], 
      DirectedEdge[35, 322], 
      DirectedEdge[321, 323], 
      DirectedEdge[158, 323], 
      DirectedEdge[104, 323], 
      DirectedEdge[83, 323], 
      DirectedEdge[64, 323], 
      DirectedEdge[62, 323], 
      DirectedEdge[53, 323], 
      DirectedEdge[49, 323], 
      DirectedEdge[43, 323], 
      DirectedEdge[29, 323], 
      DirectedEdge[321, 324], 
      DirectedEdge[173, 324], 
      DirectedEdge[66, 324], 
      DirectedEdge[43, 324], 
      DirectedEdge[35, 324], 
      DirectedEdge[321, 325], 
      DirectedEdge[194, 325], 
      DirectedEdge[132, 325], 
      DirectedEdge[104, 325], 
      DirectedEdge[53, 325], 
      DirectedEdge[33, 325], 
      DirectedEdge[29, 325], 
      DirectedEdge[25, 325], 
      DirectedEdge[15, 325], 
      DirectedEdge[321, 326], 
      DirectedEdge[104, 326], 
      DirectedEdge[95, 326], 
      DirectedEdge[83, 326], 
      DirectedEdge[62, 326], 
      DirectedEdge[53, 326], 
      DirectedEdge[49, 326], 
      DirectedEdge[43, 326], 
      DirectedEdge[29, 326], 
      DirectedEdge[15, 326], 
      DirectedEdge[321, 327], 
      DirectedEdge[104, 327], 
      DirectedEdge[83, 327], 
      DirectedEdge[70, 327], 
      DirectedEdge[66, 327], 
      DirectedEdge[49, 327], 
      DirectedEdge[47, 327], 
      DirectedEdge[45, 327], 
      DirectedEdge[35, 327], 
      DirectedEdge[329, 334], 
      DirectedEdge[328, 334], 
      DirectedEdge[163, 334], 
      DirectedEdge[107, 334], 
      DirectedEdge[330, 335], 
      DirectedEdge[328, 335], 
      DirectedEdge[179, 335], 
      DirectedEdge[89, 335], 
      DirectedEdge[88, 335], 
      DirectedEdge[68, 335], 
      DirectedEdge[51, 335], 
      DirectedEdge[331, 336], 
      DirectedEdge[328, 336], 
      DirectedEdge[200, 336], 
      DirectedEdge[136, 336], 
      DirectedEdge[332, 337], 
      DirectedEdge[328, 337], 
      DirectedEdge[108, 337], 
      DirectedEdge[99, 337], 
      DirectedEdge[333, 338], 
      DirectedEdge[328, 338], 
      DirectedEdge[250, 338], 
      DirectedEdge[245, 338], 
      DirectedEdge[330, 339], 
      DirectedEdge[329, 339], 
      DirectedEdge[180, 339], 
      DirectedEdge[164, 339], 
      DirectedEdge[331, 340], 
      DirectedEdge[329, 340], 
      DirectedEdge[201, 340], 
      DirectedEdge[137, 340], 
      DirectedEdge[136, 340], 
      DirectedEdge[107, 340], 
      DirectedEdge[56, 340], 
      DirectedEdge[332, 341], 
      DirectedEdge[329, 341], 
      DirectedEdge[165, 341], 
      DirectedEdge[108, 341], 
      DirectedEdge[107, 341], 
      DirectedEdge[91, 341], 
      DirectedEdge[57, 341], 
      DirectedEdge[333, 342], 
      DirectedEdge[329, 342], 
      DirectedEdge[250, 342], 
      DirectedEdge[245, 342], 
      DirectedEdge[168, 342], 
      DirectedEdge[163, 342], 
      DirectedEdge[107, 342], 
      DirectedEdge[73, 342], 
      DirectedEdge[331, 343], 
      DirectedEdge[330, 343], 
      DirectedEdge[202, 343], 
      DirectedEdge[181, 343], 
      DirectedEdge[332, 344], 
      DirectedEdge[330, 344], 
      DirectedEdge[182, 344], 
      DirectedEdge[100, 344], 
      DirectedEdge[333, 345], 
      DirectedEdge[330, 345], 
      DirectedEdge[250, 345], 
      DirectedEdge[245, 345], 
      DirectedEdge[186, 345], 
      DirectedEdge[179, 345], 
      DirectedEdge[116, 345], 
      DirectedEdge[89, 345], 
      DirectedEdge[88, 345], 
      DirectedEdge[68, 345], 
      DirectedEdge[51, 345], 
      DirectedEdge[332, 346], 
      DirectedEdge[331, 346], 
      DirectedEdge[203, 346], 
      DirectedEdge[138, 346], 
      DirectedEdge[136, 346], 
      DirectedEdge[108, 346], 
      DirectedEdge[57, 346], 
      DirectedEdge[56, 346], 
      DirectedEdge[41, 346], 
      DirectedEdge[333, 347], 
      DirectedEdge[331, 347], 
      DirectedEdge[250, 347], 
      DirectedEdge[245, 347], 
      DirectedEdge[207, 347], 
      DirectedEdge[200, 347], 
      DirectedEdge[136, 347], 
      DirectedEdge[125, 347], 
      DirectedEdge[333, 348], 
      DirectedEdge[332, 348], 
      DirectedEdge[250, 348], 
      DirectedEdge[245, 348], 
      DirectedEdge[108, 348], 
      DirectedEdge[102, 348], 
      DirectedEdge[99, 348], 
      DirectedEdge[74, 348], 
      DirectedEdge[16, 349], 
      DirectedEdge[19, 349], 
      DirectedEdge[20, 349], 
      DirectedEdge[350, 351], 
      DirectedEdge[104, 351], 
      DirectedEdge[83, 351], 
      DirectedEdge[350, 352], 
      DirectedEdge[292, 352], 
      DirectedEdge[104, 352], 
      DirectedEdge[83, 352], 
      DirectedEdge[64, 352], 
      DirectedEdge[62, 352], 
      DirectedEdge[53, 352], 
      DirectedEdge[49, 352], 
      DirectedEdge[43, 352], 
      DirectedEdge[29, 352], 
      DirectedEdge[350, 353], 
      DirectedEdge[173, 353], 
      DirectedEdge[43, 353], 
      DirectedEdge[350, 354], 
      DirectedEdge[270, 354], 
      DirectedEdge[132, 354], 
      DirectedEdge[104, 354], 
      DirectedEdge[53, 354], 
      DirectedEdge[33, 354], 
      DirectedEdge[29, 354], 
      DirectedEdge[25, 354], 
      DirectedEdge[15, 354], 
      DirectedEdge[350, 355], 
      DirectedEdge[321, 355], 
      DirectedEdge[66, 355], 
      DirectedEdge[350, 356], 
      DirectedEdge[222, 356], 
      DirectedEdge[104, 356], 
      DirectedEdge[83, 356], 
      DirectedEdge[62, 356], 
      DirectedEdge[53, 356], 
      DirectedEdge[49, 356], 
      DirectedEdge[43, 356], 
      DirectedEdge[29, 356], 
      DirectedEdge[15, 356], 
      DirectedEdge[350, 357], 
      DirectedEdge[215, 357], 
      DirectedEdge[104, 357], 
      DirectedEdge[83, 357], 
      DirectedEdge[70, 357], 
      DirectedEdge[359, 365], 
      DirectedEdge[358, 365], 
      DirectedEdge[299, 365], 
      DirectedEdge[107, 365], 
      DirectedEdge[360, 366], 
      DirectedEdge[358, 366], 
      DirectedEdge[179, 366], 
      DirectedEdge[88, 366], 
      DirectedEdge[361, 367], 
      DirectedEdge[358, 367], 
      DirectedEdge[276, 367], 
      DirectedEdge[136, 367], 
      DirectedEdge[362, 368], 
      DirectedEdge[358, 368], 
      DirectedEdge[328, 368], 
      DirectedEdge[89, 368], 
      DirectedEdge[363, 369], 
      DirectedEdge[358, 369], 
      DirectedEdge[227, 369], 
      DirectedEdge[108, 369], 
      DirectedEdge[364, 370], 
      DirectedEdge[358, 370], 
      DirectedEdge[246, 370], 
      DirectedEdge[245, 370], 
      DirectedEdge[360, 371], 
      DirectedEdge[359, 371], 
      DirectedEdge[300, 371], 
      DirectedEdge[180, 371], 
      DirectedEdge[361, 372], 
      DirectedEdge[359, 372], 
      DirectedEdge[301, 372], 
      DirectedEdge[137, 372], 
      DirectedEdge[136, 372], 
      DirectedEdge[107, 372], 
      DirectedEdge[56, 372], 
      DirectedEdge[362, 373], 
      DirectedEdge[359, 373], 
      DirectedEdge[329, 373], 
      DirectedEdge[302, 373], 
      DirectedEdge[363, 374], 
      DirectedEdge[359, 374], 
      DirectedEdge[303, 374], 
      DirectedEdge[108, 374], 
      DirectedEdge[107, 374], 
      DirectedEdge[91, 374], 
      DirectedEdge[57, 374], 
      DirectedEdge[364, 375], 
      DirectedEdge[359, 375], 
      DirectedEdge[304, 375], 
      DirectedEdge[247, 375], 
      DirectedEdge[245, 375], 
      DirectedEdge[107, 375], 
      DirectedEdge[73, 375], 
      DirectedEdge[361, 376], 
      DirectedEdge[360, 376], 
      DirectedEdge[277, 376], 
      DirectedEdge[181, 376], 
      DirectedEdge[362, 377], 
      DirectedEdge[360, 377], 
      DirectedEdge[330, 377], 
      DirectedEdge[68, 377], 
      DirectedEdge[363, 378], 
      DirectedEdge[360, 378], 
      DirectedEdge[228, 378], 
      DirectedEdge[182, 378], 
      DirectedEdge[364, 379], 
      DirectedEdge[360, 379], 
      DirectedEdge[246, 379], 
      DirectedEdge[245, 379], 
      DirectedEdge[218, 379], 
      DirectedEdge[186, 379], 
      DirectedEdge[179, 379], 
      DirectedEdge[88, 379], 
      DirectedEdge[362, 380], 
      DirectedEdge[361, 380], 
      DirectedEdge[331, 380], 
      DirectedEdge[278, 380], 
      DirectedEdge[363, 381], 
      DirectedEdge[361, 381], 
      DirectedEdge[279, 381], 
      DirectedEdge[138, 381], 
      DirectedEdge[136, 381], 
      DirectedEdge[108, 381], 
      DirectedEdge[57, 381], 
      DirectedEdge[56, 381], 
      DirectedEdge[41, 381], 
      DirectedEdge[364, 382], 
      DirectedEdge[361, 382], 
      DirectedEdge[280, 382], 
      DirectedEdge[249, 382], 
      DirectedEdge[245, 382], 
      DirectedEdge[136, 382], 
      DirectedEdge[125, 382], 
      DirectedEdge[363, 383], 
      DirectedEdge[362, 383], 
      DirectedEdge[332, 383], 
      DirectedEdge[229, 383], 
      DirectedEdge[364, 384], 
      DirectedEdge[362, 384], 
      DirectedEdge[333, 384], 
      DirectedEdge[250, 384], 
      DirectedEdge[246, 384], 
      DirectedEdge[219, 384], 
      DirectedEdge[89, 384], 
      DirectedEdge[364, 385], 
      DirectedEdge[363, 385], 
      DirectedEdge[246, 385], 
      DirectedEdge[245, 385], 
      DirectedEdge[232, 385], 
      DirectedEdge[227, 385], 
      DirectedEdge[108, 385], 
      DirectedEdge[74, 385]}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.804491988038053*^9, 3.80449199476628*^9}, 
   3.8044921104017763`*^9, 3.804492164354319*^9, 3.804492200096492*^9, {
   3.804492301578144*^9, 3.804492337169917*^9}, 3.804494788865967*^9, 
   3.823021432027869*^9},
 CellID->267060057]
}, Open  ]],

Cell["Query the output for the barcode:", "Text",
 TaggingRules->{},
 CellID->346154384],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ph", "[", "\"\<Barcode\>\"", "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.804451288235099*^9, 3.804451288830531*^9}, {
  3.804491968220285*^9, 3.80449199429005*^9}, {3.804492160063196*^9, 
  3.804492161268553*^9}, {3.804492196207881*^9, 3.804492196652082*^9}, {
  3.804492231997073*^9, 3.804492234898027*^9}},
 CellID->439064472],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{
     {RGBColor[0.90222, 0.101808, 0.198306], PointSize[Medium], 
      AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{-2.2250738585072014`*^-308, 1}], 
         PointBox[{0.1161587299461996, 1}], 
         LineBox[{{-2.2250738585072014`*^-308, 1}, {0.1161587299461996, 1}}]},
        
        "1"],
       Annotation[#, 1, "Tooltip"]& ]}, 
     {RGBColor[0.90222, 0.101808, 0.198306], PointSize[Medium], 
      AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{-2.2250738585072014`*^-308, 2}], 
         PointBox[{0.2645817718998426, 2}], 
         LineBox[{{-2.2250738585072014`*^-308, 2}, {0.2645817718998426, 2}}]},
        
        "2"],
       Annotation[#, 2, "Tooltip"]& ]}, 
     {RGBColor[0.90222, 0.101808, 0.198306], PointSize[Medium], 
      AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{-2.2250738585072014`*^-308, 3}], 
         PointBox[{0.29118953016086235`, 3}], 
         LineBox[{{-2.2250738585072014`*^-308, 3}, {
           0.29118953016086235`, 3}}]},
        "3"],
       Annotation[#, 3, "Tooltip"]& ]}, 
     {RGBColor[0.90222, 0.101808, 0.198306], PointSize[Medium], 
      AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{-2.2250738585072014`*^-308, 4}], 
         PointBox[{0.36991992192464, 4}], 
         LineBox[{{-2.2250738585072014`*^-308, 4}, {0.36991992192464, 4}}]},
        "4"],
       Annotation[#, 4, "Tooltip"]& ]}, 
     {RGBColor[0.90222, 0.101808, 0.198306], PointSize[Medium], 
      AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{-2.2250738585072014`*^-308, 5}], 
         PointBox[{0.37717054631977137`, 5}], 
         LineBox[{{-2.2250738585072014`*^-308, 5}, {
           0.37717054631977137`, 5}}]},
        "5"],
       Annotation[#, 5, "Tooltip"]& ]}, 
     {RGBColor[0.90222, 0.101808, 0.198306], PointSize[Medium], 
      AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{-2.2250738585072014`*^-308, 6}], 
         PointBox[{0.43721338949641914`, 6}], 
         LineBox[{{-2.2250738585072014`*^-308, 6}, {
           0.43721338949641914`, 6}}]},
        "6"],
       Annotation[#, 6, "Tooltip"]& ]}, 
     {RGBColor[0.90222, 0.101808, 0.198306], PointSize[Medium], 
      AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{-2.2250738585072014`*^-308, 7}], 
         PointBox[{0.4475876146481826, 7}], 
         LineBox[{{-2.2250738585072014`*^-308, 7}, {0.4475876146481826, 7}}]},
        
        "7"],
       Annotation[#, 7, "Tooltip"]& ]}, 
     {RGBColor[0.90222, 0.101808, 0.198306], PointSize[Medium], 
      AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{-2.2250738585072014`*^-308, 8}], 
         PointBox[{0.4683955851090589, 8}], 
         LineBox[{{-2.2250738585072014`*^-308, 8}, {0.4683955851090589, 8}}]},
        
        "8"],
       Annotation[#, 8, "Tooltip"]& ]}, 
     {RGBColor[0.90222, 0.101808, 0.198306], PointSize[Medium], 
      AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{-2.2250738585072014`*^-308, 9}], 
         PointBox[{0.47841163024679334`, 9}], 
         LineBox[{{-2.2250738585072014`*^-308, 9}, {
           0.47841163024679334`, 9}}]},
        "9"],
       Annotation[#, 9, "Tooltip"]& ]}, 
     {RGBColor[0.14287214708202123`, 0.7165497398815136, 1.], PointSize[
      Medium], AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{0.7335610290173712, 10}], 
         PointBox[{0.7541648991001224, 10}], 
         LineBox[{{0.7335610290173712, 10}, {0.7541648991001224, 10}}]},
        "10"],
       Annotation[#, 10, "Tooltip"]& ]}}, InsetBox[
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"H\"", 
         RGBColor[0.4, 0.4, 1.], StripOnInput -> False], 
        StyleBox["0", 
         RGBColor[0.4, 0.4, 1.], StripOnInput -> False]], 
       SubscriptBox[
        StyleBox["\"H\"", 
         RGBColor[0.4, 0.4, 1.], StripOnInput -> False], 
        StyleBox["1", 
         RGBColor[0.4, 0.4, 1.], StripOnInput -> False]], 
       SubscriptBox[
        StyleBox["\"H\"", 
         RGBColor[0.4, 0.4, 1.], StripOnInput -> False], 
        StyleBox["2", 
         RGBColor[0.4, 0.4, 1.], StripOnInput -> False]]},
      "LineLegend",
      DisplayFunction->(FormBox[
        PanelBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.90222, 0.101808, 0.198306], 
                    Thickness[0.27]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.90222, 0.101808, 0.198306], 
                    Thickness[0.27]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.14287214708202123`, 0.7165497398815136, 1.], 
                    Thickness[0.27]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.14287214708202123`, 0.7165497398815136, 1.], 
                    Thickness[0.27]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9729188047180777, 0.9391259962046635, 
                    0.201748879675973], 
                    Thickness[0.27]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9729188047180777, 0.9391259962046635, 
                    0.201748879675973], 
                    Thickness[0.27]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
           False], {FontFamily -> "Arial"}, StripOnInput -> False], 
         Background -> Automatic, ContentPadding -> True, 
         FrameMargins -> {{5, 5}, {5, 5}}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.90222, 0.101808, 0.198306], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.60148, 0.067872, 0.13220400000000002`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.90222`", ",", "0.101808`", ",", "0.198306`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.90222, 0.101808, 0.198306]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.90222, 0.101808, 0.198306], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "0.015`", "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.14287214708202123`, 0.7165497398815136, 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.09524809805468082, 0.47769982658767574`, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.14287214708202123`", ",", "0.7165497398815136`", ",", 
                    "1.`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14287214708202123`, 0.7165497398815136, 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.14287214708202123`, 0.7165497398815136, 1.], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "0.015`", "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9729188047180777, 0.9391259962046635, 
                    0.201748879675973], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6486125364787185, 0.6260839974697757, 
                    0.13449925311731534`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9729188047180777`", ",", "0.9391259962046635`", ",", 
                    "0.201748879675973`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9729188047180777, 0.9391259962046635, 
                    0.201748879675973]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9729188047180777, 0.9391259962046635, 
                    0.201748879675973], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.015`", "]"}]}], "}"}], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 0, 1], Editable -> False, Selectable -> False]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "Panel"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.9, 0.15}], ImageScaled[{0.9, 0.15}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, False},
   AxesLabel->{None},
   AxesOrigin->{Automatic, Automatic},
   DisplayFunction->Identity,
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   ImagePadding->All,
   ImageSize->{Automatic, 154.8742019612123},
   PlotRange->{{-2.2250738585072014`*^-308, 0.7541648991001224}, {0, 10}},
   PlotRangePadding->{{
      Scaled[0.1], 
      Scaled[0.1]}, {0, 1}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{
       RGBColor[0.24720000000000014`, 0.24, 0.6], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.90222, 0.101808, 0.198306]], {
        Tooltip[{{{
            Point[{-2.2250738585072014`*^-308, 1}]}, {
            Point[{0.1161587299461996, 1}]}, 
           Line[{{-2.2250738585072014`*^-308, 1}, {0.1161587299461996, 1}}]}},
          1]}}, {
       RGBColor[0.6, 0.24, 0.4428931686004542], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.90222, 0.101808, 0.198306]], {
        Tooltip[{{{
            Point[{-2.2250738585072014`*^-308, 2}]}, {
            Point[{0.2645817718998426, 2}]}, 
           Line[{{-2.2250738585072014`*^-308, 2}, {0.2645817718998426, 2}}]}},
          2]}}, {
       RGBColor[0.6, 0.5470136627990908, 0.24], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.90222, 0.101808, 0.198306]], {
        Tooltip[{{{
            Point[{-2.2250738585072014`*^-308, 3}]}, {
            Point[{0.29118953016086235`, 3}]}, 
           
           Line[{{-2.2250738585072014`*^-308, 3}, {
             0.29118953016086235`, 3}}]}}, 3]}}, {
       RGBColor[0.24, 0.6, 0.33692049419863584`], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.90222, 0.101808, 0.198306]], {
        Tooltip[{{{
            Point[{-2.2250738585072014`*^-308, 4}]}, {
            Point[{0.36991992192464, 4}]}, 
           Line[{{-2.2250738585072014`*^-308, 4}, {0.36991992192464, 4}}]}}, 
         4]}}, {
       RGBColor[0.24, 0.3531726744018182, 0.6], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.90222, 0.101808, 0.198306]], {
        Tooltip[{{{
            Point[{-2.2250738585072014`*^-308, 5}]}, {
            Point[{0.37717054631977137`, 5}]}, 
           
           Line[{{-2.2250738585072014`*^-308, 5}, {
             0.37717054631977137`, 5}}]}}, 5]}}, {
       RGBColor[0.6, 0.24, 0.5632658430022722], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.90222, 0.101808, 0.198306]], {
        Tooltip[{{{
            Point[{-2.2250738585072014`*^-308, 6}]}, {
            Point[{0.43721338949641914`, 6}]}, 
           
           Line[{{-2.2250738585072014`*^-308, 6}, {
             0.43721338949641914`, 6}}]}}, 6]}}, {
       RGBColor[0.6, 0.42664098839727194`, 0.24], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.90222, 0.101808, 0.198306]], {
        Tooltip[{{{
            Point[{-2.2250738585072014`*^-308, 7}]}, {
            Point[{0.4475876146481826, 7}]}, 
           Line[{{-2.2250738585072014`*^-308, 7}, {0.4475876146481826, 7}}]}},
          7]}}, {
       RGBColor[0.2634521802031821, 0.6, 0.24], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.90222, 0.101808, 0.198306]], {
        Tooltip[{{{
            Point[{-2.2250738585072014`*^-308, 8}]}, {
            Point[{0.4683955851090589, 8}]}, 
           Line[{{-2.2250738585072014`*^-308, 8}, {0.4683955851090589, 8}}]}},
          8]}}, {
       RGBColor[0.24, 0.47354534880363613`, 0.6], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.90222, 0.101808, 0.198306]], {
        Tooltip[{{{
            Point[{-2.2250738585072014`*^-308, 9}]}, {
            Point[{0.47841163024679334`, 9}]}, 
           
           Line[{{-2.2250738585072014`*^-308, 9}, {
             0.47841163024679334`, 9}}]}}, 9]}}, {
       RGBColor[0.5163614825959097, 0.24, 0.6], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.14287214708202123`, 0.7165497398815136, 1.]], {
        Tooltip[{{{
            Point[{0.7335610290173712, 10}]}, {
            Point[{0.7541648991001224, 10}]}, 
           Line[{{0.7335610290173712, 10}, {0.7541648991001224, 10}}]}}, 
         10]}}}, AxesLabel -> {None}, Ticks -> {Automatic, Automatic}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     PlotRange -> {{-2.2250738585072014`*^-308, 0.7541648991001224}, {0, 10}},
      PlotRangePadding -> {{
        Scaled[0.1], 
        Scaled[0.1]}, {0, 1}}, AspectRatio -> GoldenRatio^(-1), 
     AxesOrigin -> {Automatic, Automatic}, Axes -> {True, False}, 
     ImagePadding -> All, {}], 
    Placed[
     Unevaluated[
      LineLegend[{{
         RGBColor[0.90222, 0.101808, 0.198306], 
         Thickness[0.015]}, {
         RGBColor[0.14287214708202123`, 0.7165497398815136, 1.], 
         Thickness[0.015]}, {
         RGBColor[0.9729188047180777, 0.9391259962046635, 0.201748879675973], 
         
         Thickness[0.015]}, 
        RGBColor[0, 0, 1]}, {
        Subscript[
         Style["H", 
          RGBColor[0.4, 0.4, 1.]], 
         Style[0, 
          RGBColor[0.4, 0.4, 1.]]], 
        Subscript[
         Style["H", 
          RGBColor[0.4, 0.4, 1.]], 
         Style[1, 
          RGBColor[0.4, 0.4, 1.]]], 
        Subscript[
         Style["H", 
          RGBColor[0.4, 0.4, 1.]], 
         Style[2, 
          RGBColor[0.4, 0.4, 1.]]]}, 
       Joined -> {True, True, True, True, True, True, True, True, True, True},
        LabelStyle -> {}, LegendFunction -> Panel, LegendLayout -> 
       "Column"]], {
      Scaled[{0.9, 0.15}], 
      Scaled[{0.9, 0.15}]}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.804491988038053*^9, 3.80449199476628*^9}, 
   3.8044921104017763`*^9, 3.804492164354319*^9, 3.804492200096492*^9, 
   3.804492235444106*^9, {3.8044923291522217`*^9, 3.804492338889461*^9}, 
   3.8044947921654053`*^9, 3.823021436430738*^9},
 CellID->514785356]
}, Open  ]],

Cell[TextData[{
 "Visualize the ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["MeshRegion", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/MeshRegion",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro"],
 " for the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox["H", "TI"], 
    StyleBox["1", "TR"]], TraditionalForm]]],
 " generator found:"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8565288943087807`*^9, 3.856528894308861*^9}},
 CellID->836514830],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ph", "[", "\"\<GeneratorMeshes\>\"", "]"}], "[", 
  RowBox[{"[", "10", "]"}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.804492344098873*^9, 3.804492355560915*^9}},
 CellID->514133384],

Cell[BoxData[
 Graphics3DBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
    TagBox[
     GraphicsComplex3DBox[{{0.9589271300722904, 0.8755703406218736, 
      0.5104113619785617}, {0.365070773638551, 0.3133995396571083, 
      0.4898323120443908}, {0.26741698820518556`, 0.8430785912274881, 
      0.9808738939080246}, {0.9335243049381621, 0.44241954730262933`, 
      0.06337626929149276}, {0.41960370149380144`, 0.5949882047651012, 
      0.971834705965744}, {0.9586226504815263, 0.6540411011983964, 
      0.3657454800495634}, {0.7039574429458202, 0.1749612447344242, 
      0.1976250431163522}, {0.4007191716796281, 0.5567566282516452, 
      0.8637857743018562}}, 
      {Hue[0.6, 0.3, 0.75], 
       TagBox[
        Line3DBox[{{1, 8}, {5, 8}, {3, 5}, {2, 8}, {2, 7}, {4, 7}, {4, 6}, {1,
          6}}],
        Annotation[#, "Geometry"]& ], Point3DBox[{1, 2, 3, 4, 5, 6, 7, 8}]}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics3D",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  Boxed->False,
  DefaultBaseStyle->{
   "MeshGraphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
  ImageSize->{Automatic, 206.0241892919339},
  Lighting->{{"Ambient", 
     GrayLevel[0.45]}, {"Directional", 
     GrayLevel[0.3], 
     ImageScaled[{2, 0, 2}]}, {"Directional", 
     GrayLevel[0.33], 
     ImageScaled[{2, 2, 2}]}, {"Directional", 
     GrayLevel[0.3], 
     ImageScaled[{0, 2, 2}]}},
  Method->{"ShrinkWrap" -> True}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.804492356544901*^9, 3.8230214453833046`*^9},
 CellID->282956686]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Scope",
 "\[NonBreakingSpace]",
 Cell["(2)", "ExampleCount"],
 "\[NonBreakingSpace]"
}], "Subsection",
 TaggingRules->{},
 CellID->204653245],

Cell[CellGroupData[{

Cell[TextData[{
 "Dimensionality",
 "\[NonBreakingSpace]",
 Cell["(2)", "ExampleCount"],
 "\[NonBreakingSpace]"
}], "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{{3.804492628471273*^9, 3.804492630494429*^9}},
 CellID->433069224],

Cell[TextData[{
 Cell[BoxData[
  StyleBox["PersistentHomology", "InlineResourceFunction"]], "InlineFormula",
  FontFamily->"Source Sans Pro"],
 " can be performed for data of any dimension:"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8044925075778637`*^9, 3.804492523120275*^9}, {
   3.8044925901585293`*^9, 3.804492595861801*^9}, {3.804492759251581*^9, 
   3.804492761618194*^9}, 3.8230213419083247`*^9},
 CellID->274257899],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "42"}], "}"}]}], "]"}]}], ";"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8044925308342953`*^9, 3.804492550211031*^9}, {
   3.804492763101533*^9, 3.804492763166119*^9}, 3.823021351324049*^9},
 CellLabel->"In[57]:=",
 CellID->538180133],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   TagBox[
    DynamicModuleBox[{Typeset`open = False}, 
     FrameBox[
      PaneSelectorBox[{False->GridBox[{
         {
          PaneBox[GridBox[{
             {
              StyleBox[
               StyleBox[
                AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                 BoxBaselineShift->-0.25,
                 BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                
                FontColor->RGBColor[
                 0.8745098039215686, 0.2784313725490196, 0.03137254901960784]],
               
               ShowStringCharacters->False,
               FontFamily->"Source Sans Pro Black",
               FontSize->0.6538461538461539 Inherited,
               FontWeight->"Heavy",
               PrivateFontOptions->{"OperatorSubstitution"->False}], 
              StyleBox[
               RowBox[{
                StyleBox["PersistentHomology", "ResourceFunctionLabel"], " "}],
               ShowAutoStyles->False,
               ShowStringCharacters->False,
               FontSize->Rational[12, 13] Inherited,
               FontColor->GrayLevel[0.1]]}
            },
            GridBoxSpacings->{"Columns" -> {{0.25}}}],
           Alignment->Left,
           BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
           BaselinePosition->Baseline,
           FrameMargins->{{3, 0}, {0, 0}}], 
          ItemBox[
           PaneBox[
            TogglerBox[Dynamic[Typeset`open], {True->
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "IconizeCloser"],
              ImageSizeCache->{11., {1., 10.}}], False->
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "IconizeOpener"],
              ImageSizeCache->{11., {1., 10.}}]},
             Appearance->None,
             BaselinePosition->Baseline,
             ContentPadding->False,
             FrameMargins->0],
            Alignment->Left,
            BaselinePosition->Baseline,
            FrameMargins->{{1, 1}, {0, 0}}],
           Frame->{{
              RGBColor[
              0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
               0.5], False}, {False, False}}]}
        },
        BaselinePosition->{1, 1},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
       GridBox[{
         {GridBox[{
            {
             PaneBox[GridBox[{
                {
                 StyleBox[
                  StyleBox[
                   AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                   
                   FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                  ShowStringCharacters->False,
                  FontFamily->"Source Sans Pro Black",
                  FontSize->0.6538461538461539 Inherited,
                  FontWeight->"Heavy",
                  PrivateFontOptions->{"OperatorSubstitution"->False}], 
                 StyleBox[
                  RowBox[{
                   StyleBox["PersistentHomology", "ResourceFunctionLabel"], 
                   " "}],
                  ShowAutoStyles->False,
                  ShowStringCharacters->False,
                  FontSize->Rational[12, 13] Inherited,
                  FontColor->GrayLevel[0.1]]}
               },
               GridBoxSpacings->{"Columns" -> {{0.25}}}],
              Alignment->Left,
              BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
              BaselinePosition->Baseline,
              FrameMargins->{{3, 0}, {0, 0}}], 
             ItemBox[
              PaneBox[
               TogglerBox[Dynamic[Typeset`open], {True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "IconizeCloser"]], False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "IconizeOpener"]]},
                Appearance->None,
                BaselinePosition->Baseline,
                ContentPadding->False,
                FrameMargins->0],
               Alignment->Left,
               BaselinePosition->Baseline,
               FrameMargins->{{1, 1}, {0, 0}}],
              Frame->{{
                 RGBColor[
                 0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                  0.5], False}, {False, False}}]}
           },
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
         {
          StyleBox[
           PaneBox[GridBox[{
              {
               RowBox[{
                TagBox["\<\"Version (latest): \"\>",
                 "IconizedLabel"], " ", 
                TagBox["\<\"1.0.1\"\>",
                 "IconizedItem"]}]},
              {
               TagBox[
                
                TemplateBox[{
                 "\"Documentation \[RightGuillemet]\"", 
                  "https://resources.wolframcloud.com/FunctionRepository/\
resources/PersistentHomology"},
                 "HyperlinkURL"],
                "IconizedItem"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            Alignment->Left,
            BaselinePosition->Baseline,
            FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
           FontFamily->"Roboto",
           FontSize->11]}
        },
        BaselinePosition->{1, 1},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
             GrayLevel[0.8]}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
       Typeset`open],
       BaselinePosition->Baseline,
       ImageSize->Automatic],
      Background->RGBColor[
       0.9686274509803922, 0.9764705882352941, 0.984313725490196],
      BaselinePosition->Baseline,
      DefaultBaseStyle->{},
      FrameMargins->{{0, 0}, {1, 0}},
      FrameStyle->RGBColor[
       0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
      RoundingRadius->4]],
    {"FunctionResourceBox", 
     RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
     "PersistentHomology"},
    TagBoxNote->"FunctionResourceBox"],
   ResourceFunction["PersistentHomology"],
   BoxID -> "PersistentHomology",
   Selectable->False], "[", "data", "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.80449255188922*^9, 3.8044925571993437`*^9}},
 CellID->48854436],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PersistentHomologyObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             GraphicsComplexBox[CompressedData["
1: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
DD7UNnFU6mGhG2+T145RH+SY9ZrzutlY7vy4V2ngKex2UAy4ntEDQ02/GiX9
uKDJkxbtMe2FnIE50gkPudC2yslK4U8vuN6sNTtygQs/bOInhsL7oH7xMpH5
+7lwbMI9rWBHP9j/elIzto4Ll5b2/DvS2g+9zSapiqJcyHELv6J/bQB6/5yh
fejhwNU9a713TQzAq5uXer3SOCCd1ZT4e5IEwwV3F73RYsFbYtPio/vJMLLR
fO8MwblvmZvRMhMfMhyJ/r1/YTsT+vpG+7sayVDt3Z3WHckE0a8R/0rmUaA7
Oumf62UmxF97+LHnEAVWe4QHrlVlQqhcYuJcdwoo+ob4MzkMMFzx1E+lmAJP
OM5No4Lzu/PamhCp6m4ItV2u09LCgSGFhxdOa/XAj6p/Tv2CcyO6d17KS+yB
343jjjHHOSBRFJTLV+yFXRmsOQdlOHA6amCsMKYXjOuKzbkDbBg02+Jet7EP
ajPeVeQlsqEjeJP/18w+UFDZ9aXyPhuIPzddcNbrh/Xha36rG7Khdd7JEBkF
EnhTNTbtaWZACvvN+uBrJNAx116zIZYBpxTHLBbkCtrPDc7GPmLA4CbFZ+Zi
ZEg4K6XXZMaAV38W9+07LpgfvcezC3cwYNUq5eQ4Qf0YSm1IfyjHAG5Oj7nh
TzJYO778IT+DAVfutr2eEtQb29zf6xTx6FCrrrpJn9gHZZcC51i3cUBWN/n9
tiUDsENcpnOpHwcub7w5sn7XINSfJDzw0ufA/Tei9ReshuDYjxADBpcNexLt
Y1fvIkCLiXjhlSA20C6/qPKuIoCLYp+97hY2KPgFPl9tSARH20Huu3oWyJR1
/A6oJoJVGdO/zpIFJZe/kOXfMcDN/l5Y3xoKUHYVqm+QZoLCTHkbqTQyPHE+
mejkzQSKpTbtvRYZhtXvz20ZZcKPubvnlgvmRaPGMpgneE7RxhzWF01BHi35
rhNayoIfzPK0yUQinPb9Xum7jA3K3j3HC+SIQH/aRv9wnQ2h/PYHh3wIsEp/
nVdGUA/0nv31bsZrNuipMFratXvhwOfvn4P/sUBSnkn4zBXk/wWJK8Z3WPAq
b7H60vQ+yFu7TNWLwYR59EEDk8f98ETfb56vDRN4xuvERc0F+c0L2JxOZcD6
BvM/sXsGweRgaubOmwxwcNLzz9AYAn6/6eM7Y4J6keK/lWZHg8W+RI/npYLx
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
              "], {{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                Arrowheads[0.], {
                 ArrowBox[{1, 2}, 0.02254220222992223], 
                 ArrowBox[{1, 5}, 0.02254220222992223], 
                 ArrowBox[{1, 7}, 0.02254220222992223], 
                 ArrowBox[{1, 9}, 0.02254220222992223], 
                 ArrowBox[{1, 11}, 0.02254220222992223], 
                 ArrowBox[{1, 13}, 0.02254220222992223], 
                 ArrowBox[{1, 15}, 0.02254220222992223], 
                 ArrowBox[{1, 17}, 0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-2.1409496216940123`*^-16, -1.0434049156924905`}, 5}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {1.0704748108470062`*^-15, -0.9225412836753133}, 5}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.19317181243605622`, -1.0333779239158283`}, 7}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.1495108326247347, -0.7998123114976872}, 7}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.3696769958201283, -0.9542463251548349}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.24459071364353785`, -0.6313614109083246}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.5056775470872312, -0.8166972803055038}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.272398578269021, -0.43993880945047653`}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.582805838183662, -0.6393075500603161}, 13}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.229178820294798, -0.251397190160288}, 13}], 
                  0.02254220222992223], 
                 ArrowBox[
                  BezierCurveBox[{
                   2, {-0.590645266014236, -0.4460346004393019}, 15}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.12076850752425144`, -0.09120014346806327}, 15}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {-0.04103500681170743, -0.01167546606958506}, 4}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.5674671696890601, 0.16145833033997112`}, 4}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.15069014333422975`, 0.013963498134084052`}, 6}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.7369836857302795, 0.06829159554065786}, 6}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.33873038367193714`, -0.031387992444006356`}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.8613974228519735, -0.07982022606495483}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.49768983777687453`, -0.14160496769998895`}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.9239056164555438, -0.26287381225308243`}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.6061001505474233, -0.3018020143922123}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.9160661886249679, -0.45614676187410347`}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.6493199085216432, -0.4903436336824059}, 14}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.8389378975285393, -0.633536492119288}, 14}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.6215120438961692, -0.6817662351402451}, 16}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.7029373462614268, -0.7710855369686257}, 16}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.19172515014593514`, 1.0256389642036672`}, 6}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.16951651604121815`, 0.9068332652006886}, 6}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.37976539048364444`, 0.9802874736255784}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.2939302531629152, 0.7587214435950802}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.5387248445885809, 0.8700704983695936}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.35643844676648223`, 0.5756678574069446}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.6471351573591255, 0.7098734516773724}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.34859901893590606`, 0.3823949077859304}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.6903549153333459, 0.5213318323871787}, 14}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.27147072783947207`, 0.20500517754074105`}, 14}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.3769213302526145, -0.9729461079072422}, 7}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.33326035044130586`, -0.8602441275062771}, 7}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.5534265136367049, -0.8938145091462413}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.4283402314601095, -0.6917932269169124}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.6894270649037971, -0.7562654642969203}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.4561480960855884, -0.500370625459065}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.7665553560002341, -0.5788757340517223}, 13}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.41292833811137236`, -0.31182900616887055`}, 13}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.5492819065248636, 0.887120738826274}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.4856554033088557, 0.7843604077987405}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.7082413606297987, 0.7769037635702826}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.5481635969124143, 0.6013068216106137}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.8166516734003458, 0.616706716878059}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.5403241690818401, 0.4080338719895959}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   7, {-0.7029373462614349, -0.7710855369686219}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   7, {-0.6215120438961611, -0.6817662351402489}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   7, {-0.8389378975285295, -0.6335364921192947}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   7, {-0.6493199085216452, -0.4903436336824001}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   8, {0.83265509775149, 0.6287919419646689}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   8, {0.7362038372501287, 0.5559553310325218}, 10}], 
                  0.02254220222992223]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                DiskBox[1, 0.02254220222992223], 
                DiskBox[2, 0.02254220222992223], 
                DiskBox[3, 0.02254220222992223], 
                DiskBox[4, 0.02254220222992223], 
                DiskBox[5, 0.02254220222992223], 
                DiskBox[6, 0.02254220222992223], 
                DiskBox[7, 0.02254220222992223], 
                DiskBox[8, 0.02254220222992223], 
                DiskBox[9, 0.02254220222992223], 
                DiskBox[10, 0.02254220222992223], 
                DiskBox[11, 0.02254220222992223], 
                DiskBox[12, 0.02254220222992223], 
                DiskBox[13, 0.02254220222992223], 
                DiskBox[14, 0.02254220222992223], 
                DiskBox[15, 0.02254220222992223], 
                DiskBox[16, 0.02254220222992223], 
                DiskBox[17, 0.02254220222992223]}}], {
             Background -> GrayLevel[0, 0], FormatType -> TraditionalForm, 
              FrameTicks -> None, ImageSize -> 32}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  StyleBox["\"Points: \"", 
                   RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                  InterpretationBox["\"\\!\\(\\*RowBox[{\\\"10\\\"}]\\)\"", 
                   StringForm["``", 10], Editable -> False]}, "RowDefault"], 
                "SummaryItem"]}, {
               TagBox[
                TemplateBox[{
                  StyleBox["\"Dimensions: \"", 
                   RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                  InterpretationBox["\"\\!\\(\\*RowBox[{\\\"42\\\"}]\\)\"", 
                   StringForm["``", 42], Editable -> False]}, "RowDefault"], 
                "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             GraphicsComplexBox[CompressedData["
1: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
DD7UNnFU6mGhG2+T145RH+SY9ZrzutlY7vy4V2ngKex2UAy4ntEDQ02/GiX9
uKDJkxbtMe2FnIE50gkPudC2yslK4U8vuN6sNTtygQs/bOInhsL7oH7xMpH5
+7lwbMI9rWBHP9j/elIzto4Ll5b2/DvS2g+9zSapiqJcyHELv6J/bQB6/5yh
fejhwNU9a713TQzAq5uXer3SOCCd1ZT4e5IEwwV3F73RYsFbYtPio/vJMLLR
fO8MwblvmZvRMhMfMhyJ/r1/YTsT+vpG+7sayVDt3Z3WHckE0a8R/0rmUaA7
Oumf62UmxF97+LHnEAVWe4QHrlVlQqhcYuJcdwoo+ob4MzkMMFzx1E+lmAJP
OM5No4Lzu/PamhCp6m4ItV2u09LCgSGFhxdOa/XAj6p/Tv2CcyO6d17KS+yB
343jjjHHOSBRFJTLV+yFXRmsOQdlOHA6amCsMKYXjOuKzbkDbBg02+Jet7EP
ajPeVeQlsqEjeJP/18w+UFDZ9aXyPhuIPzddcNbrh/Xha36rG7Khdd7JEBkF
EnhTNTbtaWZACvvN+uBrJNAx116zIZYBpxTHLBbkCtrPDc7GPmLA4CbFZ+Zi
ZEg4K6XXZMaAV38W9+07LpgfvcezC3cwYNUq5eQ4Qf0YSm1IfyjHAG5Oj7nh
TzJYO778IT+DAVfutr2eEtQb29zf6xTx6FCrrrpJn9gHZZcC51i3cUBWN/n9
tiUDsENcpnOpHwcub7w5sn7XINSfJDzw0ufA/Tei9ReshuDYjxADBpcNexLt
Y1fvIkCLiXjhlSA20C6/qPKuIoCLYp+97hY2KPgFPl9tSARH20Huu3oWyJR1
/A6oJoJVGdO/zpIFJZe/kOXfMcDN/l5Y3xoKUHYVqm+QZoLCTHkbqTQyPHE+
mejkzQSKpTbtvRYZhtXvz20ZZcKPubvnlgvmRaPGMpgneE7RxhzWF01BHi35
rhNayoIfzPK0yUQinPb9Xum7jA3K3j3HC+SIQH/aRv9wnQ2h/PYHh3wIsEp/
nVdGUA/0nv31bsZrNuipMFratXvhwOfvn4P/sUBSnkn4zBXk/wWJK8Z3WPAq
b7H60vQ+yFu7TNWLwYR59EEDk8f98ETfb56vDRN4xuvERc0F+c0L2JxOZcD6
BvM/sXsGweRgaubOmwxwcNLzz9AYAn6/6eM7Y4J6keK/lWZHg8W+RI/npYLx
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
              "], {{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                Arrowheads[0.], {
                 ArrowBox[{1, 2}, 0.02254220222992223], 
                 ArrowBox[{1, 5}, 0.02254220222992223], 
                 ArrowBox[{1, 7}, 0.02254220222992223], 
                 ArrowBox[{1, 9}, 0.02254220222992223], 
                 ArrowBox[{1, 11}, 0.02254220222992223], 
                 ArrowBox[{1, 13}, 0.02254220222992223], 
                 ArrowBox[{1, 15}, 0.02254220222992223], 
                 ArrowBox[{1, 17}, 0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-2.1409496216940123`*^-16, -1.0434049156924905`}, 5}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {1.0704748108470062`*^-15, -0.9225412836753133}, 5}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.19317181243605622`, -1.0333779239158283`}, 7}], 
                  0.02254220222992223], 
                 ArrowBox[
                  BezierCurveBox[{
                   2, {-0.1495108326247347, -0.7998123114976872}, 7}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.3696769958201283, -0.9542463251548349}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.24459071364353785`, -0.6313614109083246}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.5056775470872312, -0.8166972803055038}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.272398578269021, -0.43993880945047653`}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.582805838183662, -0.6393075500603161}, 13}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.229178820294798, -0.251397190160288}, 13}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.590645266014236, -0.4460346004393019}, 15}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.12076850752425144`, -0.09120014346806327}, 15}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {-0.04103500681170743, -0.01167546606958506}, 4}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.5674671696890601, 0.16145833033997112`}, 4}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.15069014333422975`, 0.013963498134084052`}, 6}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.7369836857302795, 0.06829159554065786}, 6}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.33873038367193714`, -0.031387992444006356`}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.8613974228519735, -0.07982022606495483}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.49768983777687453`, -0.14160496769998895`}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.9239056164555438, -0.26287381225308243`}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.6061001505474233, -0.3018020143922123}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.9160661886249679, -0.45614676187410347`}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.6493199085216432, -0.4903436336824059}, 14}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.8389378975285393, -0.633536492119288}, 14}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.6215120438961692, -0.6817662351402451}, 16}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.7029373462614268, -0.7710855369686257}, 16}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.19172515014593514`, 1.0256389642036672`}, 6}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.16951651604121815`, 0.9068332652006886}, 6}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.37976539048364444`, 0.9802874736255784}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.2939302531629152, 0.7587214435950802}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.5387248445885809, 0.8700704983695936}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.35643844676648223`, 0.5756678574069446}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.6471351573591255, 0.7098734516773724}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.34859901893590606`, 0.3823949077859304}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.6903549153333459, 0.5213318323871787}, 14}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.27147072783947207`, 0.20500517754074105`}, 14}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.3769213302526145, -0.9729461079072422}, 7}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.33326035044130586`, -0.8602441275062771}, 7}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.5534265136367049, -0.8938145091462413}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.4283402314601095, -0.6917932269169124}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.6894270649037971, -0.7562654642969203}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.4561480960855884, -0.500370625459065}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.7665553560002341, -0.5788757340517223}, 13}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.41292833811137236`, -0.31182900616887055`}, 13}], 
                  0.02254220222992223], 
                 ArrowBox[
                  BezierCurveBox[{
                   6, {0.5492819065248636, 0.887120738826274}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.4856554033088557, 0.7843604077987405}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.7082413606297987, 0.7769037635702826}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.5481635969124143, 0.6013068216106137}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.8166516734003458, 0.616706716878059}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.5403241690818401, 0.4080338719895959}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   7, {-0.7029373462614349, -0.7710855369686219}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   7, {-0.6215120438961611, -0.6817662351402489}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   7, {-0.8389378975285295, -0.6335364921192947}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   7, {-0.6493199085216452, -0.4903436336824001}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   8, {0.83265509775149, 0.6287919419646689}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   8, {0.7362038372501287, 0.5559553310325218}, 10}], 
                  0.02254220222992223]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                DiskBox[1, 0.02254220222992223], 
                DiskBox[2, 0.02254220222992223], 
                DiskBox[3, 0.02254220222992223], 
                DiskBox[4, 0.02254220222992223], 
                DiskBox[5, 0.02254220222992223], 
                DiskBox[6, 0.02254220222992223], 
                DiskBox[7, 0.02254220222992223], 
                DiskBox[8, 0.02254220222992223], 
                DiskBox[9, 0.02254220222992223], 
                DiskBox[10, 0.02254220222992223], 
                DiskBox[11, 0.02254220222992223], 
                DiskBox[12, 0.02254220222992223], 
                DiskBox[13, 0.02254220222992223], 
                DiskBox[14, 0.02254220222992223], 
                DiskBox[15, 0.02254220222992223], 
                DiskBox[16, 0.02254220222992223], 
                DiskBox[17, 0.02254220222992223]}}], {
             Background -> GrayLevel[0, 0], FormatType -> TraditionalForm, 
              FrameTicks -> None, ImageSize -> 32}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  StyleBox["\"Points: \"", 
                   RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                  InterpretationBox["\"\\!\\(\\*RowBox[{\\\"10\\\"}]\\)\"", 
                   StringForm["``", 10], Editable -> False]}, "RowDefault"], 
                "SummaryItem"]}, {
               TagBox[
                TemplateBox[{
                  StyleBox["\"Dimensions: \"", 
                   RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                  InterpretationBox["\"\\!\\(\\*RowBox[{\\\"42\\\"}]\\)\"", 
                   StringForm["``", 42], Editable -> False]}, "RowDefault"], 
                "SummaryItem"]}, {
               TagBox[
                TemplateBox[{
                  StyleBox["\"Simplex Count: \"", 
                   RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                  InterpretationBox["\"\\!\\(\\*RowBox[{\\\"767\\\"}]\\)\"", 
                   StringForm["``", 767], Editable -> False]}, "RowDefault"], 
                "SummaryItem"]}, {
               TagBox[
                TemplateBox[{
                  StyleBox["\"Filtration Length: \"", 
                   RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                  InterpretationBox["\"\\!\\(\\*RowBox[{\\\"44\\\"}]\\)\"", 
                   StringForm["``", 44], Editable -> False]}, "RowDefault"], 
                "SummaryItem"]}, {
               TagBox[
                TemplateBox[{
                  StyleBox["\"Generators: \"", 
                   RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                  InterpretationBox["\"\\!\\(\\*RowBox[{\\\"12\\\"}]\\)\"", 
                   StringForm["``", 12], Editable -> False]}, "RowDefault"], 
                "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  $CellContext`PersistentHomologyObject[<|"Points" -> CompressedData["
1:eJwNlnkg1GsfxSdJe5QluZI20XIbJVtxJqlQt7pdW3iLKFKhkqVVbpYWUlmm
EpN0KZIlS9axFEmMMdYZMWPMwoyRrU28vz+ev5/n+Z7vOeez8rjv4RNyJBJp
HnHWE2fJvRjWqkAevMfvh2ddkYK0SP2Sd1gsRJo7Jl949yImIfePfPMmLNid
1HptPRteJtkf63/VomD7e4H/Oim81LKuxZryQDp4kdH+jo/je4PMJueKQNt9
tvKjaSroaierd4nF0B6Mk33VpMHSaOybvj0bP3/uzFgsE2HYbI17lxsd0Uy+
e95yPigHc7/cbmvFW3qDVdyPflQZfvPUvNKHzOyuE/t+cEDfKj7+T8JDFFds
sy3LkaH3v9pyrnseSA4Rm/y+34cVSUW5rr8TVjKXwV/lfBzSLE13PVSCSOVW
pv8YCxOnX0meVgwhNspOU+FbN8ixn6Yec9ioGfV1HFvOwf5NE3dMVrbBa5NM
cfWyFnTYNa9zzKwFpWd34dv9bxAT06AQXN2MK1tt9J6byGBFdaCU+ksQ4LR0
zpIIGZQ8n0e+vdoMv0pGYDu3BpTIR22zlvVgzLQnVt+NjRDPhRn6j+pArqSN
BDdkY33vz+82rD4U1d7zW4lanHRuSvE16MV/GYtOunnwQc3UdSiS74bSb4t+
tykOmCLR1nFLGYabAncGFudAiUWxfWf9CYzpbSLStj7QmCm7mWZSKF05U3mZ
PgilpW+NLvMq4aOq4+0eJwTDm0lNTJFBO8qo9FneIKwYXF7SZT6S7lN+8CME
EA3nhLZa9UPJKab6alwDXBWTRtpmFyNcrr+G7iGA0whTx/2WDJH7RtlvrfsR
OxnfqdzGgbzwoMLcvCHQ1j7mXHw7BNZuFZZhRBdKN5yt2ZbeAUZjes95xxIo
Vfvn9PdxcdTrlXXQvkFEnvXZtqPqPSgfuNpMYo9obTH+UZpMkM6/K/Zc3InG
p7TMwxGDeFyQPJw3xMeYo7Ts2kouXhkucD98j4/061oc5sZuGHQw7P4q40E+
IE3TMLMVOhG2GeRhGbbEaVdyi4Sgjq3Vl5qIkW7kcWpGRyWMFQ7IxgbbkRQc
a2/NHgJ13usl4g0tIIUneTCKypEecdtFTo4B/wab0ok1g6CQ0rj6eULIt0Sp
t7wk5s9I/njMpAoWkmMv3HS4CDLT+BLiJ0D2kSO6hw/SoaVWO2owRwhdw6wt
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
94wjwpWPWy9eWNcKJ7fify7l9uP/b+fA/A==
     "], "Dimension" -> 42, 
    "MaximumDistance" -> 3.402046027597284, 
    "Simplices" -> {{1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {10}, {3, 
      8}, {4, 8}, {1, 10}, {2, 9}, {1, 8}, {7, 8}, {8, 9}, {6, 10}, {1, 9}, {
      1, 8, 9}, {5, 9}, {3, 4}, {3, 4, 8}, {4, 7}, {4, 7, 8}, {2, 7}, {3, 
      6}, {2, 8}, {2, 7, 8}, {2, 8, 9}, {1, 4}, {1, 4, 8}, {6, 8}, {3, 6, 
      8}, {4, 6}, {3, 4, 6}, {4, 6, 8}, {3, 4, 6, 8}, {9, 10}, {1, 9, 10}, {2,
       3}, {2, 3, 8}, {1, 2}, {1, 2, 8}, {1, 2, 9}, {1, 2, 8, 9}, {3, 7}, {2, 
      3, 7}, {3, 4, 7}, {3, 7, 8}, {2, 3, 7, 8}, {3, 4, 7, 8}, {3, 10}, {3, 6,
       10}, {2, 10}, {1, 2, 10}, {2, 3, 10}, {2, 9, 10}, {1, 2, 9, 10}, {8, 
      10}, {1, 8, 10}, {2, 8, 10}, {3, 8, 10}, {6, 8, 10}, {8, 9, 10}, {1, 2, 
      8, 10}, {1, 8, 9, 10}, {2, 3, 8, 10}, {2, 8, 9, 10}, {3, 6, 8, 10}, {1, 
      2, 8, 9, 10}, {2, 5}, {2, 5, 9}, {4, 10}, {1, 4, 10}, {3, 4, 10}, {4, 6,
       10}, {4, 8, 10}, {1, 4, 8, 10}, {3, 4, 6, 10}, {3, 4, 8, 10}, {4, 6, 8,
       10}, {3, 4, 6, 8, 10}, {2, 4}, {1, 2, 4}, {2, 3, 4}, {2, 4, 7}, {2, 4, 
      8}, {2, 4, 10}, {1, 2, 4, 8}, {1, 2, 4, 10}, {2, 3, 4, 7}, {2, 3, 4, 
      8}, {2, 3, 4, 10}, {2, 4, 7, 8}, {2, 4, 8, 10}, {1, 2, 4, 8, 10}, {2, 3,
       4, 7, 8}, {2, 3, 4, 8, 10}, {1, 3}, {1, 2, 3}, {1, 3, 4}, {1, 3, 8}, {
      1, 3, 10}, {1, 2, 3, 4}, {1, 2, 3, 8}, {1, 2, 3, 10}, {1, 3, 4, 8}, {1, 
      3, 4, 10}, {1, 3, 8, 10}, {1, 2, 3, 4, 8}, {1, 2, 3, 4, 10}, {1, 2, 3, 
      8, 10}, {1, 3, 4, 8, 10}, {1, 2, 3, 4, 8, 10}, {1, 5}, {1, 2, 5}, {1, 5,
       9}, {1, 2, 5, 9}, {5, 6}, {1, 6}, {1, 3, 6}, {1, 4, 6}, {1, 5, 6}, {1, 
      6, 8}, {1, 6, 10}, {1, 3, 4, 6}, {1, 3, 6, 8}, {1, 3, 6, 10}, {1, 4, 6, 
      8}, {1, 4, 6, 10}, {1, 6, 8, 10}, {1, 3, 4, 6, 8}, {1, 3, 4, 6, 10}, {1,
       3, 6, 8, 10}, {1, 4, 6, 8, 10}, {1, 3, 4, 6, 8, 10}, {2, 6}, {1, 2, 
      6}, {2, 3, 6}, {2, 4, 6}, {2, 5, 6}, {2, 6, 8}, {2, 6, 10}, {1, 2, 3, 
      6}, {1, 2, 4, 6}, {1, 2, 5, 6}, {1, 2, 6, 8}, {1, 2, 6, 10}, {2, 3, 4, 
      6}, {2, 3, 6, 8}, {2, 3, 6, 10}, {2, 4, 6, 8}, {2, 4, 6, 10}, {2, 6, 8, 
      10}, {1, 2, 3, 4, 6}, {1, 2, 3, 6, 8}, {1, 2, 3, 6, 10}, {1, 2, 4, 6, 
      8}, {1, 2, 4, 6, 10}, {1, 2, 6, 8, 10}, {2, 3, 4, 6, 8}, {2, 3, 4, 6, 
      10}, {2, 3, 6, 8, 10}, {2, 4, 6, 8, 10}, {1, 2, 3, 4, 6, 8}, {1, 2, 3, 
      4, 6, 10}, {1, 2, 3, 6, 8, 10}, {1, 2, 4, 6, 8, 10}, {2, 3, 4, 6, 8, 
      10}, {1, 2, 3, 4, 6, 8, 10}, {3, 5}, {1, 3, 5}, {2, 3, 5}, {3, 5, 6}, {
      1, 2, 3, 5}, {1, 3, 5, 6}, {2, 3, 5, 6}, {1, 2, 3, 5, 6}, {5, 8}, {1, 5,
       8}, {2, 5, 8}, {3, 5, 8}, {5, 6, 8}, {5, 8, 9}, {1, 2, 5, 8}, {1, 3, 5,
       8}, {1, 5, 6, 8}, {1, 5, 8, 9}, {2, 3, 5, 8}, {2, 5, 6, 8}, {2, 5, 8, 
      9}, {3, 5, 6, 8}, {1, 2, 3, 5, 8}, {1, 2, 5, 6, 8}, {1, 2, 5, 8, 9}, {1,
       3, 5, 6, 8}, {2, 3, 5, 6, 8}, {1, 2, 3, 5, 6, 8}, {3, 9}, {1, 3, 9}, {
      2, 3, 9}, {3, 5, 9}, {3, 8, 9}, {3, 9, 10}, {1, 2, 3, 9}, {1, 3, 5, 
      9}, {1, 3, 8, 9}, {1, 3, 9, 10}, {2, 3, 5, 9}, {2, 3, 8, 9}, {2, 3, 9, 
      10}, {3, 5, 8, 9}, {3, 8, 9, 10}, {1, 2, 3, 5, 9}, {1, 2, 3, 8, 9}, {1, 
      2, 3, 9, 10}, {1, 3, 5, 8, 9}, {1, 3, 8, 9, 10}, {2, 3, 5, 8, 9}, {2, 3,
       8, 9, 10}, {1, 2, 3, 5, 8, 9}, {1, 2, 3, 8, 9, 10}, {7, 9}, {2, 7, 
      9}, {3, 7, 9}, {7, 8, 9}, {2, 3, 7, 9}, {2, 7, 8, 9}, {3, 7, 8, 9}, {2, 
      3, 7, 8, 9}, {5, 10}, {1, 5, 10}, {2, 5, 10}, {3, 5, 10}, {5, 6, 10}, {
      5, 8, 10}, {5, 9, 10}, {1, 2, 5, 10}, {1, 3, 5, 10}, {1, 5, 6, 10}, {1, 
      5, 8, 10}, {1, 5, 9, 10}, {2, 3, 5, 10}, {2, 5, 6, 10}, {2, 5, 8, 10}, {
      2, 5, 9, 10}, {3, 5, 6, 10}, {3, 5, 8, 10}, {3, 5, 9, 10}, {5, 6, 8, 
      10}, {5, 8, 9, 10}, {1, 2, 3, 5, 10}, {1, 2, 5, 6, 10}, {1, 2, 5, 8, 
      10}, {1, 2, 5, 9, 10}, {1, 3, 5, 6, 10}, {1, 3, 5, 8, 10}, {1, 3, 5, 9, 
      10}, {1, 5, 6, 8, 10}, {1, 5, 8, 9, 10}, {2, 3, 5, 6, 10}, {2, 3, 5, 8, 
      10}, {2, 3, 5, 9, 10}, {2, 5, 6, 8, 10}, {2, 5, 8, 9, 10}, {3, 5, 6, 8, 
      10}, {3, 5, 8, 9, 10}, {1, 2, 3, 5, 6, 10}, {1, 2, 3, 5, 8, 10}, {1, 2, 
      3, 5, 9, 10}, {1, 2, 5, 6, 8, 10}, {1, 2, 5, 8, 9, 10}, {1, 3, 5, 6, 8, 
      10}, {1, 3, 5, 8, 9, 10}, {2, 3, 5, 6, 8, 10}, {2, 3, 5, 8, 9, 10}, {1, 
      2, 3, 5, 6, 8, 10}, {1, 2, 3, 5, 8, 9, 10}, {1, 7}, {1, 2, 7}, {1, 3, 
      7}, {1, 4, 7}, {1, 7, 8}, {1, 7, 9}, {1, 2, 3, 7}, {1, 2, 4, 7}, {1, 2, 
      7, 8}, {1, 2, 7, 9}, {1, 3, 4, 7}, {1, 3, 7, 8}, {1, 3, 7, 9}, {1, 4, 7,
       8}, {1, 7, 8, 9}, {1, 2, 3, 4, 7}, {1, 2, 3, 7, 8}, {1, 2, 3, 7, 9}, {
      1, 2, 4, 7, 8}, {1, 2, 7, 8, 9}, {1, 3, 4, 7, 8}, {1, 3, 7, 8, 9}, {1, 
      2, 3, 4, 7, 8}, {1, 2, 3, 7, 8, 9}, {4, 5}, {1, 4, 5}, {2, 4, 5}, {3, 4,
       5}, {4, 5, 6}, {4, 5, 8}, {4, 5, 10}, {1, 2, 4, 5}, {1, 3, 4, 5}, {1, 
      4, 5, 6}, {1, 4, 5, 8}, {1, 4, 5, 10}, {2, 3, 4, 5}, {2, 4, 5, 6}, {2, 
      4, 5, 8}, {2, 4, 5, 10}, {3, 4, 5, 6}, {3, 4, 5, 8}, {3, 4, 5, 10}, {4, 
      5, 6, 8}, {4, 5, 6, 10}, {4, 5, 8, 10}, {1, 2, 3, 4, 5}, {1, 2, 4, 5, 
      6}, {1, 2, 4, 5, 8}, {1, 2, 4, 5, 10}, {1, 3, 4, 5, 6}, {1, 3, 4, 5, 
      8}, {1, 3, 4, 5, 10}, {1, 4, 5, 6, 8}, {1, 4, 5, 6, 10}, {1, 4, 5, 8, 
      10}, {2, 3, 4, 5, 6}, {2, 3, 4, 5, 8}, {2, 3, 4, 5, 10}, {2, 4, 5, 6, 
      8}, {2, 4, 5, 6, 10}, {2, 4, 5, 8, 10}, {3, 4, 5, 6, 8}, {3, 4, 5, 6, 
      10}, {3, 4, 5, 8, 10}, {4, 5, 6, 8, 10}, {1, 2, 3, 4, 5, 6}, {1, 2, 3, 
      4, 5, 8}, {1, 2, 3, 4, 5, 10}, {1, 2, 4, 5, 6, 8}, {1, 2, 4, 5, 6, 
      10}, {1, 2, 4, 5, 8, 10}, {1, 3, 4, 5, 6, 8}, {1, 3, 4, 5, 6, 10}, {1, 
      3, 4, 5, 8, 10}, {1, 4, 5, 6, 8, 10}, {2, 3, 4, 5, 6, 8}, {2, 3, 4, 5, 
      6, 10}, {2, 3, 4, 5, 8, 10}, {2, 4, 5, 6, 8, 10}, {3, 4, 5, 6, 8, 10}, {
      1, 2, 3, 4, 5, 6, 8}, {1, 2, 3, 4, 5, 6, 10}, {1, 2, 3, 4, 5, 8, 10}, {
      1, 2, 4, 5, 6, 8, 10}, {1, 3, 4, 5, 6, 8, 10}, {2, 3, 4, 5, 6, 8, 10}, {
      1, 2, 3, 4, 5, 6, 8, 10}, {4, 9}, {1, 4, 9}, {2, 4, 9}, {3, 4, 9}, {4, 
      5, 9}, {4, 7, 9}, {4, 8, 9}, {4, 9, 10}, {1, 2, 4, 9}, {1, 3, 4, 9}, {1,
       4, 5, 9}, {1, 4, 7, 9}, {1, 4, 8, 9}, {1, 4, 9, 10}, {2, 3, 4, 9}, {2, 
      4, 5, 9}, {2, 4, 7, 9}, {2, 4, 8, 9}, {2, 4, 9, 10}, {3, 4, 5, 9}, {3, 
      4, 7, 9}, {3, 4, 8, 9}, {3, 4, 9, 10}, {4, 5, 8, 9}, {4, 5, 9, 10}, {4, 
      7, 8, 9}, {4, 8, 9, 10}, {1, 2, 3, 4, 9}, {1, 2, 4, 5, 9}, {1, 2, 4, 7, 
      9}, {1, 2, 4, 8, 9}, {1, 2, 4, 9, 10}, {1, 3, 4, 5, 9}, {1, 3, 4, 7, 
      9}, {1, 3, 4, 8, 9}, {1, 3, 4, 9, 10}, {1, 4, 5, 8, 9}, {1, 4, 5, 9, 
      10}, {1, 4, 7, 8, 9}, {1, 4, 8, 9, 10}, {2, 3, 4, 5, 9}, {2, 3, 4, 7, 
      9}, {2, 3, 4, 8, 9}, {2, 3, 4, 9, 10}, {2, 4, 5, 8, 9}, {2, 4, 5, 9, 
      10}, {2, 4, 7, 8, 9}, {2, 4, 8, 9, 10}, {3, 4, 5, 8, 9}, {3, 4, 5, 9, 
      10}, {3, 4, 7, 8, 9}, {3, 4, 8, 9, 10}, {4, 5, 8, 9, 10}, {1, 2, 3, 4, 
      5, 9}, {1, 2, 3, 4, 7, 9}, {1, 2, 3, 4, 8, 9}, {1, 2, 3, 4, 9, 10}, {1, 
      2, 4, 5, 8, 9}, {1, 2, 4, 5, 9, 10}, {1, 2, 4, 7, 8, 9}, {1, 2, 4, 8, 9,
       10}, {1, 3, 4, 5, 8, 9}, {1, 3, 4, 5, 9, 10}, {1, 3, 4, 7, 8, 9}, {1, 
      3, 4, 8, 9, 10}, {1, 4, 5, 8, 9, 10}, {2, 3, 4, 5, 8, 9}, {2, 3, 4, 5, 
      9, 10}, {2, 3, 4, 7, 8, 9}, {2, 3, 4, 8, 9, 10}, {2, 4, 5, 8, 9, 10}, {
      3, 4, 5, 8, 9, 10}, {1, 2, 3, 4, 5, 8, 9}, {1, 2, 3, 4, 5, 9, 10}, {1, 
      2, 3, 4, 7, 8, 9}, {1, 2, 3, 4, 8, 9, 10}, {1, 2, 4, 5, 8, 9, 10}, {1, 
      3, 4, 5, 8, 9, 10}, {2, 3, 4, 5, 8, 9, 10}, {1, 2, 3, 4, 5, 8, 9, 10}, {
      7, 10}, {1, 7, 10}, {2, 7, 10}, {3, 7, 10}, {4, 7, 10}, {7, 8, 10}, {7, 
      9, 10}, {1, 2, 7, 10}, {1, 3, 7, 10}, {1, 4, 7, 10}, {1, 7, 8, 10}, {1, 
      7, 9, 10}, {2, 3, 7, 10}, {2, 4, 7, 10}, {2, 7, 8, 10}, {2, 7, 9, 10}, {
      3, 4, 7, 10}, {3, 7, 8, 10}, {3, 7, 9, 10}, {4, 7, 8, 10}, {4, 7, 9, 
      10}, {7, 8, 9, 10}, {1, 2, 3, 7, 10}, {1, 2, 4, 7, 10}, {1, 2, 7, 8, 
      10}, {1, 2, 7, 9, 10}, {1, 3, 4, 7, 10}, {1, 3, 7, 8, 10}, {1, 3, 7, 9, 
      10}, {1, 4, 7, 8, 10}, {1, 4, 7, 9, 10}, {1, 7, 8, 9, 10}, {2, 3, 4, 7, 
      10}, {2, 3, 7, 8, 10}, {2, 3, 7, 9, 10}, {2, 4, 7, 8, 10}, {2, 4, 7, 9, 
      10}, {2, 7, 8, 9, 10}, {3, 4, 7, 8, 10}, {3, 4, 7, 9, 10}, {3, 7, 8, 9, 
      10}, {4, 7, 8, 9, 10}, {1, 2, 3, 4, 7, 10}, {1, 2, 3, 7, 8, 10}, {1, 2, 
      3, 7, 9, 10}, {1, 2, 4, 7, 8, 10}, {1, 2, 4, 7, 9, 10}, {1, 2, 7, 8, 9, 
      10}, {1, 3, 4, 7, 8, 10}, {1, 3, 4, 7, 9, 10}, {1, 3, 7, 8, 9, 10}, {1, 
      4, 7, 8, 9, 10}, {2, 3, 4, 7, 8, 10}, {2, 3, 4, 7, 9, 10}, {2, 3, 7, 8, 
      9, 10}, {2, 4, 7, 8, 9, 10}, {3, 4, 7, 8, 9, 10}, {1, 2, 3, 4, 7, 8, 
      10}, {1, 2, 3, 4, 7, 9, 10}, {1, 2, 3, 7, 8, 9, 10}, {1, 2, 4, 7, 8, 9, 
      10}, {1, 3, 4, 7, 8, 9, 10}, {2, 3, 4, 7, 8, 9, 10}, {1, 2, 3, 4, 7, 8, 
      9, 10}, {5, 7}, {1, 5, 7}, {2, 5, 7}, {3, 5, 7}, {4, 5, 7}, {5, 7, 8}, {
      5, 7, 9}, {5, 7, 10}, {1, 2, 5, 7}, {1, 3, 5, 7}, {1, 4, 5, 7}, {1, 5, 
      7, 8}, {1, 5, 7, 9}, {1, 5, 7, 10}, {2, 3, 5, 7}, {2, 4, 5, 7}, {2, 5, 
      7, 8}, {2, 5, 7, 9}, {2, 5, 7, 10}, {3, 4, 5, 7}, {3, 5, 7, 8}, {3, 5, 
      7, 9}, {3, 5, 7, 10}, {4, 5, 7, 8}, {4, 5, 7, 9}, {4, 5, 7, 10}, {5, 7, 
      8, 9}, {5, 7, 8, 10}, {5, 7, 9, 10}, {1, 2, 3, 5, 7}, {1, 2, 4, 5, 7}, {
      1, 2, 5, 7, 8}, {1, 2, 5, 7, 9}, {1, 2, 5, 7, 10}, {1, 3, 4, 5, 7}, {1, 
      3, 5, 7, 8}, {1, 3, 5, 7, 9}, {1, 3, 5, 7, 10}, {1, 4, 5, 7, 8}, {1, 4, 
      5, 7, 9}, {1, 4, 5, 7, 10}, {1, 5, 7, 8, 9}, {1, 5, 7, 8, 10}, {1, 5, 7,
       9, 10}, {2, 3, 4, 5, 7}, {2, 3, 5, 7, 8}, {2, 3, 5, 7, 9}, {2, 3, 5, 7,
       10}, {2, 4, 5, 7, 8}, {2, 4, 5, 7, 9}, {2, 4, 5, 7, 10}, {2, 5, 7, 8, 
      9}, {2, 5, 7, 8, 10}, {2, 5, 7, 9, 10}, {3, 4, 5, 7, 8}, {3, 4, 5, 7, 
      9}, {3, 4, 5, 7, 10}, {3, 5, 7, 8, 9}, {3, 5, 7, 8, 10}, {3, 5, 7, 9, 
      10}, {4, 5, 7, 8, 9}, {4, 5, 7, 8, 10}, {4, 5, 7, 9, 10}, {5, 7, 8, 9, 
      10}, {1, 2, 3, 4, 5, 7}, {1, 2, 3, 5, 7, 8}, {1, 2, 3, 5, 7, 9}, {1, 2, 
      3, 5, 7, 10}, {1, 2, 4, 5, 7, 8}, {1, 2, 4, 5, 7, 9}, {1, 2, 4, 5, 7, 
      10}, {1, 2, 5, 7, 8, 9}, {1, 2, 5, 7, 8, 10}, {1, 2, 5, 7, 9, 10}, {1, 
      3, 4, 5, 7, 8}, {1, 3, 4, 5, 7, 9}, {1, 3, 4, 5, 7, 10}, {1, 3, 5, 7, 8,
       9}, {1, 3, 5, 7, 8, 10}, {1, 3, 5, 7, 9, 10}, {1, 4, 5, 7, 8, 9}, {1, 
      4, 5, 7, 8, 10}, {1, 4, 5, 7, 9, 10}, {1, 5, 7, 8, 9, 10}, {2, 3, 4, 5, 
      7, 8}, {2, 3, 4, 5, 7, 9}, {2, 3, 4, 5, 7, 10}, {2, 3, 5, 7, 8, 9}, {2, 
      3, 5, 7, 8, 10}, {2, 3, 5, 7, 9, 10}, {2, 4, 5, 7, 8, 9}, {2, 4, 5, 7, 
      8, 10}, {2, 4, 5, 7, 9, 10}, {2, 5, 7, 8, 9, 10}, {3, 4, 5, 7, 8, 9}, {
      3, 4, 5, 7, 8, 10}, {3, 4, 5, 7, 9, 10}, {3, 5, 7, 8, 9, 10}, {4, 5, 7, 
      8, 9, 10}, {1, 2, 3, 4, 5, 7, 8}, {1, 2, 3, 4, 5, 7, 9}, {1, 2, 3, 4, 5,
       7, 10}, {1, 2, 3, 5, 7, 8, 9}, {1, 2, 3, 5, 7, 8, 10}, {1, 2, 3, 5, 7, 
      9, 10}, {1, 2, 4, 5, 7, 8, 9}, {1, 2, 4, 5, 7, 8, 10}, {1, 2, 4, 5, 7, 
      9, 10}, {1, 2, 5, 7, 8, 9, 10}, {1, 3, 4, 5, 7, 8, 9}, {1, 3, 4, 5, 7, 
      8, 10}, {1, 3, 4, 5, 7, 9, 10}, {1, 3, 5, 7, 8, 9, 10}, {1, 4, 5, 7, 8, 
      9, 10}, {2, 3, 4, 5, 7, 8, 9}, {2, 3, 4, 5, 7, 8, 10}, {2, 3, 4, 5, 7, 
      9, 10}, {2, 3, 5, 7, 8, 9, 10}, {2, 4, 5, 7, 8, 9, 10}, {3, 4, 5, 7, 8, 
      9, 10}, {1, 2, 3, 4, 5, 7, 8, 9}, {1, 2, 3, 4, 5, 7, 8, 10}, {1, 2, 3, 
      4, 5, 7, 9, 10}, {1, 2, 3, 5, 7, 8, 9, 10}, {1, 2, 4, 5, 7, 8, 9, 10}, {
      1, 3, 4, 5, 7, 8, 9, 10}, {2, 3, 4, 5, 7, 8, 9, 10}, {1, 2, 3, 4, 5, 7, 
      8, 9, 10}, {6, 9}, {1, 6, 9}, {2, 6, 9}, {3, 6, 9}, {4, 6, 9}, {5, 6, 
      9}, {6, 8, 9}, {6, 9, 10}, {1, 2, 6, 9}, {1, 3, 6, 9}, {1, 4, 6, 9}, {1,
       5, 6, 9}, {1, 6, 8, 9}, {1, 6, 9, 10}, {2, 3, 6, 9}, {2, 4, 6, 9}, {2, 
      5, 6, 9}, {2, 6, 8, 9}, {2, 6, 9, 10}, {3, 4, 6, 9}, {3, 5, 6, 9}, {3, 
      6, 8, 9}, {3, 6, 9, 10}, {4, 5, 6, 9}, {4, 6, 8, 9}, {4, 6, 9, 10}, {5, 
      6, 8, 9}, {5, 6, 9, 10}, {6, 8, 9, 10}, {1, 2, 3, 6, 9}, {1, 2, 4, 6, 
      9}, {1, 2, 5, 6, 9}, {1, 2, 6, 8, 9}, {1, 2, 6, 9, 10}, {1, 3, 4, 6, 
      9}, {1, 3, 5, 6, 9}, {1, 3, 6, 8, 9}, {1, 3, 6, 9, 10}, {1, 4, 5, 6, 
      9}, {1, 4, 6, 8, 9}, {1, 4, 6, 9, 10}, {1, 5, 6, 8, 9}, {1, 5, 6, 9, 
      10}, {1, 6, 8, 9, 10}, {2, 3, 4, 6, 9}, {2, 3, 5, 6, 9}, {2, 3, 6, 8, 
      9}, {2, 3, 6, 9, 10}, {2, 4, 5, 6, 9}, {2, 4, 6, 8, 9}, {2, 4, 6, 9, 
      10}, {2, 5, 6, 8, 9}, {2, 5, 6, 9, 10}, {2, 6, 8, 9, 10}, {3, 4, 5, 6, 
      9}, {3, 4, 6, 8, 9}, {3, 4, 6, 9, 10}, {3, 5, 6, 8, 9}, {3, 5, 6, 9, 
      10}, {3, 6, 8, 9, 10}, {4, 5, 6, 8, 9}, {4, 5, 6, 9, 10}, {4, 6, 8, 9, 
      10}, {5, 6, 8, 9, 10}, {1, 2, 3, 4, 6, 9}, {1, 2, 3, 5, 6, 9}, {1, 2, 3,
       6, 8, 9}, {1, 2, 3, 6, 9, 10}, {1, 2, 4, 5, 6, 9}, {1, 2, 4, 6, 8, 
      9}, {1, 2, 4, 6, 9, 10}, {1, 2, 5, 6, 8, 9}, {1, 2, 5, 6, 9, 10}, {1, 2,
       6, 8, 9, 10}, {1, 3, 4, 5, 6, 9}, {1, 3, 4, 6, 8, 9}, {1, 3, 4, 6, 9, 
      10}, {1, 3, 5, 6, 8, 9}, {1, 3, 5, 6, 9, 10}, {1, 3, 6, 8, 9, 10}, {1, 
      4, 5, 6, 8, 9}, {1, 4, 5, 6, 9, 10}, {1, 4, 6, 8, 9, 10}, {1, 5, 6, 8, 
      9, 10}, {2, 3, 4, 5, 6, 9}, {2, 3, 4, 6, 8, 9}, {2, 3, 4, 6, 9, 10}, {2,
       3, 5, 6, 8, 9}, {2, 3, 5, 6, 9, 10}, {2, 3, 6, 8, 9, 10}, {2, 4, 5, 6, 
      8, 9}, {2, 4, 5, 6, 9, 10}, {2, 4, 6, 8, 9, 10}, {2, 5, 6, 8, 9, 10}, {
      3, 4, 5, 6, 8, 9}, {3, 4, 5, 6, 9, 10}, {3, 4, 6, 8, 9, 10}, {3, 5, 6, 
      8, 9, 10}, {4, 5, 6, 8, 9, 10}, {1, 2, 3, 4, 5, 6, 9}, {1, 2, 3, 4, 6, 
      8, 9}, {1, 2, 3, 4, 6, 9, 10}, {1, 2, 3, 5, 6, 8, 9}, {1, 2, 3, 5, 6, 9,
       10}, {1, 2, 3, 6, 8, 9, 10}, {1, 2, 4, 5, 6, 8, 9}, {1, 2, 4, 5, 6, 9, 
      10}, {1, 2, 4, 6, 8, 9, 10}, {1, 2, 5, 6, 8, 9, 10}, {1, 3, 4, 5, 6, 8, 
      9}, {1, 3, 4, 5, 6, 9, 10}, {1, 3, 4, 6, 8, 9, 10}, {1, 3, 5, 6, 8, 9, 
      10}, {1, 4, 5, 6, 8, 9, 10}, {2, 3, 4, 5, 6, 8, 9}, {2, 3, 4, 5, 6, 9, 
      10}, {2, 3, 4, 6, 8, 9, 10}, {2, 3, 5, 6, 8, 9, 10}, {2, 4, 5, 6, 8, 9, 
      10}, {3, 4, 5, 6, 8, 9, 10}, {1, 2, 3, 4, 5, 6, 8, 9}, {1, 2, 3, 4, 5, 
      6, 9, 10}, {1, 2, 3, 4, 6, 8, 9, 10}, {1, 2, 3, 5, 6, 8, 9, 10}, {1, 2, 
      4, 5, 6, 8, 9, 10}, {1, 3, 4, 5, 6, 8, 9, 10}, {2, 3, 4, 5, 6, 8, 9, 
      10}, {1, 2, 3, 4, 5, 6, 8, 9, 10}}, "SimplexWeights" -> CompressedData["

1:eJxTTMoPSmVkYGD4z8RAdeCZ+ySHI5fRIfRU9lehLUwOJ/WWPtN/wuRQ4Dlv
rzobs4MD8wkdc3dmh4SkOO7TccwOFj57jnbbsTiYuvMfusvM6lAuc6V0GzeC
3mC/XyRJgdXh68+FbKscEbSP1wmH0BAE3bLKz7InmtXhzf1jeeKxrA4O8U3C
p5Mw6dUrin/JpyHo6Z8v7cvqQdAXtp5K+IuHln7OuNH0BIJO2Cq98+gZBP3p
8Ouqrlu4aSf//xr77xBPuxVYf977BkHz/38TG/aOMC3Tul3wyk/a0ZYzvNxV
mNjgtFvcCtb5vtSjPzheF2PxHzi6mflE3Z/sgaNP5yZoN5Xipm1j6zd7NLA5
/FzvYXzqysDTp4PCldhvjNIw+vz8WR277pNPh3Sdk+pnYh+0tD3rU+ZTQUOX
/tHjkREQTj5tJsj/6GrlKD1QtKbUoU+av4Yu7fh79u7Xf0bpkUrvfSiSJ7KC
Y5QepQeEFg4vWHr58ig9Uumyyew6tXc4R+lRepQegfSkghnLzr0bpUfpUXok
0gCgHSee
     "], 
    "IntervalIndices" -> {{8, 11}, {4, 12}, {10, 13}, {9, 14}, {3, 15}, {7, 
     16}, {2, 17}, {6, 18}, {5, 21}, {26, 30}, {27, 57}, {120, 124}}, 
    "Intervals" -> {{0., 2.1782387263498646`}, {0., 2.337926785804749}, {0., 
     2.3614194888267304`}, {0., 2.3780054868631666`}, {0., 
     2.4097732065714865`}, {0., 2.4212857139757915`}, {0., 
     2.5305400322045237`}, {0., 2.62688781365514}, {0., 
     2.6408120747436996`}, {2.669701049531172, 2.673238899627819}, {
     2.6704548506204357`, 2.741375669283918}, {2.812638666462276, 
     2.85390129151892}}, "FiltrationRadii" -> CompressedData["
1:eJwBdQGK/iFib1JlAQAAAC0AAAAAAAAAAAAAAElt5GwIbQFAVcpr9RK0AkDJ
LqXmL+QCQHBJnr0nBgNAQAPILDdHA0BgYl4Ly14DQDhMvMWLPgRANUcPwt0D
BUB3HNR1tgsFQLA/vxRiIAVA9fmhBqpBBUBMSshAVVQFQISqTjmMWwVA7N/G
bhddBUBAX4ITy2IFQKuoc/ofZgVAl/PSvmqMBUDQtcpg/YwFQBvnAbE1yAVA
YLUbucXMBUDyw+t6itoFQEJP/yi/3AVARnA7873sBUAP/+xdVu4FQByFtxHU
+QVAOZhKRyQCBkBGXqgFn00GQPBB1xYETwZAgwPIfvxrBkDLbWArgnUGQD1d
f7NIgAZA+a9IM8rUBkDLUlciB9gGQM+fmoi63wZAVIrOGo8CB0A/BeUDylIH
QPiMSGhQVwdANhEP4tV5B0ApGsLyKfoHQEH7m7vr/AdAveEUbhSoCEATV3Cl
09MIQHaTByx93AlAknCYps7uCUD8XJCa
     "], "Edges" -> {
      DirectedEdge[11, 12], 
      DirectedEdge[11, 15], 
      DirectedEdge[11, 16], 
      DirectedEdge[14, 17], 
      DirectedEdge[11, 17], 
      DirectedEdge[15, 17], 
      DirectedEdge[13, 18], 
      DirectedEdge[14, 19], 
      DirectedEdge[17, 19], 
      DirectedEdge[14, 21], 
      DirectedEdge[12, 22], 
      DirectedEdge[16, 24], 
      DirectedEdge[12, 24], 
      DirectedEdge[16, 26], 
      DirectedEdge[15, 26], 
      DirectedEdge[17, 26], 
      DirectedEdge[18, 27], 
      DirectedEdge[15, 27], 
      DirectedEdge[11, 28], 
      DirectedEdge[15, 28], 
      DirectedEdge[17, 28], 
      DirectedEdge[29, 30], 
      DirectedEdge[12, 31], 
      DirectedEdge[15, 31], 
      DirectedEdge[11, 33], 
      DirectedEdge[18, 33], 
      DirectedEdge[15, 33], 
      DirectedEdge[18, 35], 
      DirectedEdge[12, 35], 
      DirectedEdge[15, 35], 
      DirectedEdge[36, 37], 
      DirectedEdge[34, 37], 
      DirectedEdge[23, 37], 
      DirectedEdge[13, 39], 
      DirectedEdge[14, 39], 
      DirectedEdge[17, 39], 
      DirectedEdge[15, 41], 
      DirectedEdge[17, 41], 
      DirectedEdge[17, 43], 
      DirectedEdge[44, 45], 
      DirectedEdge[29, 45], 
      DirectedEdge[30, 45], 
      DirectedEdge[20, 45], 
      DirectedEdge[16, 47], 
      DirectedEdge[48, 49], 
      DirectedEdge[42, 49], 
      DirectedEdge[29, 49], 
      DirectedEdge[25, 49], 
      DirectedEdge[23, 49], 
      DirectedEdge[48, 50], 
      DirectedEdge[42, 50], 
      DirectedEdge[29, 50], 
      DirectedEdge[51, 52], 
      DirectedEdge[13, 53], 
      DirectedEdge[15, 53], 
      DirectedEdge[13, 55], 
      DirectedEdge[17, 55], 
      DirectedEdge[56, 57], 
      DirectedEdge[54, 57], 
      DirectedEdge[44, 57], 
      DirectedEdge[42, 57], 
      DirectedEdge[56, 58], 
      DirectedEdge[44, 58], 
      DirectedEdge[40, 58], 
      DirectedEdge[29, 58], 
      DirectedEdge[30, 58], 
      DirectedEdge[20, 58], 
      DirectedEdge[13, 60], 
      DirectedEdge[11, 60], 
      DirectedEdge[15, 60], 
      DirectedEdge[61, 62], 
      DirectedEdge[56, 62], 
      DirectedEdge[44, 62], 
      DirectedEdge[61, 63], 
      DirectedEdge[54, 63], 
      DirectedEdge[57, 63], 
      DirectedEdge[61, 64], 
      DirectedEdge[34, 64], 
      DirectedEdge[57, 64], 
      DirectedEdge[61, 65], 
      DirectedEdge[40, 65], 
      DirectedEdge[20, 65], 
      DirectedEdge[67, 69], 
      DirectedEdge[66, 69], 
      DirectedEdge[59, 69], 
      DirectedEdge[46, 69], 
      DirectedEdge[21, 72], 
      DirectedEdge[13, 74], 
      DirectedEdge[12, 74], 
      DirectedEdge[15, 74], 
      DirectedEdge[75, 76], 
      DirectedEdge[54, 76], 
      DirectedEdge[32, 76], 
      DirectedEdge[57, 76], 
      DirectedEdge[23, 76], 
      DirectedEdge[75, 77], 
      DirectedEdge[36, 77], 
      DirectedEdge[32, 77], 
      DirectedEdge[57, 77], 
      DirectedEdge[23, 77], 
      DirectedEdge[75, 78], 
      DirectedEdge[61, 78], 
      DirectedEdge[32, 78], 
      DirectedEdge[79, 81], 
      DirectedEdge[79, 82], 
      DirectedEdge[80, 82], 
      DirectedEdge[81, 82], 
      DirectedEdge[70, 82], 
      DirectedEdge[38, 82], 
      DirectedEdge[12, 84], 
      DirectedEdge[15, 84], 
      DirectedEdge[17, 84], 
      DirectedEdge[85, 86], 
      DirectedEdge[44, 86], 
      DirectedEdge[42, 86], 
      DirectedEdge[32, 86], 
      DirectedEdge[23, 86], 
      DirectedEdge[85, 87], 
      DirectedEdge[44, 87], 
      DirectedEdge[32, 87], 
      DirectedEdge[29, 87], 
      DirectedEdge[25, 87], 
      DirectedEdge[85, 88], 
      DirectedEdge[44, 88], 
      DirectedEdge[32, 88], 
      DirectedEdge[85, 89], 
      DirectedEdge[75, 89], 
      DirectedEdge[56, 89], 
      DirectedEdge[90, 93], 
      DirectedEdge[91, 94], 
      DirectedEdge[93, 94], 
      DirectedEdge[81, 94], 
      DirectedEdge[68, 94], 
      DirectedEdge[66, 94], 
      DirectedEdge[90, 95], 
      DirectedEdge[92, 95], 
      DirectedEdge[93, 95], 
      DirectedEdge[52, 95], 
      DirectedEdge[91, 96], 
      DirectedEdge[90, 96], 
      DirectedEdge[79, 96], 
      DirectedEdge[66, 96], 
      DirectedEdge[97, 99], 
      DirectedEdge[15, 100], 
      DirectedEdge[101, 102], 
      DirectedEdge[44, 102], 
      DirectedEdge[42, 102], 
      DirectedEdge[32, 102], 
      DirectedEdge[23, 102], 
      DirectedEdge[101, 103], 
      DirectedEdge[44, 103], 
      DirectedEdge[42, 103], 
      DirectedEdge[101, 104], 
      DirectedEdge[54, 104], 
      DirectedEdge[44, 104], 
      DirectedEdge[42, 104], 
      DirectedEdge[57, 104], 
      DirectedEdge[106, 108], 
      DirectedEdge[105, 108], 
      DirectedEdge[93, 108], 
      DirectedEdge[107, 109], 
      DirectedEdge[105, 109], 
      DirectedEdge[93, 109], 
      DirectedEdge[81, 109], 
      DirectedEdge[68, 109], 
      DirectedEdge[66, 109], 
      DirectedEdge[107, 110], 
      DirectedEdge[106, 110], 
      DirectedEdge[68, 110], 
      DirectedEdge[66, 110], 
      DirectedEdge[113, 114], 
      DirectedEdge[112, 114], 
      DirectedEdge[111, 114], 
      DirectedEdge[99, 114], 
      DirectedEdge[21, 116], 
      DirectedEdge[17, 116], 
      DirectedEdge[117, 118], 
      DirectedEdge[73, 118], 
      DirectedEdge[44, 118], 
      DirectedEdge[29, 118], 
      DirectedEdge[30, 118], 
      DirectedEdge[20, 118], 
      DirectedEdge[18, 120], 
      DirectedEdge[21, 120], 
      DirectedEdge[17, 120], 
      DirectedEdge[18, 121], 
      DirectedEdge[122, 123], 
      DirectedEdge[101, 123], 
      DirectedEdge[44, 123], 
      DirectedEdge[42, 123], 
      DirectedEdge[36, 123], 
      DirectedEdge[32, 123], 
      DirectedEdge[23, 123], 
      DirectedEdge[122, 124], 
      DirectedEdge[122, 125], 
      DirectedEdge[101, 125], 
      DirectedEdge[44, 125], 
      DirectedEdge[42, 125], 
      DirectedEdge[34, 125], 
      DirectedEdge[122, 126], 
      DirectedEdge[101, 126], 
      DirectedEdge[44, 126], 
      DirectedEdge[42, 126], 
      DirectedEdge[57, 126], 
      DirectedEdge[128, 130], 
      DirectedEdge[127, 130], 
      DirectedEdge[106, 130], 
      DirectedEdge[105, 130], 
      DirectedEdge[93, 130], 
      DirectedEdge[38, 130], 
      DirectedEdge[129, 131], 
      DirectedEdge[127, 131], 
      DirectedEdge[107, 131], 
      DirectedEdge[105, 131], 
      DirectedEdge[93, 131], 
      DirectedEdge[80, 131], 
      DirectedEdge[81, 131], 
      DirectedEdge[68, 131], 
      DirectedEdge[66, 131], 
      DirectedEdge[129, 132], 
      DirectedEdge[128, 132], 
      DirectedEdge[107, 132], 
      DirectedEdge[106, 132], 
      DirectedEdge[70, 132], 
      DirectedEdge[68, 132], 
      DirectedEdge[66, 132], 
      DirectedEdge[135, 136], 
      DirectedEdge[134, 136], 
      DirectedEdge[133, 136], 
      DirectedEdge[113, 136], 
      DirectedEdge[112, 136], 
      DirectedEdge[111, 136], 
      DirectedEdge[99, 136], 
      DirectedEdge[83, 136], 
      DirectedEdge[18, 138], 
      DirectedEdge[17, 138], 
      DirectedEdge[139, 140], 
      DirectedEdge[122, 140], 
      DirectedEdge[101, 140], 
      DirectedEdge[139, 141], 
      DirectedEdge[122, 141], 
      DirectedEdge[101, 141], 
      DirectedEdge[85, 141], 
      DirectedEdge[44, 141], 
      DirectedEdge[42, 141], 
      DirectedEdge[36, 141], 
      DirectedEdge[32, 141], 
      DirectedEdge[23, 141], 
      DirectedEdge[139, 142], 
      DirectedEdge[122, 142], 
      DirectedEdge[124, 142], 
      DirectedEdge[117, 142], 
      DirectedEdge[139, 143], 
      DirectedEdge[122, 143], 
      DirectedEdge[101, 143], 
      DirectedEdge[42, 143], 
      DirectedEdge[34, 143], 
      DirectedEdge[139, 144], 
      DirectedEdge[122, 144], 
      DirectedEdge[101, 144], 
      DirectedEdge[56, 144], 
      DirectedEdge[44, 144], 
      DirectedEdge[42, 144], 
      DirectedEdge[57, 144], 
      DirectedEdge[146, 150], 
      DirectedEdge[145, 150], 
      DirectedEdge[127, 150], 
      DirectedEdge[105, 150], 
      DirectedEdge[148, 151], 
      DirectedEdge[145, 151], 
      DirectedEdge[128, 151], 
      DirectedEdge[106, 151], 
      DirectedEdge[149, 152], 
      DirectedEdge[145, 152], 
      DirectedEdge[129, 152], 
      DirectedEdge[107, 152], 
      DirectedEdge[148, 153], 
      DirectedEdge[146, 153], 
      DirectedEdge[128, 153], 
      DirectedEdge[127, 153], 
      DirectedEdge[106, 153], 
      DirectedEdge[105, 153], 
      DirectedEdge[90, 153], 
      DirectedEdge[93, 153], 
      DirectedEdge[38, 153], 
      DirectedEdge[149, 154], 
      DirectedEdge[146, 154], 
      DirectedEdge[129, 154], 
      DirectedEdge[127, 154], 
      DirectedEdge[107, 154], 
      DirectedEdge[105, 154], 
      DirectedEdge[91, 154], 
      DirectedEdge[93, 154], 
      DirectedEdge[80, 154], 
      DirectedEdge[81, 154], 
      DirectedEdge[68, 154], 
      DirectedEdge[66, 154], 
      DirectedEdge[149, 155], 
      DirectedEdge[148, 155], 
      DirectedEdge[129, 155], 
      DirectedEdge[128, 155], 
      DirectedEdge[107, 155], 
      DirectedEdge[106, 155], 
      DirectedEdge[70, 155], 
      DirectedEdge[68, 155], 
      DirectedEdge[159, 162], 
      DirectedEdge[157, 162], 
      DirectedEdge[156, 162], 
      DirectedEdge[133, 162], 
      DirectedEdge[111, 162], 
      DirectedEdge[160, 163], 
      DirectedEdge[158, 163], 
      DirectedEdge[156, 163], 
      DirectedEdge[134, 163], 
      DirectedEdge[112, 163], 
      DirectedEdge[161, 164], 
      DirectedEdge[158, 164], 
      DirectedEdge[157, 164], 
      DirectedEdge[135, 164], 
      DirectedEdge[113, 164], 
      DirectedEdge[161, 165], 
      DirectedEdge[160, 165], 
      DirectedEdge[159, 165], 
      DirectedEdge[135, 165], 
      DirectedEdge[134, 165], 
      DirectedEdge[133, 165], 
      DirectedEdge[113, 165], 
      DirectedEdge[112, 165], 
      DirectedEdge[111, 165], 
      DirectedEdge[97, 165], 
      DirectedEdge[99, 165], 
      DirectedEdge[83, 165], 
      DirectedEdge[169, 170], 
      DirectedEdge[168, 170], 
      DirectedEdge[167, 170], 
      DirectedEdge[166, 170], 
      DirectedEdge[137, 170], 
      DirectedEdge[115, 170], 
      DirectedEdge[21, 172], 
      DirectedEdge[15, 172], 
      DirectedEdge[17, 172], 
      DirectedEdge[173, 174], 
      DirectedEdge[117, 174], 
      DirectedEdge[101, 174], 
      DirectedEdge[173, 175], 
      DirectedEdge[124, 175], 
      DirectedEdge[177, 178], 
      DirectedEdge[176, 178], 
      DirectedEdge[147, 178], 
      DirectedEdge[145, 178], 
      DirectedEdge[11, 180], 
      DirectedEdge[21, 180], 
      DirectedEdge[15, 180], 
      DirectedEdge[17, 180], 
      DirectedEdge[181, 182], 
      DirectedEdge[117, 182], 
      DirectedEdge[44, 182], 
      DirectedEdge[181, 183], 
      DirectedEdge[173, 183], 
      DirectedEdge[101, 183], 
      DirectedEdge[44, 183], 
      DirectedEdge[42, 183], 
      DirectedEdge[181, 184], 
      DirectedEdge[124, 184], 
      DirectedEdge[101, 184], 
      DirectedEdge[44, 184], 
      DirectedEdge[42, 184], 
      DirectedEdge[34, 184], 
      DirectedEdge[181, 185], 
      DirectedEdge[117, 185], 
      DirectedEdge[73, 185], 
      DirectedEdge[44, 185], 
      DirectedEdge[29, 185], 
      DirectedEdge[30, 185], 
      DirectedEdge[187, 190], 
      DirectedEdge[186, 190], 
      DirectedEdge[176, 190], 
      DirectedEdge[106, 190], 
      DirectedEdge[188, 191], 
      DirectedEdge[186, 191], 
      DirectedEdge[148, 191], 
      DirectedEdge[147, 191], 
      DirectedEdge[189, 192], 
      DirectedEdge[186, 192], 
      DirectedEdge[119, 192], 
      DirectedEdge[46, 192], 
      DirectedEdge[188, 193], 
      DirectedEdge[187, 193], 
      DirectedEdge[177, 193], 
      DirectedEdge[128, 193], 
      DirectedEdge[197, 198], 
      DirectedEdge[195, 198], 
      DirectedEdge[194, 198], 
      DirectedEdge[179, 198], 
      DirectedEdge[157, 198], 
      DirectedEdge[14, 200], 
      DirectedEdge[15, 200], 
      DirectedEdge[17, 200], 
      DirectedEdge[201, 202], 
      DirectedEdge[101, 202], 
      DirectedEdge[44, 202], 
      DirectedEdge[29, 202], 
      DirectedEdge[30, 202], 
      DirectedEdge[20, 202], 
      DirectedEdge[201, 203], 
      DirectedEdge[173, 203], 
      DirectedEdge[117, 203], 
      DirectedEdge[73, 203], 
      DirectedEdge[44, 203], 
      DirectedEdge[29, 203], 
      DirectedEdge[30, 203], 
      DirectedEdge[20, 203], 
      DirectedEdge[201, 204], 
      DirectedEdge[101, 204], 
      DirectedEdge[44, 204], 
      DirectedEdge[42, 204], 
      DirectedEdge[20, 204], 
      DirectedEdge[201, 205], 
      DirectedEdge[101, 205], 
      DirectedEdge[54, 205], 
      DirectedEdge[44, 205], 
      DirectedEdge[42, 205], 
      DirectedEdge[40, 205], 
      DirectedEdge[57, 205], 
      DirectedEdge[207, 210], 
      DirectedEdge[206, 210], 
      DirectedEdge[176, 210], 
      DirectedEdge[119, 210], 
      DirectedEdge[208, 211], 
      DirectedEdge[206, 211], 
      DirectedEdge[106, 211], 
      DirectedEdge[46, 211], 
      DirectedEdge[209, 212], 
      DirectedEdge[206, 212], 
      DirectedEdge[107, 212], 
      DirectedEdge[59, 212], 
      DirectedEdge[208, 213], 
      DirectedEdge[207, 213], 
      DirectedEdge[189, 213], 
      DirectedEdge[187, 213], 
      DirectedEdge[209, 214], 
      DirectedEdge[208, 214], 
      DirectedEdge[107, 214], 
      DirectedEdge[106, 214], 
      DirectedEdge[67, 214], 
      DirectedEdge[68, 214], 
      DirectedEdge[66, 214], 
      DirectedEdge[218, 220], 
      DirectedEdge[216, 220], 
      DirectedEdge[215, 220], 
      DirectedEdge[196, 220], 
      DirectedEdge[194, 220], 
      DirectedEdge[219, 221], 
      DirectedEdge[217, 221], 
      DirectedEdge[216, 221], 
      DirectedEdge[113, 221], 
      DirectedEdge[71, 221], 
      DirectedEdge[14, 224], 
      DirectedEdge[16, 224], 
      DirectedEdge[15, 224], 
      DirectedEdge[17, 224], 
      DirectedEdge[225, 226], 
      DirectedEdge[201, 226], 
      DirectedEdge[101, 226], 
      DirectedEdge[48, 226], 
      DirectedEdge[44, 226], 
      DirectedEdge[29, 226], 
      DirectedEdge[30, 226], 
      DirectedEdge[20, 226], 
      DirectedEdge[225, 227], 
      DirectedEdge[30, 227], 
      DirectedEdge[229, 230], 
      DirectedEdge[228, 230], 
      DirectedEdge[208, 230], 
      DirectedEdge[206, 230], 
      DirectedEdge[106, 230], 
      DirectedEdge[51, 230], 
      DirectedEdge[46, 230], 
      DirectedEdge[13, 232], 
      DirectedEdge[21, 232], 
      DirectedEdge[17, 232], 
      DirectedEdge[233, 234], 
      DirectedEdge[117, 234], 
      DirectedEdge[56, 234], 
      DirectedEdge[233, 235], 
      DirectedEdge[173, 235], 
      DirectedEdge[101, 235], 
      DirectedEdge[54, 235], 
      DirectedEdge[44, 235], 
      DirectedEdge[42, 235], 
      DirectedEdge[57, 235], 
      DirectedEdge[233, 236], 
      DirectedEdge[124, 236], 
      DirectedEdge[101, 236], 
      DirectedEdge[44, 236], 
      DirectedEdge[42, 236], 
      DirectedEdge[57, 236], 
      DirectedEdge[233, 237], 
      DirectedEdge[181, 237], 
      DirectedEdge[61, 237], 
      DirectedEdge[233, 238], 
      DirectedEdge[117, 238], 
      DirectedEdge[73, 238], 
      DirectedEdge[44, 238], 
      DirectedEdge[40, 238], 
      DirectedEdge[29, 238], 
      DirectedEdge[30, 238], 
      DirectedEdge[20, 238], 
      DirectedEdge[240, 244], 
      DirectedEdge[239, 244], 
      DirectedEdge[176, 244], 
      DirectedEdge[107, 244], 
      DirectedEdge[241, 245], 
      DirectedEdge[239, 245], 
      DirectedEdge[149, 245], 
      DirectedEdge[147, 245], 
      DirectedEdge[242, 246], 
      DirectedEdge[239, 246], 
      DirectedEdge[186, 246], 
      DirectedEdge[66, 246], 
      DirectedEdge[243, 247], 
      DirectedEdge[239, 247], 
      DirectedEdge[119, 247], 
      DirectedEdge[59, 247], 
      DirectedEdge[241, 248], 
      DirectedEdge[240, 248], 
      DirectedEdge[177, 248], 
      DirectedEdge[129, 248], 
      DirectedEdge[242, 249], 
      DirectedEdge[240, 249], 
      DirectedEdge[187, 249], 
      DirectedEdge[107, 249], 
      DirectedEdge[106, 249], 
      DirectedEdge[68, 249], 
      DirectedEdge[66, 249], 
      DirectedEdge[243, 250], 
      DirectedEdge[240, 250], 
      DirectedEdge[209, 250], 
      DirectedEdge[207, 250], 
      DirectedEdge[242, 251], 
      DirectedEdge[241, 251], 
      DirectedEdge[188, 251], 
      DirectedEdge[129, 251], 
      DirectedEdge[128, 251], 
      DirectedEdge[107, 251], 
      DirectedEdge[106, 251], 
      DirectedEdge[70, 251], 
      DirectedEdge[68, 251], 
      DirectedEdge[66, 251], 
      DirectedEdge[243, 252], 
      DirectedEdge[242, 252], 
      DirectedEdge[189, 252], 
      DirectedEdge[67, 252], 
      DirectedEdge[257, 262], 
      DirectedEdge[254, 262], 
      DirectedEdge[253, 262], 
      DirectedEdge[179, 262], 
      DirectedEdge[158, 262], 
      DirectedEdge[258, 263], 
      DirectedEdge[255, 263], 
      DirectedEdge[253, 263], 
      DirectedEdge[194, 263], 
      DirectedEdge[113, 263], 
      DirectedEdge[259, 264], 
      DirectedEdge[256, 264], 
      DirectedEdge[253, 264], 
      DirectedEdge[217, 264], 
      DirectedEdge[215, 264], 
      DirectedEdge[260, 265], 
      DirectedEdge[255, 265], 
      DirectedEdge[254, 265], 
      DirectedEdge[195, 265], 
      DirectedEdge[161, 265], 
      DirectedEdge[261, 266], 
      DirectedEdge[256, 266], 
      DirectedEdge[255, 266], 
      DirectedEdge[196, 266], 
      DirectedEdge[71, 266], 
      DirectedEdge[260, 267], 
      DirectedEdge[258, 267], 
      DirectedEdge[257, 267], 
      DirectedEdge[197, 267], 
      DirectedEdge[135, 267], 
      DirectedEdge[261, 268], 
      DirectedEdge[259, 268], 
      DirectedEdge[258, 268], 
      DirectedEdge[219, 268], 
      DirectedEdge[218, 268], 
      DirectedEdge[274, 276], 
      DirectedEdge[272, 276], 
      DirectedEdge[270, 276], 
      DirectedEdge[269, 276], 
      DirectedEdge[199, 276], 
      DirectedEdge[168, 276], 
      DirectedEdge[275, 277], 
      DirectedEdge[273, 277], 
      DirectedEdge[271, 277], 
      DirectedEdge[270, 277], 
      DirectedEdge[223, 277], 
      DirectedEdge[222, 277], 
      DirectedEdge[16, 280], 
      DirectedEdge[15, 280], 
      DirectedEdge[281, 282], 
      DirectedEdge[101, 282], 
      DirectedEdge[48, 282], 
      DirectedEdge[281, 283], 
      DirectedEdge[44, 283], 
      DirectedEdge[32, 283], 
      DirectedEdge[29, 283], 
      DirectedEdge[25, 283], 
      DirectedEdge[281, 284], 
      DirectedEdge[44, 284], 
      DirectedEdge[29, 284], 
      DirectedEdge[281, 285], 
      DirectedEdge[225, 285], 
      DirectedEdge[44, 285], 
      DirectedEdge[29, 285], 
      DirectedEdge[30, 285], 
      DirectedEdge[20, 285], 
      DirectedEdge[287, 290], 
      DirectedEdge[286, 290], 
      DirectedEdge[105, 290], 
      DirectedEdge[92, 290], 
      DirectedEdge[288, 291], 
      DirectedEdge[286, 291], 
      DirectedEdge[106, 291], 
      DirectedEdge[51, 291], 
      DirectedEdge[289, 292], 
      DirectedEdge[286, 292], 
      DirectedEdge[228, 292], 
      DirectedEdge[206, 292], 
      DirectedEdge[288, 293], 
      DirectedEdge[287, 293], 
      DirectedEdge[92, 293], 
      DirectedEdge[93, 293], 
      DirectedEdge[52, 293], 
      DirectedEdge[289, 294], 
      DirectedEdge[288, 294], 
      DirectedEdge[229, 294], 
      DirectedEdge[46, 294], 
      DirectedEdge[298, 300], 
      DirectedEdge[296, 300], 
      DirectedEdge[295, 300], 
      DirectedEdge[111, 300], 
      DirectedEdge[98, 300], 
      DirectedEdge[299, 301], 
      DirectedEdge[297, 301], 
      DirectedEdge[296, 301], 
      DirectedEdge[231, 301], 
      DirectedEdge[216, 301], 
      DirectedEdge[21, 304], 
      DirectedEdge[12, 304], 
      DirectedEdge[15, 304], 
      DirectedEdge[17, 304], 
      DirectedEdge[305, 306], 
      DirectedEdge[117, 306], 
      DirectedEdge[85, 306], 
      DirectedEdge[305, 307], 
      DirectedEdge[173, 307], 
      DirectedEdge[101, 307], 
      DirectedEdge[44, 307], 
      DirectedEdge[42, 307], 
      DirectedEdge[32, 307], 
      DirectedEdge[23, 307], 
      DirectedEdge[305, 308], 
      DirectedEdge[124, 308], 
      DirectedEdge[101, 308], 
      DirectedEdge[44, 308], 
      DirectedEdge[42, 308], 
      DirectedEdge[36, 308], 
      DirectedEdge[32, 308], 
      DirectedEdge[23, 308], 
      DirectedEdge[305, 309], 
      DirectedEdge[181, 309], 
      DirectedEdge[32, 309], 
      DirectedEdge[305, 310], 
      DirectedEdge[233, 310], 
      DirectedEdge[75, 310], 
      DirectedEdge[312, 316], 
      DirectedEdge[311, 316], 
      DirectedEdge[176, 316], 
      DirectedEdge[105, 316], 
      DirectedEdge[313, 317], 
      DirectedEdge[311, 317], 
      DirectedEdge[147, 317], 
      DirectedEdge[146, 317], 
      DirectedEdge[314, 318], 
      DirectedEdge[311, 318], 
      DirectedEdge[186, 318], 
      DirectedEdge[90, 318], 
      DirectedEdge[315, 319], 
      DirectedEdge[311, 319], 
      DirectedEdge[239, 319], 
      DirectedEdge[91, 319], 
      DirectedEdge[313, 320], 
      DirectedEdge[312, 320], 
      DirectedEdge[177, 320], 
      DirectedEdge[127, 320], 
      DirectedEdge[314, 321], 
      DirectedEdge[312, 321], 
      DirectedEdge[187, 321], 
      DirectedEdge[106, 321], 
      DirectedEdge[105, 321], 
      DirectedEdge[93, 321], 
      DirectedEdge[315, 322], 
      DirectedEdge[312, 322], 
      DirectedEdge[240, 322], 
      DirectedEdge[107, 322], 
      DirectedEdge[105, 322], 
      DirectedEdge[93, 322], 
      DirectedEdge[81, 322], 
      DirectedEdge[68, 322], 
      DirectedEdge[66, 322], 
      DirectedEdge[314, 323], 
      DirectedEdge[313, 323], 
      DirectedEdge[188, 323], 
      DirectedEdge[128, 323], 
      DirectedEdge[127, 323], 
      DirectedEdge[106, 323], 
      DirectedEdge[105, 323], 
      DirectedEdge[93, 323], 
      DirectedEdge[38, 323], 
      DirectedEdge[315, 324], 
      DirectedEdge[313, 324], 
      DirectedEdge[241, 324], 
      DirectedEdge[129, 324], 
      DirectedEdge[127, 324], 
      DirectedEdge[107, 324], 
      DirectedEdge[105, 324], 
      DirectedEdge[93, 324], 
      DirectedEdge[80, 324], 
      DirectedEdge[81, 324], 
      DirectedEdge[68, 324], 
      DirectedEdge[66, 324], 
      DirectedEdge[315, 325], 
      DirectedEdge[314, 325], 
      DirectedEdge[242, 325], 
      DirectedEdge[79, 325], 
      DirectedEdge[330, 336], 
      DirectedEdge[327, 336], 
      DirectedEdge[326, 336], 
      DirectedEdge[179, 336], 
      DirectedEdge[156, 336], 
      DirectedEdge[331, 337], 
      DirectedEdge[328, 337], 
      DirectedEdge[326, 337], 
      DirectedEdge[194, 337], 
      DirectedEdge[111, 337], 
      DirectedEdge[332, 338], 
      DirectedEdge[329, 338], 
      DirectedEdge[326, 338], 
      DirectedEdge[253, 338], 
      DirectedEdge[112, 338], 
      DirectedEdge[333, 339], 
      DirectedEdge[328, 339], 
      DirectedEdge[327, 339], 
      DirectedEdge[195, 339], 
      DirectedEdge[159, 339], 
      DirectedEdge[334, 340], 
      DirectedEdge[329, 340], 
      DirectedEdge[327, 340], 
      DirectedEdge[254, 340], 
      DirectedEdge[160, 340], 
      DirectedEdge[335, 341], 
      DirectedEdge[329, 341], 
      DirectedEdge[328, 341], 
      DirectedEdge[255, 341], 
      DirectedEdge[97, 341], 
      DirectedEdge[333, 342], 
      DirectedEdge[331, 342], 
      DirectedEdge[330, 342], 
      DirectedEdge[197, 342], 
      DirectedEdge[133, 342], 
      DirectedEdge[334, 343], 
      DirectedEdge[332, 343], 
      DirectedEdge[330, 343], 
      DirectedEdge[257, 343], 
      DirectedEdge[134, 343], 
      DirectedEdge[335, 344], 
      DirectedEdge[332, 344], 
      DirectedEdge[331, 344], 
      DirectedEdge[258, 344], 
      DirectedEdge[113, 344], 
      DirectedEdge[112, 344], 
      DirectedEdge[111, 344], 
      DirectedEdge[99, 344], 
      DirectedEdge[335, 345], 
      DirectedEdge[334, 345], 
      DirectedEdge[333, 345], 
      DirectedEdge[260, 345], 
      DirectedEdge[135, 345], 
      DirectedEdge[134, 345], 
      DirectedEdge[133, 345], 
      DirectedEdge[113, 345], 
      DirectedEdge[112, 345], 
      DirectedEdge[111, 345], 
      DirectedEdge[99, 345], 
      DirectedEdge[83, 345], 
      DirectedEdge[352, 356], 
      DirectedEdge[349, 356], 
      DirectedEdge[347, 356], 
      DirectedEdge[346, 356], 
      DirectedEdge[199, 356], 
      DirectedEdge[166, 356], 
      DirectedEdge[353, 357], 
      DirectedEdge[350, 357], 
      DirectedEdge[348, 357], 
      DirectedEdge[346, 357], 
      DirectedEdge[269, 357], 
      DirectedEdge[167, 357], 
      DirectedEdge[354, 358], 
      DirectedEdge[351, 358], 
      DirectedEdge[348, 358], 
      DirectedEdge[347, 358], 
      DirectedEdge[270, 358], 
      DirectedEdge[115, 358], 
      DirectedEdge[355, 359], 
      DirectedEdge[351, 359], 
      DirectedEdge[350, 359], 
      DirectedEdge[349, 359], 
      DirectedEdge[272, 359], 
      DirectedEdge[169, 359], 
      DirectedEdge[355, 360], 
      DirectedEdge[354, 360], 
      DirectedEdge[353, 360], 
      DirectedEdge[352, 360], 
      DirectedEdge[274, 360], 
      DirectedEdge[137, 360], 
      DirectedEdge[365, 366], 
      DirectedEdge[364, 366], 
      DirectedEdge[363, 366], 
      DirectedEdge[362, 366], 
      DirectedEdge[361, 366], 
      DirectedEdge[278, 366], 
      DirectedEdge[171, 366], 
      DirectedEdge[14, 368], 
      DirectedEdge[12, 368], 
      DirectedEdge[15, 368], 
      DirectedEdge[17, 368], 
      DirectedEdge[369, 370], 
      DirectedEdge[85, 370], 
      DirectedEdge[44, 370], 
      DirectedEdge[29, 370], 
      DirectedEdge[30, 370], 
      DirectedEdge[20, 370], 
      DirectedEdge[369, 371], 
      DirectedEdge[201, 371], 
      DirectedEdge[101, 371], 
      DirectedEdge[44, 371], 
      DirectedEdge[42, 371], 
      DirectedEdge[32, 371], 
      DirectedEdge[23, 371], 
      DirectedEdge[369, 372], 
      DirectedEdge[305, 372], 
      DirectedEdge[117, 372], 
      DirectedEdge[73, 372], 
      DirectedEdge[44, 372], 
      DirectedEdge[29, 372], 
      DirectedEdge[30, 372], 
      DirectedEdge[20, 372], 
      DirectedEdge[369, 373], 
      DirectedEdge[225, 373], 
      DirectedEdge[32, 373], 
      DirectedEdge[30, 373], 
      DirectedEdge[25, 373], 
      DirectedEdge[20, 373], 
      DirectedEdge[369, 374], 
      DirectedEdge[32, 374], 
      DirectedEdge[20, 374], 
      DirectedEdge[369, 375], 
      DirectedEdge[75, 375], 
      DirectedEdge[40, 375], 
      DirectedEdge[377, 382], 
      DirectedEdge[376, 382], 
      DirectedEdge[206, 382], 
      DirectedEdge[105, 382], 
      DirectedEdge[378, 383], 
      DirectedEdge[376, 383], 
      DirectedEdge[311, 383], 
      DirectedEdge[119, 383], 
      DirectedEdge[379, 384], 
      DirectedEdge[376, 384], 
      DirectedEdge[289, 384], 
      DirectedEdge[287, 384], 
      DirectedEdge[380, 385], 
      DirectedEdge[376, 385], 
      DirectedEdge[90, 385], 
      DirectedEdge[46, 385], 
      DirectedEdge[381, 386], 
      DirectedEdge[376, 386], 
      DirectedEdge[91, 386], 
      DirectedEdge[59, 386], 
      DirectedEdge[378, 387], 
      DirectedEdge[377, 387], 
      DirectedEdge[312, 387], 
      DirectedEdge[207, 387], 
      DirectedEdge[379, 388], 
      DirectedEdge[377, 388], 
      DirectedEdge[289, 388], 
      DirectedEdge[287, 388], 
      DirectedEdge[228, 388], 
      DirectedEdge[206, 388], 
      DirectedEdge[105, 388], 
      DirectedEdge[92, 388], 
      DirectedEdge[380, 389], 
      DirectedEdge[377, 389], 
      DirectedEdge[208, 389], 
      DirectedEdge[106, 389], 
      DirectedEdge[105, 389], 
      DirectedEdge[93, 389], 
      DirectedEdge[381, 390], 
      DirectedEdge[377, 390], 
      DirectedEdge[209, 390], 
      DirectedEdge[107, 390], 
      DirectedEdge[105, 390], 
      DirectedEdge[93, 390], 
      DirectedEdge[81, 390], 
      DirectedEdge[68, 390], 
      DirectedEdge[66, 390], 
      DirectedEdge[380, 391], 
      DirectedEdge[378, 391], 
      DirectedEdge[314, 391], 
      DirectedEdge[189, 391], 
      DirectedEdge[381, 392], 
      DirectedEdge[378, 392], 
      DirectedEdge[315, 392], 
      DirectedEdge[243, 392], 
      DirectedEdge[380, 393], 
      DirectedEdge[379, 393], 
      DirectedEdge[289, 393], 
      DirectedEdge[287, 393], 
      DirectedEdge[229, 393], 
      DirectedEdge[92, 393], 
      DirectedEdge[93, 393], 
      DirectedEdge[52, 393], 
      DirectedEdge[46, 393], 
      DirectedEdge[381, 394], 
      DirectedEdge[380, 394], 
      DirectedEdge[79, 394], 
      DirectedEdge[67, 394], 
      DirectedEdge[400, 408], 
      DirectedEdge[396, 408], 
      DirectedEdge[395, 408], 
      DirectedEdge[326, 408], 
      DirectedEdge[215, 408], 
      DirectedEdge[401, 409], 
      DirectedEdge[397, 409], 
      DirectedEdge[395, 409], 
      DirectedEdge[297, 409], 
      DirectedEdge[295, 409], 
      DirectedEdge[402, 410], 
      DirectedEdge[398, 410], 
      DirectedEdge[395, 410], 
      DirectedEdge[216, 410], 
      DirectedEdge[111, 410], 
      DirectedEdge[403, 411], 
      DirectedEdge[399, 411], 
      DirectedEdge[395, 411], 
      DirectedEdge[217, 411], 
      DirectedEdge[112, 411], 
      DirectedEdge[404, 412], 
      DirectedEdge[398, 412], 
      DirectedEdge[396, 412], 
      DirectedEdge[328, 412], 
      DirectedEdge[196, 412], 
      DirectedEdge[405, 413], 
      DirectedEdge[399, 413], 
      DirectedEdge[396, 413], 
      DirectedEdge[329, 413], 
      DirectedEdge[256, 413], 
      DirectedEdge[406, 414], 
      DirectedEdge[398, 414], 
      DirectedEdge[397, 414], 
      DirectedEdge[299, 414], 
      DirectedEdge[298, 414], 
      DirectedEdge[407, 415], 
      DirectedEdge[399, 415], 
      DirectedEdge[398, 415], 
      DirectedEdge[97, 415], 
      DirectedEdge[71, 415], 
      DirectedEdge[404, 416], 
      DirectedEdge[402, 416], 
      DirectedEdge[400, 416], 
      DirectedEdge[331, 416], 
      DirectedEdge[218, 416], 
      DirectedEdge[405, 417], 
      DirectedEdge[403, 417], 
      DirectedEdge[400, 417], 
      DirectedEdge[332, 417], 
      DirectedEdge[259, 417], 
      DirectedEdge[406, 418], 
      DirectedEdge[402, 418], 
      DirectedEdge[401, 418], 
      DirectedEdge[299, 418], 
      DirectedEdge[298, 418], 
      DirectedEdge[297, 418], 
      DirectedEdge[295, 418], 
      DirectedEdge[231, 418], 
      DirectedEdge[216, 418], 
      DirectedEdge[111, 418], 
      DirectedEdge[98, 418], 
      DirectedEdge[407, 419], 
      DirectedEdge[403, 419], 
      DirectedEdge[402, 419], 
      DirectedEdge[219, 419], 
      DirectedEdge[113, 419], 
      DirectedEdge[112, 419], 
      DirectedEdge[111, 419], 
      DirectedEdge[99, 419], 
      DirectedEdge[407, 420], 
      DirectedEdge[405, 420], 
      DirectedEdge[404, 420], 
      DirectedEdge[335, 420], 
      DirectedEdge[261, 420], 
      DirectedEdge[429, 434], 
      DirectedEdge[425, 434], 
      DirectedEdge[423, 434], 
      DirectedEdge[421, 434], 
      DirectedEdge[347, 434], 
      DirectedEdge[222, 434], 
      DirectedEdge[430, 435], 
      DirectedEdge[426, 435], 
      DirectedEdge[424, 435], 
      DirectedEdge[421, 435], 
      DirectedEdge[348, 435], 
      DirectedEdge[271, 435], 
      DirectedEdge[431, 436], 
      DirectedEdge[427, 436], 
      DirectedEdge[423, 436], 
      DirectedEdge[422, 436], 
      DirectedEdge[303, 436], 
      DirectedEdge[302, 436], 
      DirectedEdge[432, 437], 
      DirectedEdge[428, 437], 
      DirectedEdge[424, 437], 
      DirectedEdge[423, 437], 
      DirectedEdge[223, 437], 
      DirectedEdge[115, 437], 
      DirectedEdge[433, 438], 
      DirectedEdge[428, 438], 
      DirectedEdge[426, 438], 
      DirectedEdge[425, 438], 
      DirectedEdge[351, 438], 
      DirectedEdge[273, 438], 
      DirectedEdge[433, 439], 
      DirectedEdge[432, 439], 
      DirectedEdge[430, 439], 
      DirectedEdge[429, 439], 
      DirectedEdge[354, 439], 
      DirectedEdge[275, 439], 
      DirectedEdge[445, 446], 
      DirectedEdge[444, 446], 
      DirectedEdge[443, 446], 
      DirectedEdge[441, 446], 
      DirectedEdge[440, 446], 
      DirectedEdge[363, 446], 
      DirectedEdge[279, 446], 
      DirectedEdge[13, 448], 
      DirectedEdge[16, 448], 
      DirectedEdge[15, 448], 
      DirectedEdge[449, 450], 
      DirectedEdge[281, 450], 
      DirectedEdge[56, 450], 
      DirectedEdge[449, 451], 
      DirectedEdge[281, 451], 
      DirectedEdge[54, 451], 
      DirectedEdge[48, 451], 
      DirectedEdge[44, 451], 
      DirectedEdge[42, 451], 
      DirectedEdge[57, 451], 
      DirectedEdge[449, 452], 
      DirectedEdge[281, 452], 
      DirectedEdge[75, 452], 
      DirectedEdge[44, 452], 
      DirectedEdge[32, 452], 
      DirectedEdge[29, 452], 
      DirectedEdge[25, 452], 
      DirectedEdge[449, 453], 
      DirectedEdge[281, 453], 
      DirectedEdge[61, 453], 
      DirectedEdge[44, 453], 
      DirectedEdge[29, 453], 
      DirectedEdge[449, 454], 
      DirectedEdge[281, 454], 
      DirectedEdge[225, 454], 
      DirectedEdge[44, 454], 
      DirectedEdge[40, 454], 
      DirectedEdge[29, 454], 
      DirectedEdge[30, 454], 
      DirectedEdge[20, 454], 
      DirectedEdge[456, 460], 
      DirectedEdge[455, 460], 
      DirectedEdge[286, 460], 
      DirectedEdge[107, 460], 
      DirectedEdge[457, 461], 
      DirectedEdge[455, 461], 
      DirectedEdge[287, 461], 
      DirectedEdge[91, 461], 
      DirectedEdge[458, 462], 
      DirectedEdge[455, 462], 
      DirectedEdge[288, 462], 
      DirectedEdge[66, 462], 
      DirectedEdge[459, 463], 
      DirectedEdge[455, 463], 
      DirectedEdge[289, 463], 
      DirectedEdge[59, 463], 
      DirectedEdge[457, 464], 
      DirectedEdge[456, 464], 
      DirectedEdge[287, 464], 
      DirectedEdge[286, 464], 
      DirectedEdge[107, 464], 
      DirectedEdge[92, 464], 
      DirectedEdge[93, 464], 
      DirectedEdge[81, 464], 
      DirectedEdge[68, 464], 
      DirectedEdge[66, 464], 
      DirectedEdge[458, 465], 
      DirectedEdge[456, 465], 
      DirectedEdge[288, 465], 
      DirectedEdge[286, 465], 
      DirectedEdge[107, 465], 
      DirectedEdge[68, 465], 
      DirectedEdge[66, 465], 
      DirectedEdge[51, 465], 
      DirectedEdge[459, 466], 
      DirectedEdge[456, 466], 
      DirectedEdge[289, 466], 
      DirectedEdge[286, 466], 
      DirectedEdge[228, 466], 
      DirectedEdge[209, 466], 
      DirectedEdge[206, 466], 
      DirectedEdge[458, 467], 
      DirectedEdge[457, 467], 
      DirectedEdge[288, 467], 
      DirectedEdge[287, 467], 
      DirectedEdge[92, 467], 
      DirectedEdge[93, 467], 
      DirectedEdge[79, 467], 
      DirectedEdge[52, 467], 
      DirectedEdge[459, 468], 
      DirectedEdge[457, 468], 
      DirectedEdge[381, 468], 
      DirectedEdge[379, 468], 
      DirectedEdge[459, 469], 
      DirectedEdge[458, 469], 
      DirectedEdge[289, 469], 
      DirectedEdge[288, 469], 
      DirectedEdge[229, 469], 
      DirectedEdge[67, 469], 
      DirectedEdge[46, 469], 
      DirectedEdge[474, 480], 
      DirectedEdge[471, 480], 
      DirectedEdge[470, 480], 
      DirectedEdge[295, 480], 
      DirectedEdge[112, 480], 
      DirectedEdge[475, 481], 
      DirectedEdge[472, 481], 
      DirectedEdge[470, 481], 
      DirectedEdge[296, 481], 
      DirectedEdge[113, 481], 
      DirectedEdge[476, 482], 
      DirectedEdge[473, 482], 
      DirectedEdge[470, 482], 
      DirectedEdge[297, 482], 
      DirectedEdge[217, 482], 
      DirectedEdge[477, 483], 
      DirectedEdge[472, 483], 
      DirectedEdge[471, 483], 
      DirectedEdge[298, 483], 
      DirectedEdge[97, 483], 
      DirectedEdge[478, 484], 
      DirectedEdge[473, 484], 
      DirectedEdge[471, 484], 
      DirectedEdge[399, 484], 
      DirectedEdge[397, 484], 
      DirectedEdge[479, 485], 
      DirectedEdge[473, 485], 
      DirectedEdge[472, 485], 
      DirectedEdge[299, 485], 
      DirectedEdge[71, 485], 
      DirectedEdge[477, 486], 
      DirectedEdge[475, 486], 
      DirectedEdge[474, 486], 
      DirectedEdge[298, 486], 
      DirectedEdge[296, 486], 
      DirectedEdge[295, 486], 
      DirectedEdge[113, 486], 
      DirectedEdge[112, 486], 
      DirectedEdge[98, 486], 
      DirectedEdge[99, 486], 
      DirectedEdge[478, 487], 
      DirectedEdge[476, 487], 
      DirectedEdge[474, 487], 
      DirectedEdge[403, 487], 
      DirectedEdge[401, 487], 
      DirectedEdge[479, 488], 
      DirectedEdge[476, 488], 
      DirectedEdge[475, 488], 
      DirectedEdge[299, 488], 
      DirectedEdge[297, 488], 
      DirectedEdge[296, 488], 
      DirectedEdge[231, 488], 
      DirectedEdge[219, 488], 
      DirectedEdge[216, 488], 
      DirectedEdge[479, 489], 
      DirectedEdge[478, 489], 
      DirectedEdge[477, 489], 
      DirectedEdge[407, 489], 
      DirectedEdge[406, 489], 
      DirectedEdge[496, 500], 
      DirectedEdge[493, 500], 
      DirectedEdge[491, 500], 
      DirectedEdge[490, 500], 
      DirectedEdge[302, 500], 
      DirectedEdge[115, 500], 
      DirectedEdge[497, 501], 
      DirectedEdge[494, 501], 
      DirectedEdge[492, 501], 
      DirectedEdge[490, 501], 
      DirectedEdge[424, 501], 
      DirectedEdge[422, 501], 
      DirectedEdge[498, 502], 
      DirectedEdge[495, 502], 
      DirectedEdge[492, 502], 
      DirectedEdge[491, 502], 
      DirectedEdge[303, 502], 
      DirectedEdge[223, 502], 
      DirectedEdge[499, 503], 
      DirectedEdge[495, 503], 
      DirectedEdge[494, 503], 
      DirectedEdge[493, 503], 
      DirectedEdge[428, 503], 
      DirectedEdge[427, 503], 
      DirectedEdge[499, 504], 
      DirectedEdge[498, 504], 
      DirectedEdge[497, 504], 
      DirectedEdge[496, 504], 
      DirectedEdge[432, 504], 
      DirectedEdge[431, 504], 
      DirectedEdge[509, 510], 
      DirectedEdge[508, 510], 
      DirectedEdge[507, 510], 
      DirectedEdge[506, 510], 
      DirectedEdge[505, 510], 
      DirectedEdge[443, 510], 
      DirectedEdge[442, 510], 
      DirectedEdge[16, 512], 
      DirectedEdge[21, 512], 
      DirectedEdge[15, 512], 
      DirectedEdge[17, 512], 
      DirectedEdge[513, 514], 
      DirectedEdge[281, 514], 
      DirectedEdge[117, 514], 
      DirectedEdge[513, 515], 
      DirectedEdge[281, 515], 
      DirectedEdge[173, 515], 
      DirectedEdge[101, 515], 
      DirectedEdge[48, 515], 
      DirectedEdge[513, 516], 
      DirectedEdge[305, 516], 
      DirectedEdge[281, 516], 
      DirectedEdge[44, 516], 
      DirectedEdge[32, 516], 
      DirectedEdge[29, 516], 
      DirectedEdge[25, 516], 
      DirectedEdge[513, 517], 
      DirectedEdge[281, 517], 
      DirectedEdge[181, 517], 
      DirectedEdge[44, 517], 
      DirectedEdge[29, 517], 
      DirectedEdge[513, 518], 
      DirectedEdge[281, 518], 
      DirectedEdge[225, 518], 
      DirectedEdge[117, 518], 
      DirectedEdge[73, 518], 
      DirectedEdge[513, 519], 
      DirectedEdge[449, 519], 
      DirectedEdge[233, 519], 
      DirectedEdge[521, 526], 
      DirectedEdge[520, 526], 
      DirectedEdge[286, 526], 
      DirectedEdge[176, 526], 
      DirectedEdge[522, 527], 
      DirectedEdge[520, 527], 
      DirectedEdge[311, 527], 
      DirectedEdge[287, 527], 
      DirectedEdge[523, 528], 
      DirectedEdge[520, 528], 
      DirectedEdge[288, 528], 
      DirectedEdge[186, 528], 
      DirectedEdge[524, 529], 
      DirectedEdge[520, 529], 
      DirectedEdge[289, 529], 
      DirectedEdge[119, 529], 
      DirectedEdge[525, 530], 
      DirectedEdge[520, 530], 
      DirectedEdge[455, 530], 
      DirectedEdge[239, 530], 
      DirectedEdge[522, 531], 
      DirectedEdge[521, 531], 
      DirectedEdge[312, 531], 
      DirectedEdge[287, 531], 
      DirectedEdge[286, 531], 
      DirectedEdge[105, 531], 
      DirectedEdge[92, 531], 
      DirectedEdge[523, 532], 
      DirectedEdge[521, 532], 
      DirectedEdge[288, 532], 
      DirectedEdge[286, 532], 
      DirectedEdge[187, 532], 
      DirectedEdge[106, 532], 
      DirectedEdge[51, 532], 
      DirectedEdge[524, 533], 
      DirectedEdge[521, 533], 
      DirectedEdge[289, 533], 
      DirectedEdge[286, 533], 
      DirectedEdge[228, 533], 
      DirectedEdge[207, 533], 
      DirectedEdge[206, 533], 
      DirectedEdge[525, 534], 
      DirectedEdge[521, 534], 
      DirectedEdge[456, 534], 
      DirectedEdge[240, 534], 
      DirectedEdge[523, 535], 
      DirectedEdge[522, 535], 
      DirectedEdge[314, 535], 
      DirectedEdge[288, 535], 
      DirectedEdge[287, 535], 
      DirectedEdge[92, 535], 
      DirectedEdge[93, 535], 
      DirectedEdge[52, 535], 
      DirectedEdge[524, 536], 
      DirectedEdge[522, 536], 
      DirectedEdge[379, 536], 
      DirectedEdge[378, 536], 
      DirectedEdge[525, 537], 
      DirectedEdge[522, 537], 
      DirectedEdge[457, 537], 
      DirectedEdge[315, 537], 
      DirectedEdge[524, 538], 
      DirectedEdge[523, 538], 
      DirectedEdge[289, 538], 
      DirectedEdge[288, 538], 
      DirectedEdge[229, 538], 
      DirectedEdge[189, 538], 
      DirectedEdge[46, 538], 
      DirectedEdge[525, 539], 
      DirectedEdge[523, 539], 
      DirectedEdge[458, 539], 
      DirectedEdge[242, 539], 
      DirectedEdge[525, 540], 
      DirectedEdge[524, 540], 
      DirectedEdge[459, 540], 
      DirectedEdge[243, 540], 
      DirectedEdge[546, 556], 
      DirectedEdge[542, 556], 
      DirectedEdge[541, 556], 
      DirectedEdge[326, 556], 
      DirectedEdge[295, 556], 
      DirectedEdge[547, 557], 
      DirectedEdge[543, 557], 
      DirectedEdge[541, 557], 
      DirectedEdge[296, 557], 
      DirectedEdge[194, 557], 
      DirectedEdge[548, 558], 
      DirectedEdge[544, 558], 
      DirectedEdge[541, 558], 
      DirectedEdge[297, 558], 
      DirectedEdge[215, 558], 
      DirectedEdge[549, 559], 
      DirectedEdge[545, 559], 
      DirectedEdge[541, 559], 
      DirectedEdge[470, 559], 
      DirectedEdge[253, 559], 
      DirectedEdge[550, 560], 
      DirectedEdge[543, 560], 
      DirectedEdge[542, 560], 
      DirectedEdge[328, 560], 
      DirectedEdge[298, 560], 
      DirectedEdge[551, 561], 
      DirectedEdge[544, 561], 
      DirectedEdge[542, 561], 
      DirectedEdge[397, 561], 
      DirectedEdge[396, 561], 
      DirectedEdge[552, 562], 
      DirectedEdge[545, 562], 
      DirectedEdge[542, 562], 
      DirectedEdge[471, 562], 
      DirectedEdge[329, 562], 
      DirectedEdge[553, 563], 
      DirectedEdge[544, 563], 
      DirectedEdge[543, 563], 
      DirectedEdge[299, 563], 
      DirectedEdge[196, 563], 
      DirectedEdge[554, 564], 
      DirectedEdge[545, 564], 
      DirectedEdge[543, 564], 
      DirectedEdge[472, 564], 
      DirectedEdge[255, 564], 
      DirectedEdge[555, 565], 
      DirectedEdge[545, 565], 
      DirectedEdge[544, 565], 
      DirectedEdge[473, 565], 
      DirectedEdge[256, 565], 
      DirectedEdge[550, 566], 
      DirectedEdge[547, 566], 
      DirectedEdge[546, 566], 
      DirectedEdge[331, 566], 
      DirectedEdge[298, 566], 
      DirectedEdge[296, 566], 
      DirectedEdge[295, 566], 
      DirectedEdge[111, 566], 
      DirectedEdge[98, 566], 
      DirectedEdge[551, 567], 
      DirectedEdge[548, 567], 
      DirectedEdge[546, 567], 
      DirectedEdge[401, 567], 
      DirectedEdge[400, 567], 
      DirectedEdge[552, 568], 
      DirectedEdge[549, 568], 
      DirectedEdge[546, 568], 
      DirectedEdge[474, 568], 
      DirectedEdge[332, 568], 
      DirectedEdge[553, 569], 
      DirectedEdge[548, 569], 
      DirectedEdge[547, 569], 
      DirectedEdge[299, 569], 
      DirectedEdge[297, 569], 
      DirectedEdge[296, 569], 
      DirectedEdge[231, 569], 
      DirectedEdge[218, 569], 
      DirectedEdge[216, 569], 
      DirectedEdge[554, 570], 
      DirectedEdge[549, 570], 
      DirectedEdge[547, 570], 
      DirectedEdge[475, 570], 
      DirectedEdge[258, 570], 
      DirectedEdge[555, 571], 
      DirectedEdge[549, 571], 
      DirectedEdge[548, 571], 
      DirectedEdge[476, 571], 
      DirectedEdge[259, 571], 
      DirectedEdge[553, 572], 
      DirectedEdge[551, 572], 
      DirectedEdge[550, 572], 
      DirectedEdge[406, 572], 
      DirectedEdge[404, 572], 
      DirectedEdge[554, 573], 
      DirectedEdge[552, 573], 
      DirectedEdge[550, 573], 
      DirectedEdge[477, 573], 
      DirectedEdge[335, 573], 
      DirectedEdge[555, 574], 
      DirectedEdge[552, 574], 
      DirectedEdge[551, 574], 
      DirectedEdge[478, 574], 
      DirectedEdge[405, 574], 
      DirectedEdge[555, 575], 
      DirectedEdge[554, 575], 
      DirectedEdge[553, 575], 
      DirectedEdge[479, 575], 
      DirectedEdge[261, 575], 
      DirectedEdge[586, 596], 
      DirectedEdge[580, 596], 
      DirectedEdge[577, 596], 
      DirectedEdge[576, 596], 
      DirectedEdge[347, 596], 
      DirectedEdge[302, 596], 
      DirectedEdge[587, 597], 
      DirectedEdge[581, 597], 
      DirectedEdge[578, 597], 
      DirectedEdge[576, 597], 
      DirectedEdge[422, 597], 
      DirectedEdge[421, 597], 
      DirectedEdge[588, 598], 
      DirectedEdge[582, 598], 
      DirectedEdge[579, 598], 
      DirectedEdge[576, 598], 
      DirectedEdge[490, 598], 
      DirectedEdge[348, 598], 
      DirectedEdge[589, 599], 
      DirectedEdge[583, 599], 
      DirectedEdge[578, 599], 
      DirectedEdge[577, 599], 
      DirectedEdge[303, 599], 
      DirectedEdge[222, 599], 
      DirectedEdge[590, 600], 
      DirectedEdge[584, 600], 
      DirectedEdge[579, 600], 
      DirectedEdge[577, 600], 
      DirectedEdge[491, 600], 
      DirectedEdge[270, 600], 
      DirectedEdge[591, 601], 
      DirectedEdge[585, 601], 
      DirectedEdge[579, 601], 
      DirectedEdge[578, 601], 
      DirectedEdge[492, 601], 
      DirectedEdge[271, 601], 
      DirectedEdge[592, 602], 
      DirectedEdge[583, 602], 
      DirectedEdge[581, 602], 
      DirectedEdge[580, 602], 
      DirectedEdge[427, 602], 
      DirectedEdge[425, 602], 
      DirectedEdge[593, 603], 
      DirectedEdge[584, 603], 
      DirectedEdge[582, 603], 
      DirectedEdge[580, 603], 
      DirectedEdge[493, 603], 
      DirectedEdge[351, 603], 
      DirectedEdge[594, 604], 
      DirectedEdge[585, 604], 
      DirectedEdge[582, 604], 
      DirectedEdge[581, 604], 
      DirectedEdge[494, 604], 
      DirectedEdge[426, 604], 
      DirectedEdge[595, 605], 
      DirectedEdge[585, 605], 
      DirectedEdge[584, 605], 
      DirectedEdge[583, 605], 
      DirectedEdge[495, 605], 
      DirectedEdge[273, 605], 
      DirectedEdge[592, 606], 
      DirectedEdge[589, 606], 
      DirectedEdge[587, 606], 
      DirectedEdge[586, 606], 
      DirectedEdge[431, 606], 
      DirectedEdge[429, 606], 
      DirectedEdge[593, 607], 
      DirectedEdge[590, 607], 
      DirectedEdge[588, 607], 
      DirectedEdge[586, 607], 
      DirectedEdge[496, 607], 
      DirectedEdge[354, 607], 
      DirectedEdge[594, 608], 
      DirectedEdge[591, 608], 
      DirectedEdge[588, 608], 
      DirectedEdge[587, 608], 
      DirectedEdge[497, 608], 
      DirectedEdge[430, 608], 
      DirectedEdge[595, 609], 
      DirectedEdge[591, 609], 
      DirectedEdge[590, 609], 
      DirectedEdge[589, 609], 
      DirectedEdge[498, 609], 
      DirectedEdge[275, 609], 
      DirectedEdge[595, 610], 
      DirectedEdge[594, 610], 
      DirectedEdge[593, 610], 
      DirectedEdge[592, 610], 
      DirectedEdge[499, 610], 
      DirectedEdge[433, 610], 
      DirectedEdge[621, 626], 
      DirectedEdge[617, 626], 
      DirectedEdge[614, 626], 
      DirectedEdge[612, 626], 
      DirectedEdge[611, 626], 
      DirectedEdge[442, 626], 
      DirectedEdge[440, 626], 
      DirectedEdge[622, 627], 
      DirectedEdge[618, 627], 
      DirectedEdge[615, 627], 
      DirectedEdge[613, 627], 
      DirectedEdge[611, 627], 
      DirectedEdge[505, 627], 
      DirectedEdge[363, 627], 
      DirectedEdge[623, 628], 
      DirectedEdge[619, 628], 
      DirectedEdge[616, 628], 
      DirectedEdge[613, 628], 
      DirectedEdge[612, 628], 
      DirectedEdge[506, 628], 
      DirectedEdge[441, 628], 
      DirectedEdge[624, 629], 
      DirectedEdge[620, 629], 
      DirectedEdge[616, 629], 
      DirectedEdge[615, 629], 
      DirectedEdge[614, 629], 
      DirectedEdge[507, 629], 
      DirectedEdge[279, 629], 
      DirectedEdge[625, 630], 
      DirectedEdge[620, 630], 
      DirectedEdge[619, 630], 
      DirectedEdge[618, 630], 
      DirectedEdge[617, 630], 
      DirectedEdge[508, 630], 
      DirectedEdge[444, 630], 
      DirectedEdge[625, 631], 
      DirectedEdge[624, 631], 
      DirectedEdge[623, 631], 
      DirectedEdge[622, 631], 
      DirectedEdge[621, 631], 
      DirectedEdge[509, 631], 
      DirectedEdge[445, 631], 
      DirectedEdge[637, 638], 
      DirectedEdge[636, 638], 
      DirectedEdge[635, 638], 
      DirectedEdge[634, 638], 
      DirectedEdge[633, 638], 
      DirectedEdge[632, 638], 
      DirectedEdge[511, 638], 
      DirectedEdge[447, 638], 
      DirectedEdge[14, 640], 
      DirectedEdge[18, 640], 
      DirectedEdge[17, 640], 
      DirectedEdge[641, 642], 
      DirectedEdge[139, 642], 
      DirectedEdge[44, 642], 
      DirectedEdge[29, 642], 
      DirectedEdge[30, 642], 
      DirectedEdge[20, 642], 
      DirectedEdge[641, 643], 
      DirectedEdge[201, 643], 
      DirectedEdge[122, 643], 
      DirectedEdge[641, 644], 
      DirectedEdge[369, 644], 
      DirectedEdge[122, 644], 
      DirectedEdge[101, 644], 
      DirectedEdge[44, 644], 
      DirectedEdge[42, 644], 
      DirectedEdge[36, 644], 
      DirectedEdge[32, 644], 
      DirectedEdge[23, 644], 
      DirectedEdge[641, 645], 
      DirectedEdge[122, 645], 
      DirectedEdge[124, 645], 
      DirectedEdge[117, 645], 
      DirectedEdge[73, 645], 
      DirectedEdge[44, 645], 
      DirectedEdge[29, 645], 
      DirectedEdge[30, 645], 
      DirectedEdge[20, 645], 
      DirectedEdge[641, 646], 
      DirectedEdge[122, 646], 
      DirectedEdge[101, 646], 
      DirectedEdge[44, 646], 
      DirectedEdge[42, 646], 
      DirectedEdge[34, 646], 
      DirectedEdge[20, 646], 
      DirectedEdge[641, 647], 
      DirectedEdge[122, 647], 
      DirectedEdge[101, 647], 
      DirectedEdge[44, 647], 
      DirectedEdge[42, 647], 
      DirectedEdge[40, 647], 
      DirectedEdge[57, 647], 
      DirectedEdge[649, 654], 
      DirectedEdge[648, 654], 
      DirectedEdge[206, 654], 
      DirectedEdge[145, 654], 
      DirectedEdge[650, 655], 
      DirectedEdge[648, 655], 
      DirectedEdge[376, 655], 
      DirectedEdge[146, 655], 
      DirectedEdge[651, 656], 
      DirectedEdge[648, 656], 
      DirectedEdge[147, 656], 
      DirectedEdge[119, 656], 
      DirectedEdge[652, 657], 
      DirectedEdge[648, 657], 
      DirectedEdge[148, 657], 
      DirectedEdge[46, 657], 
      DirectedEdge[653, 658], 
      DirectedEdge[648, 658], 
      DirectedEdge[149, 658], 
      DirectedEdge[59, 658], 
      DirectedEdge[650, 659], 
      DirectedEdge[649, 659], 
      DirectedEdge[377, 659], 
      DirectedEdge[127, 659], 
      DirectedEdge[651, 660], 
      DirectedEdge[649, 660], 
      DirectedEdge[207, 660], 
      DirectedEdge[177, 660], 
      DirectedEdge[652, 661], 
      DirectedEdge[649, 661], 
      DirectedEdge[208, 661], 
      DirectedEdge[128, 661], 
      DirectedEdge[653, 662], 
      DirectedEdge[649, 662], 
      DirectedEdge[209, 662], 
      DirectedEdge[129, 662], 
      DirectedEdge[651, 663], 
      DirectedEdge[650, 663], 
      DirectedEdge[378, 663], 
      DirectedEdge[313, 663], 
      DirectedEdge[652, 664], 
      DirectedEdge[650, 664], 
      DirectedEdge[380, 664], 
      DirectedEdge[128, 664], 
      DirectedEdge[127, 664], 
      DirectedEdge[106, 664], 
      DirectedEdge[105, 664], 
      DirectedEdge[93, 664], 
      DirectedEdge[38, 664], 
      DirectedEdge[653, 665], 
      DirectedEdge[650, 665], 
      DirectedEdge[381, 665], 
      DirectedEdge[129, 665], 
      DirectedEdge[127, 665], 
      DirectedEdge[107, 665], 
      DirectedEdge[105, 665], 
      DirectedEdge[93, 665], 
      DirectedEdge[80, 665], 
      DirectedEdge[81, 665], 
      DirectedEdge[68, 665], 
      DirectedEdge[66, 665], 
      DirectedEdge[652, 666], 
      DirectedEdge[651, 666], 
      DirectedEdge[189, 666], 
      DirectedEdge[188, 666], 
      DirectedEdge[653, 667], 
      DirectedEdge[651, 667], 
      DirectedEdge[243, 667], 
      DirectedEdge[241, 667], 
      DirectedEdge[653, 668], 
      DirectedEdge[652, 668], 
      DirectedEdge[129, 668], 
      DirectedEdge[128, 668], 
      DirectedEdge[107, 668], 
      DirectedEdge[106, 668], 
      DirectedEdge[67, 668], 
      DirectedEdge[70, 668], 
      DirectedEdge[68, 668], 
      DirectedEdge[66, 668], 
      DirectedEdge[674, 684], 
      DirectedEdge[670, 684], 
      DirectedEdge[669, 684], 
      DirectedEdge[395, 684], 
      DirectedEdge[156, 684], 
      DirectedEdge[675, 685], 
      DirectedEdge[671, 685], 
      DirectedEdge[669, 685], 
      DirectedEdge[215, 685], 
      DirectedEdge[179, 685], 
      DirectedEdge[676, 686], 
      DirectedEdge[672, 686], 
      DirectedEdge[669, 686], 
      DirectedEdge[216, 686], 
      DirectedEdge[157, 686], 
      DirectedEdge[677, 687], 
      DirectedEdge[673, 687], 
      DirectedEdge[669, 687], 
      DirectedEdge[217, 687], 
      DirectedEdge[158, 687], 
      DirectedEdge[678, 688], 
      DirectedEdge[671, 688], 
      DirectedEdge[670, 688], 
      DirectedEdge[396, 688], 
      DirectedEdge[327, 688], 
      DirectedEdge[679, 689], 
      DirectedEdge[672, 689], 
      DirectedEdge[670, 689], 
      DirectedEdge[398, 689], 
      DirectedEdge[159, 689], 
      DirectedEdge[680, 690], 
      DirectedEdge[673, 690], 
      DirectedEdge[670, 690], 
      DirectedEdge[399, 690], 
      DirectedEdge[160, 690], 
      DirectedEdge[681, 691], 
      DirectedEdge[672, 691], 
      DirectedEdge[671, 691], 
      DirectedEdge[196, 691], 
      DirectedEdge[195, 691], 
      DirectedEdge[682, 692], 
      DirectedEdge[673, 692], 
      DirectedEdge[671, 692], 
      DirectedEdge[256, 692], 
      DirectedEdge[254, 692], 
      DirectedEdge[683, 693], 
      DirectedEdge[673, 693], 
      DirectedEdge[672, 693], 
      DirectedEdge[161, 693], 
      DirectedEdge[71, 693], 
      DirectedEdge[678, 694], 
      DirectedEdge[675, 694], 
      DirectedEdge[674, 694], 
      DirectedEdge[400, 694], 
      DirectedEdge[330, 694], 
      DirectedEdge[679, 695], 
      DirectedEdge[676, 695], 
      DirectedEdge[674, 695], 
      DirectedEdge[402, 695], 
      DirectedEdge[133, 695], 
      DirectedEdge[680, 696], 
      DirectedEdge[677, 696], 
      DirectedEdge[674, 696], 
      DirectedEdge[403, 696], 
      DirectedEdge[134, 696], 
      DirectedEdge[681, 697], 
      DirectedEdge[676, 697], 
      DirectedEdge[675, 697], 
      DirectedEdge[218, 697], 
      DirectedEdge[197, 697], 
      DirectedEdge[682, 698], 
      DirectedEdge[677, 698], 
      DirectedEdge[675, 698], 
      DirectedEdge[259, 698], 
      DirectedEdge[257, 698], 
      DirectedEdge[683, 699], 
      DirectedEdge[677, 699], 
      DirectedEdge[676, 699], 
      DirectedEdge[219, 699], 
      DirectedEdge[135, 699], 
      DirectedEdge[681, 700], 
      DirectedEdge[679, 700], 
      DirectedEdge[678, 700], 
      DirectedEdge[404, 700], 
      DirectedEdge[333, 700], 
      DirectedEdge[682, 701], 
      DirectedEdge[680, 701], 
      DirectedEdge[678, 701], 
      DirectedEdge[405, 701], 
      DirectedEdge[334, 701], 
      DirectedEdge[683, 702], 
      DirectedEdge[680, 702], 
      DirectedEdge[679, 702], 
      DirectedEdge[407, 702], 
      DirectedEdge[135, 702], 
      DirectedEdge[134, 702], 
      DirectedEdge[133, 702], 
      DirectedEdge[113, 702], 
      DirectedEdge[112, 702], 
      DirectedEdge[111, 702], 
      DirectedEdge[99, 702], 
      DirectedEdge[83, 702], 
      DirectedEdge[683, 703], 
      DirectedEdge[682, 703], 
      DirectedEdge[681, 703], 
      DirectedEdge[261, 703], 
      DirectedEdge[260, 703], 
      DirectedEdge[714, 724], 
      DirectedEdge[708, 724], 
      DirectedEdge[705, 724], 
      DirectedEdge[704, 724], 
      DirectedEdge[421, 724], 
      DirectedEdge[346, 724], 
      DirectedEdge[715, 725], 
      DirectedEdge[709, 725], 
      DirectedEdge[706, 725], 
      DirectedEdge[704, 725], 
      DirectedEdge[423, 725], 
      DirectedEdge[166, 725], 
      DirectedEdge[716, 726], 
      DirectedEdge[710, 726], 
      DirectedEdge[707, 726], 
      DirectedEdge[704, 726], 
      DirectedEdge[424, 726], 
      DirectedEdge[167, 726], 
      DirectedEdge[717, 727], 
      DirectedEdge[711, 727], 
      DirectedEdge[706, 727], 
      DirectedEdge[705, 727], 
      DirectedEdge[222, 727], 
      DirectedEdge[199, 727], 
      DirectedEdge[718, 728], 
      DirectedEdge[712, 728], 
      DirectedEdge[707, 728], 
      DirectedEdge[705, 728], 
      DirectedEdge[271, 728], 
      DirectedEdge[269, 728], 
      DirectedEdge[719, 729], 
      DirectedEdge[713, 729], 
      DirectedEdge[707, 729], 
      DirectedEdge[706, 729], 
      DirectedEdge[223, 729], 
      DirectedEdge[168, 729], 
      DirectedEdge[720, 730], 
      DirectedEdge[711, 730], 
      DirectedEdge[709, 730], 
      DirectedEdge[708, 730], 
      DirectedEdge[425, 730], 
      DirectedEdge[349, 730], 
      DirectedEdge[721, 731], 
      DirectedEdge[712, 731], 
      DirectedEdge[710, 731], 
      DirectedEdge[708, 731], 
      DirectedEdge[426, 731], 
      DirectedEdge[350, 731], 
      DirectedEdge[722, 732], 
      DirectedEdge[713, 732], 
      DirectedEdge[710, 732], 
      DirectedEdge[709, 732], 
      DirectedEdge[428, 732], 
      DirectedEdge[169, 732], 
      DirectedEdge[723, 733], 
      DirectedEdge[713, 733], 
      DirectedEdge[712, 733], 
      DirectedEdge[711, 733], 
      DirectedEdge[273, 733], 
      DirectedEdge[272, 733], 
      DirectedEdge[720, 734], 
      DirectedEdge[717, 734], 
      DirectedEdge[715, 734], 
      DirectedEdge[714, 734], 
      DirectedEdge[429, 734], 
      DirectedEdge[352, 734], 
      DirectedEdge[721, 735], 
      DirectedEdge[718, 735], 
      DirectedEdge[716, 735], 
      DirectedEdge[714, 735], 
      DirectedEdge[430, 735], 
      DirectedEdge[353, 735], 
      DirectedEdge[722, 736], 
      DirectedEdge[719, 736], 
      DirectedEdge[716, 736], 
      DirectedEdge[715, 736], 
      DirectedEdge[432, 736], 
      DirectedEdge[137, 736], 
      DirectedEdge[723, 737], 
      DirectedEdge[719, 737], 
      DirectedEdge[718, 737], 
      DirectedEdge[717, 737], 
      DirectedEdge[275, 737], 
      DirectedEdge[274, 737], 
      DirectedEdge[723, 738], 
      DirectedEdge[722, 738], 
      DirectedEdge[721, 738], 
      DirectedEdge[720, 738], 
      DirectedEdge[433, 738], 
      DirectedEdge[355, 738], 
      DirectedEdge[749, 754], 
      DirectedEdge[745, 754], 
      DirectedEdge[742, 754], 
      DirectedEdge[740, 754], 
      DirectedEdge[739, 754], 
      DirectedEdge[440, 754], 
      DirectedEdge[361, 754], 
      DirectedEdge[750, 755], 
      DirectedEdge[746, 755], 
      DirectedEdge[743, 755], 
      DirectedEdge[741, 755], 
      DirectedEdge[739, 755], 
      DirectedEdge[441, 755], 
      DirectedEdge[362, 755], 
      DirectedEdge[751, 756], 
      DirectedEdge[747, 756], 
      DirectedEdge[744, 756], 
      DirectedEdge[741, 756], 
      DirectedEdge[740, 756], 
      DirectedEdge[443, 756], 
      DirectedEdge[171, 756], 
      DirectedEdge[752, 757], 
      DirectedEdge[748, 757], 
      DirectedEdge[744, 757], 
      DirectedEdge[743, 757], 
      DirectedEdge[742, 757], 
      DirectedEdge[279, 757], 
      DirectedEdge[278, 757], 
      DirectedEdge[753, 758], 
      DirectedEdge[748, 758], 
      DirectedEdge[747, 758], 
      DirectedEdge[746, 758], 
      DirectedEdge[745, 758], 
      DirectedEdge[444, 758], 
      DirectedEdge[364, 758], 
      DirectedEdge[753, 759], 
      DirectedEdge[752, 759], 
      DirectedEdge[751, 759], 
      DirectedEdge[750, 759], 
      DirectedEdge[749, 759], 
      DirectedEdge[445, 759], 
      DirectedEdge[365, 759], 
      DirectedEdge[765, 766], 
      DirectedEdge[764, 766], 
      DirectedEdge[763, 766], 
      DirectedEdge[762, 766], 
      DirectedEdge[761, 766], 
      DirectedEdge[760, 766], 
      DirectedEdge[447, 766], 
      DirectedEdge[367, 766]}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.804492562090034*^9, {3.804492750197397*^9, 3.804492770907991*^9}, 
   3.8230214629764614`*^9},
 CellID->294722460]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->1613114934],

Cell["\<\
Evaluate the persistent homology of data with dimension 1000:\
\>", "Text",
 TaggingRules->{},
 CellID->794679850],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "1000"}], "}"}]}], "]"}]}], ";"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8044925308342953`*^9, 3.804492550211031*^9}, 
   3.8230213494061203`*^9},
 CellLabel->"In[58]:=",
 CellID->851132889],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   TagBox[
    DynamicModuleBox[{Typeset`open = False}, 
     FrameBox[
      PaneSelectorBox[{False->GridBox[{
         {
          PaneBox[GridBox[{
             {
              StyleBox[
               StyleBox[
                AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                 BoxBaselineShift->-0.25,
                 BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                
                FontColor->RGBColor[
                 0.8745098039215686, 0.2784313725490196, 0.03137254901960784]],
               
               ShowStringCharacters->False,
               FontFamily->"Source Sans Pro Black",
               FontSize->0.6538461538461539 Inherited,
               FontWeight->"Heavy",
               PrivateFontOptions->{"OperatorSubstitution"->False}], 
              StyleBox[
               RowBox[{
                StyleBox["PersistentHomology", "ResourceFunctionLabel"], " "}],
               ShowAutoStyles->False,
               ShowStringCharacters->False,
               FontSize->Rational[12, 13] Inherited,
               FontColor->GrayLevel[0.1]]}
            },
            GridBoxSpacings->{"Columns" -> {{0.25}}}],
           Alignment->Left,
           BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
           BaselinePosition->Baseline,
           FrameMargins->{{3, 0}, {0, 0}}], 
          ItemBox[
           PaneBox[
            TogglerBox[Dynamic[Typeset`open], {True->
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "IconizeCloser"],
              ImageSizeCache->{11., {1., 10.}}], False->
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "IconizeOpener"],
              ImageSizeCache->{11., {1., 10.}}]},
             Appearance->None,
             BaselinePosition->Baseline,
             ContentPadding->False,
             FrameMargins->0],
            Alignment->Left,
            BaselinePosition->Baseline,
            FrameMargins->{{1, 1}, {0, 0}}],
           Frame->{{
              RGBColor[
              0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
               0.5], False}, {False, False}}]}
        },
        BaselinePosition->{1, 1},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
       GridBox[{
         {GridBox[{
            {
             PaneBox[GridBox[{
                {
                 StyleBox[
                  StyleBox[
                   AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                   
                   FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                  ShowStringCharacters->False,
                  FontFamily->"Source Sans Pro Black",
                  FontSize->0.6538461538461539 Inherited,
                  FontWeight->"Heavy",
                  PrivateFontOptions->{"OperatorSubstitution"->False}], 
                 StyleBox[
                  RowBox[{
                   StyleBox["PersistentHomology", "ResourceFunctionLabel"], 
                   " "}],
                  ShowAutoStyles->False,
                  ShowStringCharacters->False,
                  FontSize->Rational[12, 13] Inherited,
                  FontColor->GrayLevel[0.1]]}
               },
               GridBoxSpacings->{"Columns" -> {{0.25}}}],
              Alignment->Left,
              BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
              BaselinePosition->Baseline,
              FrameMargins->{{3, 0}, {0, 0}}], 
             ItemBox[
              PaneBox[
               TogglerBox[Dynamic[Typeset`open], {True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "IconizeCloser"]], False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "IconizeOpener"]]},
                Appearance->None,
                BaselinePosition->Baseline,
                ContentPadding->False,
                FrameMargins->0],
               Alignment->Left,
               BaselinePosition->Baseline,
               FrameMargins->{{1, 1}, {0, 0}}],
              Frame->{{
                 RGBColor[
                 0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                  0.5], False}, {False, False}}]}
           },
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
         {
          StyleBox[
           PaneBox[GridBox[{
              {
               RowBox[{
                TagBox["\<\"Version (latest): \"\>",
                 "IconizedLabel"], " ", 
                TagBox["\<\"1.0.1\"\>",
                 "IconizedItem"]}]},
              {
               TagBox[
                
                TemplateBox[{
                 "\"Documentation \[RightGuillemet]\"", 
                  "https://resources.wolframcloud.com/FunctionRepository/\
resources/PersistentHomology"},
                 "HyperlinkURL"],
                "IconizedItem"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            Alignment->Left,
            BaselinePosition->Baseline,
            FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
           FontFamily->"Roboto",
           FontSize->11]}
        },
        BaselinePosition->{1, 1},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
             GrayLevel[0.8]}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
       Typeset`open],
       BaselinePosition->Baseline,
       ImageSize->Automatic],
      Background->RGBColor[
       0.9686274509803922, 0.9764705882352941, 0.984313725490196],
      BaselinePosition->Baseline,
      DefaultBaseStyle->{},
      FrameMargins->{{0, 0}, {1, 0}},
      FrameStyle->RGBColor[
       0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
      RoundingRadius->4]],
    {"FunctionResourceBox", 
     RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
     "PersistentHomology"},
    TagBoxNote->"FunctionResourceBox"],
   ResourceFunction["PersistentHomology"],
   BoxID -> "PersistentHomology",
   Selectable->False], "[", "data", "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.80449255188922*^9, 3.8044925571993437`*^9}},
 CellID->48854437],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PersistentHomologyObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             GraphicsComplexBox[CompressedData["
1:eJw12Xc8lt/7AHBUKtohpSItK1EaqC7SUCoaQkkq2jQoJUllpZAZKtlZ2Xtd
SDbJ3p69h4qSyO/5fT0f/3id133u+z7Xea5z7nO93msu3jphKyYiIhIwQ0Tk
//+zXPzOhazuwqC5O0RaOrnQXN2ZusKjBkbSnoi4O/LRfeCSgXc3AcpiFwSM
a7Hx8bnu1MwLdSUi//sbhqDp/vhD2L95+nngJ3zeo+n7sUB4/zu79yosPyp4
GJ6b/SueDj9mRdw8+4KJed877GsNyShhE+myKZ4Dlc+VVMc9++G91q7AAzU8
/D5Pvjrz+TdUNDrNnj/Ahz95FltokfmwdrqNQfnT7ejp/iA+f7r/gunnYafw
eX+n3weVwvclTo8HXwjH8+l99OcDvpVQbprzvZHMR4cnF+VmHaqAy2vuJIv8
42P3vpgHy0XKwcJmvsNaiWEsEg/a5nu5FLSb9XQOLR3G7A2Va2Kri8Ct44je
zRXDOB5Z/0JMsQBsjO8aecsPo+JukXm7nHMh5Iy2aYTiMPrOGlpLasmCMLbu
q6i1guvTbfyvnb/rf/3xv/7+08/D/55nOP0+/O99xtPjwf/GEzs9XjQXjnf3
dDz4Xzz3p+PF/+L9L36lOUYLdWfx8Z4w/me7/E7PZvOwVxj/jhDKiop2HpYI
479f8fjVvUoe5grjZ2TZum3O4eGEMH4FXHH9dxIP1wnjx8RXp9tieegvjL/A
04tRHc1DBWH8/7VzhfH/199XGP9/zzsgjP+/9x0Vxv/feKKF8f83Xl1h/P/F
81/8/8Wbzk6ZsTCkCErK3q7M6+ajW4Od/QqbXJg69Xt0IY+Pe6xf/X2glgHW
WTPpl//yMdCpZPgZKR6e5rHdLUSG8WbnpoNbO0MhX95V9/uk4H4tbs7CVefB
onVg1dqffDR8bXWqsi8Qj7wqkjEm8HGlRmTpis+xmBXLNXL7wsfyG39dYhLa
UeRmuYfLEh4qk9toJ3kdmPc1srOSz8Vjw4XPjm4RrFetoNYtX7jI2dfv+vVO
N5rnfU+lBnLxFdcrbWVqDz5aM0/9jzkXYb7KuDOhF08V+0f7L+PiwfOuTVsX
9OPrP9srvzZzEPYmPQ/WGkB/9b4YiisHPyVvPbpfthRWrcvmhavwsHG1t2Ol
awGssjD7mtbLxfTO7RuHarLB/M0/Pi+Ai5Xplt8bOJ9gi+azSx4mXCy8PuVw
cUUcmL57RwmT4WLyy5718buCQW713zIjCgdFRLbrVMXRy8ae8YuKCzmoV7pg
u6RrMKbRmiTF3nAwICCxW/5+G06kRe3/R2bha3sZyZrydrxY3ea8uY6F9fsW
60XN70RTtwyHs3ks/Kv11YZ2tgt/b1l02jeFhd40B7+25G5MpeZ5NSSyMP4W
3Ir+04PHol4kL0tj4b363w0vDvZhxmToW/tiFj49cfB7dVA/jgT9cKxtYSFH
mmzwhJoBDJsP9LJTfJR9+MpB8XUM/CXqi/UcEPyelEB2w9pHsPRJqaTeJj6G
xR1oFbV6gxcfjKrOmMPH4PcKUeejk/Hlxw23dnbxUClz8DUlJwefJ/cUTETw
cNYz3vmyqWK8vaY2y+EkD0mqaSP3Qivw+DrMrxHhobi9kULKLwLq3E3LcFFk
ImO+i8nSbiJGlTlnD1Yx8NcHOZ+CHBLW3+eu8bRkoCvdWFn2FRkTIiSqMph0
/N5zPCnrHAVvJjm+iblJx9QJLl9SmYpTS1U/xlNpWDT8LzSFK2ibZg/NNaXh
hpS8ratSaGidXD20rpiK6/IDAw1kC8Dol5//RjHB70tuT81Ty4LUwzH+e69y
MNUzgnF3YSKkvlKpTehiIyM3Y7IkOxT2/CZ0JZmwUaTqplTYxA2cJW6U8raN
hQ9eyDA9b0QiUfnq0WprFsbZui9YJvIJJUm9xXZjTCRp1sw5+jIXb6t/LPsa
wcTAwDvePPdBPOMSmu9eQkFR98ujK5UIgnXrW9J9jYIrXQ03P1hMxI2/HuUZ
K1Lw6uGLNf8mibjmj7qIFI2Mq+Rbs9ZxSWikZG1wKFfwPXHWtbAcJGP4mrBL
816TsV3uPUPmGwUzy5baOdwno0g+IamqioqfdfO8fK8K2jdCz7nmxsAWhyJe
4TUeith0L5W2AYwP0lH4vpqHJmVOyuyfMWhVmzmQJFh/Us6x3jfSs9Cy9ciM
5VZcnHO/cs2JomIk6rWQHjE4uGGvyMWPhytxvcxheVlbDs7W7g8LeF+N5NzO
57rtbFTI3XHSvK0er3oFdOhuF8wf+cKmRCsq3ki2ufR7DQmT1e44atrQ0Cr7
g/oWJyI+26DuvOMCHct2ufnPKyeg/eTyW+tMGegesZdD/TOEvPEc2hVgonNn
WWOm5SD+ANFNTvIs7DxBv3wnqR8VbWLCmkZYKPd33q0NxF78a3Gth1PGRi2P
+gVDM3vwQYFM0JWaPGj+oWzJzWZjwdyhV3b3M2Agf05q3RcWmreknHd8Ewv/
XsppxBGZ6CYSyZ6y8AS1+s2TM+YwcTj99aS9XCAqM+y417QZmFjt0eR5JBE/
jS04ZXKfjrJZycEOC3Jw3jN+jgrS8ObUuqZSnRKc8lFxs5WiYVzIzlZlTRKK
W/6V2yvSi8mOX93e7iHjoqnbuLeqG23uei44fZKCPnt8vF/EdKGqVnNMrj0V
lzAfi1a+7cTkpT/uLXlNQ8Vq93KvjA6cO/uWVkUeHVf3FkleJrYjcbaNzVIS
A/0Mkjy71NvxPXOo0WyxIE/dk5j7w9uQ4OHXZEALgjyptmabHVzU00mb5akV
ivlb5oobR3LQ5PHfgaSUdDxVsL1ea1SQ/26W/nd7C/GzW7aO8y42pors+OVR
X4Gqppb5rxxZ6GnwVJP/pBpbC1s+kN4zkVbwe3+KRAOW5lvO/1vAwDMXwqvm
Xv2KSxULvM5V0/F+adXS7z9oOM9Ca/ds8Xa8VGbANPpHx8Khk2+eiLeihPFg
ouQkAzsLG67l9H3FA8MvH4fzmBiz9HN8knMD6hTtu3i5lYWO22Ri7nOq8aF+
+n32RzZqGDF7m7ZW4vbNE8eS7TlYIHKSMJpQhMMG5Xs2bRDE6Zj+t+JdBg6f
nBzZfLIQ7r8oG19gx0KFtP77sm+ygbZMxbVWlYm33VhXDSqTQXO98+fsn3Qk
yLrvo7RFQDQrLeDFFxqKnDmh7HH2DMpkf26ZiKai3tFDjLtdH9D7RYV80QsK
imQ22eV2peMabx/7K4/JyBgavJh5oAAfGkW8jX1MwpX6481VgrzPMftet4FZ
iTopMfYrtckoK1Z2+cLuMgwwLHdoOEvB299Xta2TyUfDnsDK9S+omChTIdNu
nYHmc7fxHpTTkOCwcOzr3jiMIurFzBNlIGE0f+qofQDGbvy5cO1hJorkFbU3
fLSDmPm+Vn8iWFge2haU1RUKCu+15j2zDYANO2eUrqazUa8r2aVLOhwtNu2U
pY6x0LCEQvH0yECZcJnFb8eZmPiLTim3LsKo4p/buzgMXEc7NJrAqMBDTQN7
tVvouNJ3W0jD1WqUNJcovBZPQ2/OO6V1afWol73QY7kdFV0G+abKec0okrsu
QFSJgiYiM6fYLoJ5o/xzf0D7hE+196VN2dPQ7fv4n7lJARhjt9Eu1EQw71qh
Zq2kcPjW6p2ssoaBwzPuDG5Pz4RVTi50PQIDd/7k10RtKQX5fjuRq75MnHdR
7+0i1yrY+nnlbW0lFs7xu1Zj9awemt1MXllksFBC99890+Mt4O2wpyvkEoKX
Dys+04KJ5Z5Ro8GKxeDe8uVd5DfB+j2m/GDukTzw9Che/NKEhnM2RGa0kDLg
2g3mjLNdFNSYLRa4uz0envkWVnMvkzHqapfTz5AASF6d+HiVCAlFdqyuq9X2
wAchcm/LYgnYomC04dOtOHSb3P5lT/wgutzr+V2gNogEqNfsyM8HHSf9mnOy
BByWDbh6eLgclhnLcbKVibgy9dHOl9++QMdOGanSQySUeVp3vs6lHl5kN+Q0
O5Hxps4aDX1+M3SuaBzZlk1BRfPTR5SCvkHc2efSO/8K8sUt/EyJfxsYmtUT
lxjTcW/o5rjNNzvAOqi6K7iiB96dmPAID6IKxncr2+1bFzi6wyfRNRT0vpRD
jp7VCSS/+xmsGBK+mns3Y875dvA4sbh++woijoSvMEkfbAVelsH4u4VDgrwN
PPnQ4xucSb20TK+nD0U+35bfeqoFjK5cbNsd1I0KklNUxTfN8PdhjGAX7UC3
JePXP8m+h39zttMXrO4FN7GzK4/s94MPy0OOPn88ACIKtPrMg/YgYb8+64wD
AUQypzIS8hzwapqRdIsqCdxUZHrWjHmgs3W6+Co6Gdy4PxVOlr7CQebEfN04
KohsV5+ibPDDI2bPPihepIPIhbfnRbV8UKpYu6BBngkzjEiG5vpEaLQyPFR9
ioKmodZda48TQfzva41Vb0io9Ynu/9iICKG+kh+29RBQeXtt/VUNItjMcdm8
eecgDvZ/eT06RQCDuJwjIRW9aPk7LECviADua696Jpt0ocOdH0sczhNg4YWs
Ww/obdi6XDbDY2gI7E1Ozp3p3YKXt9UufWLbCj5bPHYEdAzC2O/TVwYsvwHX
P8Y8TooIgwXbtr5RbQHHLbHO8fkkmLn3jF1lXBOUbVvKaTtBgZaLKakL4+qh
MU1MexeVCu1pGw4MnK4BJfYV+WE7OhhqZSbI42coImisnM1hgEnkzBJeKQIl
jTsSacWC7tOJwa/P9sNZm2iTGGsqVpFsEx5J9UHLMkstdTIZg+9+OnvvRw+o
9DuqHrMiYXeq+U3lX91QVN3uyGglYG1QgfYmhW44XzBq1vx8EHe9Wnt/6nYX
PHFGl1vmfUgJ+94zm9kJR9dVlQav78bhrUtpod6dsJ+4iq/IbUe9YxO6U0cF
8fcv96DmdgNnt4nEMelWCOkX0xP/0Qda79pVXWe2gifDJYS9eQjCZGqCw+Va
QZrPXdqxnQgjyuWhgWdawfzuVvOUdhJwuhoZBhWtoGO4MuD5bQoMz31Wetu4
DeLfbqFdm0uDOa8naFUz2+Fwx7ndNyPpwGpLdb1tS4J7t7Y1h05Q8JfM9aAV
5ST4tk3CKfgKGcfSqyY1ZpPBhvRzTVozEX+INyS80CHDs3mSzI4tBIx+XbNR
/Iwg75a8PDSlPIDtTXr9QbZk6F+plq/H6cFfE2Jc1XNkYC/KunA2rRMbR9RO
temRYWhRXYLO3TYcfbrmiddaIgyn2jc1afTCI+Mts4x/EmCML/UOrg1As+ny
HSfTCSC91nvT/GMEmNN6zLTEjACz9q59W0ImgsjLSSeXniHwU5sklzqSQe9L
orfGwCD8038fsVaECktMh3erFA9A/GP32BkeNJggfDKWduwHjfo6dBJjwIGj
u2ptuYMgEUV8fjmJioqnuIfQaBBSDHzkzfUoGLo01FKkaQB0HpLbvrWR8Ffw
LUnHOwPwpGzEMcWGiAeWpvuYaA/Ah8FLdS70IWxWtF+Wv24AmPyX6+pnDGDl
uwly9tYByDdw+T4i34ueox8X7bk8AIZyX3Syd3dhU8TMsNQQAhzTDYh3uPMN
NlaqX00qJ4D18v1VN03a4Yu/veu+ScG6l/2ncF2lC0qVAscsBOvxbf9qj+LJ
HgiK3/q2OJkI+6SPfMqp7Yetb2S5GnIkCPKaPJD2YgjWk6LNnd6RQFs+4N5z
eSJQ1u48uVedDLoF0RKBDiSAjXUrNLTJcGvpyeBQMRr+u3pe+m89Geyc9055
pVFwOJvhpn+EAv9Wa3zqO0nG1/FNrXklFOi0NSNY/SSijeKte7IrqfC0Tu8I
yZeAlsWB/E3XqXC12VrLwXAQ/3q3zqpLoELd149d9+z78FTGRMeXb1TI+/6z
wMW/G8+ZfLI9mUMHgs3FjcnyLVA2IeYS1kSHY77LB9mibVCkfZgk00EHN23l
xRXUDnCtSFKqr6fDDiXRPIe6boh1O3S1II0OodWenUdT+uCkfh78cKOD5C6b
4IgXgzA/WqIuUJ8O9xndISczCfB4HfkFDtOgc5/G+IUVJLjqrrhltT8BVCUO
GC4RnLs9W/R+zncngLLcYyuWKhVD/Pb/EfMmAD+gISv0JxnLyLac8QgCjA/c
02wpJmFR9vMAVongerCqg7EHESN4bS2lXAKcjCs2bjQh4MaVVRVmm4jw7OY9
0vjuQYxdLlsS+IgISU4FXzcT+9DBeKK1fSsNcsLPdP7YnAu3Vq3wePaaBtQD
RvK7npWBus/9hTf/0uDi6hmfF3R9htZHS9afcKQDqfSrg5RZLVS+H9XgjtNh
3t5KCY+yRnDVe+3G9WPAzuNHnlz0aAHqSfbdv5uZ4KaVfCvuXSs8f+mTmj/A
hJj7v280xLbDojynpf8+kEF11X3NSwZ0/MSVOVp0lALLXYyzvwINpUTvQi2P
Avd9FIrVtaj4LXaef+0zKlj+UClbLfg+ln3hR1wS7CvHj9uH7Z1Nxov5LzMO
PaPBHWVdNX06ERXXMXS2cmmQV39pqqqCgKt/zOISDtFB/vrL1N/qQ8jdyJqx
VowDJqD76ij5A1xbv+ffORMO7I0VS5u6kQm/T6jzf/tzoHqpRMz98SLo8nVV
byjnwMnGqsGDxpXQeu5dWxGJA0+HuV2HlWtgPKukOmuUA+bl+wZs5jSC5J2K
xo9/OBB5d1Z1j2MLKJUO+b7hcSDO5E24MrUVziZe56kIvneyc1e8v+VEx3Cj
5c8f3yOCz0UiSHnS8MSiku/n44kQoeljg6FULPAyJeQSiKBxThf/JVHQ8vHO
TZYbSeBetO2xVTkZjUbaZyg/JIHmwo7vV3tJaOnqMsruIAEvMWlfwhgRQw0W
ytjvJoPfnD6Fd3JEbO+Yu2E3MIGgkvR72aYqvHv8kZp+JhMS7h+eN9BUjp+e
y715vokFi+YvLFslWYyHV/q3FWWzYOf7HN7u1BwM+ml1/Y0BGwpMX/qWz/qE
R2fPUq/qZ0PUFrWrpuujkSZ/1o7mygGFnqKrEn88kaB/VDlSmQtRO2IVBmPc
oZ52c9bYSzKU/NlvkBTEwKo55yvSt1PA+alCtDaVjufX5Iq0dlMgJ0nPsVZd
cB7cdrbq3x0qPMtnVVTcpqH1PNWzfaI02N7DmReaQsXJuMg3S7xpoPtSdGnR
EAW1u/aImc6kg9bXDK+E+RRBXZoxx+I+HdYr9jR2bSOjFDVZVukBF3QCoj+K
hzbiseTd2slDXChaeEV2cE0dWmtRVex28eDT/cJLbRFf8FjKU1EdPx7Y1m3f
PilWid+jbI4R2nlg9VjPcqygBE/L/tu1fREf5vXWaf48kYuLBqJSZPX4sDJe
IS0sIwWPuRnr3bDhw+0HarlftoVj/aOP47ExRLh71+Pf0TIGKolYEAJ7iIJz
WLmdtAIDTf8ak+bJkuBKmOq3dHc6umo0iHHPkaB4V4nKQw4N0yxek+amkCCE
PxTeYEbDI+I3erZNkeCUq+KGqWoqBv7RWgyC72NHzIKX13So6DXbPJZfTIYl
hjdmWWVR0FrFUDnmGBMC9ndl6cT0Im1F4p7yPCY0F9LY3W978NknouaC9Sy4
4nHgc82HbtziVJ99OJwFqfXOTu/SupAzKfdDYykbjPdqtVFrO7FIbWv5g0A2
iBOrulX5Hags0ljRKcOBPP+wO/w1HUhYFfVm4gMHpOOIa5IvtOPhkandrYLx
bjffdOnfF0GdtKR96Zg3GS6Tjhf32QrqP+pN6dPzKVBaWOy1e4qBelLu5Pev
BPvDXHcf60AGjkV0rHEXpwK7ynqnhzwDP9qUxZY7U+EV3TmQnyA4Z//+HbqA
SQWLJpV/NCU61tHNUtWO0+CBV9aKPEF9FC1huGWIzAbLKtsBlvcghsneqPLf
z4HuBfKtbQ8GsF9y20RYFAf6zH6/TTzfj84FC39WjXDA4p5LzsI9fZhMbG8l
6nNBou9zYI5UL7bLmPys8OJC9lrq/oOUbhRdcnBUt5oLz4xL5rl86sJzoWO9
KpNceH9Lky1xpxN//c139n5ABO49lqb3PBbS9p0pqRPkw7EQi+N+lUwcXljx
51WLYC8I17mW5czEVsVXK/JFSdB4zW6W/DYmjugViKluJ8Gd+aVmk98ZqG7V
F1tnRwLv9Efy9zIZmMz0Wng3kQTtYuMBqQ4M7D7a6CNKE+wXbLpB7U4GzrYy
fMs/TwP5OzNnPJ1PRVCBbP0oGkRY1rbGdlBwT2HsCQ0yDUKW97bxoih419eq
O0iJDpxrm3Sf3hLkz9wJdYPbdLhIyz/yQF+wH3+YoiwtosP89asO82UoqCA1
60DvLAZU2by8OMUn4wF2lOO1kwwIMmqNxUYy7hqz1HVeQAL+oSWWMzJZePHr
2LW5liQo07B4/9mXhZ8N/tV//UgCx9s1uW2XWajYK/o06jsJFNLVsg/vYuGi
0x+6jAXnhxDV/Cr9BSw0UDlzLtuVDJxHEmrt/UzcW1g2EV1BBsbOlZvkE5no
7JErNSJKgYvrCBP6t5mYFKK5nvSIDpNJE8Xj+2jY9ede1J1COqQFsuxkJAT7
r4fivBUjdPhDvUo42kjFVzH7PxWoMmCR98bELy+pmFZ+J0TNmgE5qk7jsYZU
fN22K+90AAPsJpJCF82gYkRk7M/lyICtIi/TtIop6EPfv+0skwHB8uNNOnco
aCu3gD7wNQ7WOH2KeLR8GNYuzHvTtSwZTuTdKWGuHoYZD2rx7eV0sOxx23tM
cRjGXkXwn1lmAW1/pMrHtcOwhO6U8HtWLsS5BiX+FFw3VzrgI5uWD07zkjZo
KQyDqdkM1omTRVD++sr+63LDcKDwWKP0SAmob4juDZMahvmfjtg6urRALfP7
MbYRHxpt7ZLWrv0GLsTtD/V1+ED5uqeWV/MNdMTDZd+u48Mx6ZebHa+3Qppe
zL+ZknzQ6/OOPynRBoTF7sf9uDw45tT+VP1jG1hayT83bORB0KNH1I967XBm
X8aBgx95IH7jz3ebznbYuWKdR5QrD/i+iZbP9WPAnL/k0WZzPnjODSu/wU+A
7V88C7038yFVtWVge3EKbE1Z9thLgg+LPGUI4sczION3Vpo+kwe97+cXuLdk
AbE2WLShgQdu2XtMI87kwukZkXStLB6Qzrq3VHPzQUpJxMvvnaD/ntnE595F
UCu/P5PiwwPqu9F2+c9fQat05HDkJy7wEubHlr9ogUWMK/f+fuBC2o8JnYVb
v0HMMCXrSigXRJ4POywb+AYH5y1KZ7zmgmfPx2hHr1aoejye/NSfC1V2IdQK
zTZBXbft0dZALgwVvbke0dcG7HcnvSbCuGBemBoV7t4OR+X667tjuXCd3llh
kJ4DwVkrxLay+LCiacxinFEI9Xq5vkkEPiwu9yQ/XIWQKB3UL/uVD5Uyf3M7
11XC7OCVpi9z+eD9Q+ne3twqUGLdkl0UzAdT/QKvR3tqQGfwxp+i63y4n73s
hSjWQePin7fjtPnQPmSia7GtEc6k2/szRfhwNdjCotliCFTCN53PSmLDitOl
O4IPEoA0ZVbseI0N0UmxjRODBPj93sKqd43gutLI/pq7RMHJzODT/DYWaP97
o/hOjARKyb+Mdz9mAfXyO+0NfoI6sOep9DsFFoxFRHKWSJOBV7Og07qUCZcC
8syXvCGD0uSVE9UnmbDvs93qx48F+W00mrP5BA/+Bf/iFzZnQ7jbMc0QBhdC
t83xlhcvgDD7vu8WHlwYcVbVu32xBM5FXs4vUOLCb+n4wJe3yyHKe/kZRqtg
n15Id8rFSvBLnpEk586B8XNuDWarvkCc4awjT3dxwN+38rekdw2cS9+caDDB
hn03AvM3zhiATeE8p3nxDHAQTX99cs8glGy/Hnr8JgM8i6wCQl2H4Mj17/N1
dRnwS+Okb/gFAlhZcXnUxQygf1z9OGeW4Hydo5d1fVhQB4So8XRSiDC0pV5l
oJMOIyethuqPC/az2YkPj3yhQ8rri1mif0gwErJ31udiOgR2/NGMvFsKDoZ5
u70E+X5WZP3l7XaVcPRa5bFlozxQd/i0qlaqGn5OJE+eTOdB7aNsk95PdfDK
8W3YZSseUCJ64o22N4HPvl9zn4jxYHGf9DGx0y3Qr/mruO0tF/bfW2bjIt4K
to/vP4hW4ULqJ41ZwSltoCI6uk81XTBfrnFXFhpRofCYBv1XKBUuZCaesltG
gwX9qwc8FlNBIi7l3LoBGry2ePvv6jMKbH7keBff0mGxfuLsUSYZrv6yKGg6
wQAJDdFd7oZk0Fgk1UQSZQLuSdK8H0mC/HkM8TeJTBitPBG2mUMEsT9zsrwO
sABEKieXbyGCmnnKKfXRLIjRb112aTEXXIqyPmVT8oHrqv/4qBkHSiJPuJiu
KAXFGWyyeDwb3PIWL35yqAI6Fwf1jI2zwCb2o1LB+ipoEeHM97YQ5NtU/aN1
CjVwgjEmI1XBhLD6zg8iO+qh3fbezt+aTMgKpp98cLUJlH5eUvdMZcCW+eLO
l76SoEDvQ8vxYCLYJgUe5keTwbVq1fs+WSI8uR9kquZMAfFFkRZJHwlgPLkx
KMKMCuaT7yX/6RFAxuMOI0+bBmkR3/+o1Q/Brtlb7/2VF9STL1o3n1Aagu9r
pclDcxmglhnr2/BuEE4rn8/r+cUAwo/idPbGQQh1XiXxrKICPA6RGMoreZDM
8Ywf2VIN7DVWdtwILig4e03p+tTDwXMcI9V5gv1I8q5CdVUzmI52SOy8zYEc
69MSc29/g5HVnKlbNWy4TVuW032zDSaq+5fvWMKGNG3vhjizDijwmR0/ZsIC
P1H5wsObu+C21i/Jje5M0J2VVeR0WvA9ujC60rahDy5R506o7mTCkpT9an5y
veD93oSqu5AFKdaaas9Pd0OC3HcFpT4WkB8VW5g87oSdRz5/d3rLBrN2PmF+
QDtMdno7FxpzYCReZMdQYCsUdJuJPvvNgSjnXLsfz1vAOr1B3V6wL2ocXCs6
Vd8IYwOnKJOnsmCxrZj4qgo2aAT9ND6vlg9+D2/7kzMFdUf0Dc/Y6yVAJder
2CUzIeqvEc1MvAKyj7R1mKYwgFEarPxmdhVwH9iFa+XSwTpPRtZwRw288Nyi
8baWBiOhmqVeQfVgekEpQ5pGheBlAZXmK5pB2rNlh8oCwbmwvtrv6n4KDM5M
drwx1AqH1AM9dDWpcMTca2/t/m/AMDscEL2BBt5YmBnq+RWqV6henrueDonn
XZZnZzbCtlrtS/2C84CSeAc3cEE9hN10ZLvqMMH68iPml8ga+O0/UmEimPf2
kzmXSi99ARdO89VPN9lwNTf2XoPVZzhVu0j38uzPoEa472XUwQFCmceKw58F
9z19AhwRDiht6Krgn2qER78OD+msZoOt2TrTb5Yt0CBt+qFUUJdZLhe/Z+PU
ChSmPllMgwn3JPad//GgHXrN/KlR6xmwTOOPmJF1J3x7HWO1bSEd7rzIaDuq
1g3cEduNtlwqVFsMl/bbMoBzkdpw80k1dKdtX5CymwkqFnN8DzZVgGWNjFu1
OAtknYsuSNIKwfe+mmhBuaD+q7Lnr2hOB//Tbg8X32CDSOPXX6J+oXBtIm+e
/SwOiBxhG8k7B+HfglrTu4L62foH0z1eMx2tXq5+3ziHC8NXTx0S9yjC4aDe
4x/oKRAiLker8RP83gNvydFlmRApC/f0Bes1qkJZrWpBHvS0GS8b66HDg+HB
L4nEIlj2V3t+/gsaGI7t2aezohy2+f6x269PhTm5IYYiYp9hu0phhq3gnLdy
mcwi+w3VsPlSmnZHPQlsbmw+/tGjDkoVfjONIolA5V9KlM8kQYthorn8vHgI
eoeL1gi+TyKnRjYMPXCCS5sjLjb5UEChsW+pNv8d8jcWmgW/pEKG+DLbklXp
yJmTTB8IE+QHad3SHJd8lL5RHS2RRYc5jLYlkSKI9KoIScdOBgyv2eUjJfkZ
X4g9mGE3iwW1EcuTAyyr8YZ9DK+nphE5y66o2l3j42FrsYAlK5vRhzTrSJAN
H036sj7+tv+K0WHXROPO8nF2aMF+wvkWfPakIyTuGB8DFl5jtYp/w6S1NsXv
dvOxfZUyczjlGz4nPfAKVeJj2NlM1+5jrSjlWXMzciEfs1gyO5T5rejwaHTr
5x88rJx/6/DvnD7BObvWDoGLB3aAzokT/ehWl6K2RJ6LoylZ289w+hH3qe9K
GOdg7OqueTnPBvBoUZdaQCsHDfz98sWlB3Fyq0QRK4GD2sf2Bf+NGcTw6JHi
RicO/ni2M3SP2hCu9tove3I/B792GjxwzRjCz14JmW8XcpDlN1i3x7MBGfX0
IVI4D2O2j/qW+TWiX4PhQ1UbHspEDQTsi27CpZnhHZmaPBRbfchIvbQZ01a7
dwWJ8XDvVH5UG/Erng/Ls+F2ctH4rluCgVcLcudbm3ancfEf7WeM0ZpvqPaC
ZHPTh4vPFlUFJpR9Q+aC6rV4jYuBW1cmOLr3onZX2LniPDamVj61+rKuD8Ma
q9cRwtl4W0RiJLWmD5VvS0sw3NiYvaD+R/3NfpyxWaWTeIONe7yd35QuHUCV
toK/PWfY+D7DYq5iyQBKFq173XuUjQq8zOBg20FUvO29n72PjQvpRGrGwiEs
19l4ebEeGxNuGtBbvrbgyrLrv+5ReUhamhIiKd2K3rdMzC1LebhBZwFZ4nQb
mtoqbnjsyxPM90j5osB2JPn8zB8x5WGyCGHJxdoOdE2ZxyfL8PBkvvSqg2Od
mFbkqHi7hYtSS698l1zTjTpyHXM+P+NilE5Rj8jeHpSaqP4goc5FcZjl1fGY
gpOH8sLQmIG/8jWdl0hQ8XqB11z1EUG9PLmMUhZAxRFP75d/Auh45tTR2z5S
NAyLHDawVKZjo0rHp42BNOQW310bXERDpVV/dx2RoKP+uH8FaT8N/cUs/2a4
0PEVuWKbbwMV7UZnqC9h0jFoRiCvz4iKWXM2fwTxZpR6/9nt9h0uKrU336nK
/4pypUHa+J2DJK2k3JTyFryc8OXTNUE+vV0+2jaS8Q1LKCSjAjEOulXPNN6c
2oqLxGxVh4PYGO1w60p1ZhvmLG8in1Blo+GUrq58RTvuYTTZrq5jodL34DXh
PR2YfPpD5ys7Fh6O+JEcXUfC4Di/r/r+VFykvlJ+5Rky2nu4XX6hQ8Xhvn0v
XHlkHKcSjvRzKLgv//yCO54UVBs1dLuaQMGxW6b54WuoWCt9Md/sCgW9IwwT
3iEVT+luPfR1MwWTNo0fWWlNQ0XNWcuGp8h4UFQ9rlCMjn4k1oPOLjKW27zg
uGW14qVGj8nb41xcGX6BybBvxy1rDt13DOHi08dsp2VrOjEqTWaMtp6LrjP+
eEjWduEA5bC/RCoHH/oc+Vh/sQfb9+Vd3KjEwZVqg0kXhnvRZAPV+2UEG5f5
96yn3urHtHRyj88MNu6e+jfnLmEA1c6Hl7peYqFIjlxwK5WBm5/dNNIxJmJB
54ZIjVAmqnxKdX+aQMDT7irtu/ewsD18+48p1hAevr4sL3SAhXYxCzi7Hg5i
ndFOdr8DG13/FlGCx/rR3nqBc74IB63kM9+yr/Xh2L2pidbnHNwpoyK3qbkH
DeLy2ogTHHy344La0Q3dKDGHm/AprRnfhlsd3b6Wg+EEipvjoRY8pjJuesCY
jemSNZ4pxt+wOD5P+spTFo5pOcRZX2vF5HzNO0uKmDj2O2cBN6QNt1G87Mr+
MJD42a81sr0dnzEcWP16DJSTD91TuK4T9b1JVn3+gjy0ST1xz6MLdbMVwxTp
NEy4/GPnqQIquqayjUri+7BotUdyxG0aOkuaLY2z7cWdLc+uWmrQcdvqU7kx
O3pwTnQDc+NvOqoRM0VvrOxGb5t7zl5VDFwd7Z0YJ9WF7htdnoqGMfHN/O+d
bIVOLFheUSt7h4V3lV71tuh3IG3rppojgrgWtS5p7HJqx8+HLj1qrG9Dll3k
gFwtB+M8nfaZ13fgvvJllq1SHDw/+ujYwoIuDI18S7ljysYt+z8ebArswX1B
mdU3fFh4xO738ocWfbjaYu+OnTlMbEiNDJglOYCTdTfmnm5joLjxlYk7CYPo
lXnt0mEGHT+xuqxtpQnY+QdvRf2koZOfq7OcMwuD5+yb72vdinev/llipMHG
Y212BqttW3AgtVdsSS8bvcd3LHqW2YiK515USQrW4d21Z+PNHtaitGTt5T5x
QV4+WdC6a10V/rpQ8ln1BRddav94u19DlNS3yE6f5KKaXc3rRWfzcIfffG1F
wb5e/kiKMrIvGQ2L/tyru9qEeho/2Wb9gt+XV/8qSOwrmvvIKe3PZWLitg/x
x6+3IG+PdNL9IAZeJ3ud/2H/DVd1Z8wKc6KjCcyKC/BrRcX0AZPjF2nY/+Hi
Ro/aNrR8uCHvwCnB/qK0fvbSlR142u+xrOwxCib0r9h517sT8xwCs61NyLhq
Sc42fiIVI8e+KctpVeNBU/MwuRs07F2uetbhQiXaJJQ0fdtJR5Hb+z1fXC/F
9Qdezw1bzMCxX6+XPbiUh1vPFPzgjjAwykh9Z/6ldJQTO8Y/QmJiWKivhWl2
DD7UNnFU6mGhG2+T145RH+SY9ZrzutlY7vy4V2ngKex2UAy4ntEDQ02/GiX9
uKDJkxbtMe2FnIE50gkPudC2yslK4U8vuN6sNTtygQs/bOInhsL7oH7xMpH5
+7lwbMI9rWBHP9j/elIzto4Ll5b2/DvS2g+9zSapiqJcyHELv6J/bQB6/5yh
fejhwNU9a713TQzAq5uXer3SOCCd1ZT4e5IEwwV3F73RYsFbYtPio/vJMLLR
fO8MwblvmZvRMhMfMhyJ/r1/YTsT+vpG+7sayVDt3Z3WHckE0a8R/0rmUaA7
Oumf62UmxF97+LHnEAVWe4QHrlVlQqhcYuJcdwoo+ob4MzkMMFzx1E+lmAJP
OM5No4Lzu/PamhCp6m4ItV2u09LCgSGFhxdOa/XAj6p/Tv2CcyO6d17KS+yB
343jjjHHOSBRFJTLV+yFXRmsOQdlOHA6amCsMKYXjOuKzbkDbBg02+Jet7EP
ajPeVeQlsqEjeJP/18w+UFDZ9aXyPhuIPzddcNbrh/Xha36rG7Khdd7JEBkF
EnhTNTbtaWZACvvN+uBrJNAx116zIZYBpxTHLBbkCtrPDc7GPmLA4CbFZ+Zi
ZEg4K6XXZMaAV38W9+07LpgfvcezC3cwYNUq5eQ4Qf0YSm1IfyjHAG5Oj7nh
TzJYO778IT+DAVfutr2eEtQb29zf6xTx6FCrrrpJn9gHZZcC51i3cUBWN/n9
tiUDsENcpnOpHwcub7w5sn7XINSfJDzw0ufA/Tei9ReshuDYjxADBpcNexLt
Y1fvIkCLiXjhlSA20C6/qPKuIoCLYp+97hY2KPgFPl9tSARH20Huu3oWyJR1
/A6oJoJVGdO/zpIFJZe/kOXfMcDN/l5Y3xoKUHYVqm+QZoLCTHkbqTQyPHE+
mejkzQSKpTbtvRYZhtXvz20ZZcKPubvnlgvmRaPGMpgneE7RxhzWF01BHi35
rhNayoIfzPK0yUQinPb9Xum7jA3K3j3HC+SIQH/aRv9wnQ2h/PYHh3wIsEp/
nVdGUA/0nv31bsZrNuipMFratXvhwOfvn4P/sUBSnkn4zBXk/wWJK8Z3WPAq
b7H60vQ+yFu7TNWLwYR59EEDk8f98ETfb56vDRN4xuvERc0F+c0L2JxOZcD6
BvM/sXsGweRgaubOmwxwcNLzz9AYAn6/6eM7Y4J6keK/lWZHg8W+RI/npYLx
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
              "], {{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                Arrowheads[0.], {
                 ArrowBox[{1, 2}, 0.02254220222992223], 
                 ArrowBox[{1, 5}, 0.02254220222992223], 
                 ArrowBox[{1, 7}, 0.02254220222992223], 
                 ArrowBox[{1, 9}, 0.02254220222992223], 
                 ArrowBox[{1, 11}, 0.02254220222992223], 
                 ArrowBox[{1, 13}, 0.02254220222992223], 
                 ArrowBox[{1, 15}, 0.02254220222992223], 
                 ArrowBox[{1, 17}, 0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-2.1409496216940123`*^-16, -1.0434049156924905`}, 5}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {1.0704748108470062`*^-15, -0.9225412836753133}, 5}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.19317181243605622`, -1.0333779239158283`}, 7}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.1495108326247347, -0.7998123114976872}, 7}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.3696769958201283, -0.9542463251548349}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.24459071364353785`, -0.6313614109083246}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.5056775470872312, -0.8166972803055038}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.272398578269021, -0.43993880945047653`}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.582805838183662, -0.6393075500603161}, 13}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.229178820294798, -0.251397190160288}, 13}], 
                  0.02254220222992223], 
                 ArrowBox[
                  BezierCurveBox[{
                   2, {-0.590645266014236, -0.4460346004393019}, 15}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.12076850752425144`, -0.09120014346806327}, 15}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {-0.04103500681170743, -0.01167546606958506}, 4}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.5674671696890601, 0.16145833033997112`}, 4}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.15069014333422975`, 0.013963498134084052`}, 6}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.7369836857302795, 0.06829159554065786}, 6}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.33873038367193714`, -0.031387992444006356`}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.8613974228519735, -0.07982022606495483}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.49768983777687453`, -0.14160496769998895`}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.9239056164555438, -0.26287381225308243`}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.6061001505474233, -0.3018020143922123}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.9160661886249679, -0.45614676187410347`}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.6493199085216432, -0.4903436336824059}, 14}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.8389378975285393, -0.633536492119288}, 14}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.6215120438961692, -0.6817662351402451}, 16}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.7029373462614268, -0.7710855369686257}, 16}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.19172515014593514`, 1.0256389642036672`}, 6}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.16951651604121815`, 0.9068332652006886}, 6}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.37976539048364444`, 0.9802874736255784}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.2939302531629152, 0.7587214435950802}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.5387248445885809, 0.8700704983695936}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.35643844676648223`, 0.5756678574069446}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.6471351573591255, 0.7098734516773724}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.34859901893590606`, 0.3823949077859304}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.6903549153333459, 0.5213318323871787}, 14}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.27147072783947207`, 0.20500517754074105`}, 14}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.3769213302526145, -0.9729461079072422}, 7}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.33326035044130586`, -0.8602441275062771}, 7}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.5534265136367049, -0.8938145091462413}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.4283402314601095, -0.6917932269169124}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.6894270649037971, -0.7562654642969203}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.4561480960855884, -0.500370625459065}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.7665553560002341, -0.5788757340517223}, 13}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.41292833811137236`, -0.31182900616887055`}, 13}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.5492819065248636, 0.887120738826274}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.4856554033088557, 0.7843604077987405}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.7082413606297987, 0.7769037635702826}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.5481635969124143, 0.6013068216106137}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.8166516734003458, 0.616706716878059}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.5403241690818401, 0.4080338719895959}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   7, {-0.7029373462614349, -0.7710855369686219}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   7, {-0.6215120438961611, -0.6817662351402489}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   7, {-0.8389378975285295, -0.6335364921192947}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   7, {-0.6493199085216452, -0.4903436336824001}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   8, {0.83265509775149, 0.6287919419646689}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   8, {0.7362038372501287, 0.5559553310325218}, 10}], 
                  0.02254220222992223]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                DiskBox[1, 0.02254220222992223], 
                DiskBox[2, 0.02254220222992223], 
                DiskBox[3, 0.02254220222992223], 
                DiskBox[4, 0.02254220222992223], 
                DiskBox[5, 0.02254220222992223], 
                DiskBox[6, 0.02254220222992223], 
                DiskBox[7, 0.02254220222992223], 
                DiskBox[8, 0.02254220222992223], 
                DiskBox[9, 0.02254220222992223], 
                DiskBox[10, 0.02254220222992223], 
                DiskBox[11, 0.02254220222992223], 
                DiskBox[12, 0.02254220222992223], 
                DiskBox[13, 0.02254220222992223], 
                DiskBox[14, 0.02254220222992223], 
                DiskBox[15, 0.02254220222992223], 
                DiskBox[16, 0.02254220222992223], 
                DiskBox[17, 0.02254220222992223]}}], {
             Background -> GrayLevel[0, 0], FormatType -> TraditionalForm, 
              FrameTicks -> None, ImageSize -> 32}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  StyleBox["\"Points: \"", 
                   RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                  InterpretationBox["\"\\!\\(\\*RowBox[{\\\"10\\\"}]\\)\"", 
                   StringForm["``", 10], Editable -> False]}, "RowDefault"], 
                "SummaryItem"]}, {
               TagBox[
                TemplateBox[{
                  StyleBox["\"Dimensions: \"", 
                   RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                  InterpretationBox[
                  "\"\\!\\(\\*RowBox[{\\\"1000\\\"}]\\)\"", 
                   StringForm["``", 1000], Editable -> False]}, "RowDefault"],
                 "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             GraphicsComplexBox[CompressedData["
1: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
DD7UNnFU6mGhG2+T145RH+SY9ZrzutlY7vy4V2ngKex2UAy4ntEDQ02/GiX9
uKDJkxbtMe2FnIE50gkPudC2yslK4U8vuN6sNTtygQs/bOInhsL7oH7xMpH5
+7lwbMI9rWBHP9j/elIzto4Ll5b2/DvS2g+9zSapiqJcyHELv6J/bQB6/5yh
fejhwNU9a713TQzAq5uXer3SOCCd1ZT4e5IEwwV3F73RYsFbYtPio/vJMLLR
fO8MwblvmZvRMhMfMhyJ/r1/YTsT+vpG+7sayVDt3Z3WHckE0a8R/0rmUaA7
Oumf62UmxF97+LHnEAVWe4QHrlVlQqhcYuJcdwoo+ob4MzkMMFzx1E+lmAJP
OM5No4Lzu/PamhCp6m4ItV2u09LCgSGFhxdOa/XAj6p/Tv2CcyO6d17KS+yB
343jjjHHOSBRFJTLV+yFXRmsOQdlOHA6amCsMKYXjOuKzbkDbBg02+Jet7EP
ajPeVeQlsqEjeJP/18w+UFDZ9aXyPhuIPzddcNbrh/Xha36rG7Khdd7JEBkF
EnhTNTbtaWZACvvN+uBrJNAx116zIZYBpxTHLBbkCtrPDc7GPmLA4CbFZ+Zi
ZEg4K6XXZMaAV38W9+07LpgfvcezC3cwYNUq5eQ4Qf0YSm1IfyjHAG5Oj7nh
TzJYO778IT+DAVfutr2eEtQb29zf6xTx6FCrrrpJn9gHZZcC51i3cUBWN/n9
tiUDsENcpnOpHwcub7w5sn7XINSfJDzw0ufA/Tei9ReshuDYjxADBpcNexLt
Y1fvIkCLiXjhlSA20C6/qPKuIoCLYp+97hY2KPgFPl9tSARH20Huu3oWyJR1
/A6oJoJVGdO/zpIFJZe/kOXfMcDN/l5Y3xoKUHYVqm+QZoLCTHkbqTQyPHE+
mejkzQSKpTbtvRYZhtXvz20ZZcKPubvnlgvmRaPGMpgneE7RxhzWF01BHi35
rhNayoIfzPK0yUQinPb9Xum7jA3K3j3HC+SIQH/aRv9wnQ2h/PYHh3wIsEp/
nVdGUA/0nv31bsZrNuipMFratXvhwOfvn4P/sUBSnkn4zBXk/wWJK8Z3WPAq
b7H60vQ+yFu7TNWLwYR59EEDk8f98ETfb56vDRN4xuvERc0F+c0L2JxOZcD6
BvM/sXsGweRgaubOmwxwcNLzz9AYAn6/6eM7Y4J6keK/lWZHg8W+RI/npYLx
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
              "], {{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                Arrowheads[0.], {
                 ArrowBox[{1, 2}, 0.02254220222992223], 
                 ArrowBox[{1, 5}, 0.02254220222992223], 
                 ArrowBox[{1, 7}, 0.02254220222992223], 
                 ArrowBox[{1, 9}, 0.02254220222992223], 
                 ArrowBox[{1, 11}, 0.02254220222992223], 
                 ArrowBox[{1, 13}, 0.02254220222992223], 
                 ArrowBox[{1, 15}, 0.02254220222992223], 
                 ArrowBox[{1, 17}, 0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-2.1409496216940123`*^-16, -1.0434049156924905`}, 5}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {1.0704748108470062`*^-15, -0.9225412836753133}, 5}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.19317181243605622`, -1.0333779239158283`}, 7}], 
                  0.02254220222992223], 
                 ArrowBox[
                  BezierCurveBox[{
                   2, {-0.1495108326247347, -0.7998123114976872}, 7}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.3696769958201283, -0.9542463251548349}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.24459071364353785`, -0.6313614109083246}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.5056775470872312, -0.8166972803055038}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.272398578269021, -0.43993880945047653`}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.582805838183662, -0.6393075500603161}, 13}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.229178820294798, -0.251397190160288}, 13}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.590645266014236, -0.4460346004393019}, 15}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.12076850752425144`, -0.09120014346806327}, 15}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {-0.04103500681170743, -0.01167546606958506}, 4}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.5674671696890601, 0.16145833033997112`}, 4}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.15069014333422975`, 0.013963498134084052`}, 6}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.7369836857302795, 0.06829159554065786}, 6}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.33873038367193714`, -0.031387992444006356`}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.8613974228519735, -0.07982022606495483}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.49768983777687453`, -0.14160496769998895`}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.9239056164555438, -0.26287381225308243`}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.6061001505474233, -0.3018020143922123}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.9160661886249679, -0.45614676187410347`}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.6493199085216432, -0.4903436336824059}, 14}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.8389378975285393, -0.633536492119288}, 14}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.6215120438961692, -0.6817662351402451}, 16}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.7029373462614268, -0.7710855369686257}, 16}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.19172515014593514`, 1.0256389642036672`}, 6}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.16951651604121815`, 0.9068332652006886}, 6}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.37976539048364444`, 0.9802874736255784}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.2939302531629152, 0.7587214435950802}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.5387248445885809, 0.8700704983695936}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.35643844676648223`, 0.5756678574069446}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.6471351573591255, 0.7098734516773724}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.34859901893590606`, 0.3823949077859304}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.6903549153333459, 0.5213318323871787}, 14}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.27147072783947207`, 0.20500517754074105`}, 14}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.3769213302526145, -0.9729461079072422}, 7}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.33326035044130586`, -0.8602441275062771}, 7}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.5534265136367049, -0.8938145091462413}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.4283402314601095, -0.6917932269169124}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.6894270649037971, -0.7562654642969203}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.4561480960855884, -0.500370625459065}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.7665553560002341, -0.5788757340517223}, 13}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.41292833811137236`, -0.31182900616887055`}, 13}], 
                  0.02254220222992223], 
                 ArrowBox[
                  BezierCurveBox[{
                   6, {0.5492819065248636, 0.887120738826274}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.4856554033088557, 0.7843604077987405}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.7082413606297987, 0.7769037635702826}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.5481635969124143, 0.6013068216106137}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.8166516734003458, 0.616706716878059}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.5403241690818401, 0.4080338719895959}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   7, {-0.7029373462614349, -0.7710855369686219}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   7, {-0.6215120438961611, -0.6817662351402489}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   7, {-0.8389378975285295, -0.6335364921192947}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   7, {-0.6493199085216452, -0.4903436336824001}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   8, {0.83265509775149, 0.6287919419646689}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   8, {0.7362038372501287, 0.5559553310325218}, 10}], 
                  0.02254220222992223]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                DiskBox[1, 0.02254220222992223], 
                DiskBox[2, 0.02254220222992223], 
                DiskBox[3, 0.02254220222992223], 
                DiskBox[4, 0.02254220222992223], 
                DiskBox[5, 0.02254220222992223], 
                DiskBox[6, 0.02254220222992223], 
                DiskBox[7, 0.02254220222992223], 
                DiskBox[8, 0.02254220222992223], 
                DiskBox[9, 0.02254220222992223], 
                DiskBox[10, 0.02254220222992223], 
                DiskBox[11, 0.02254220222992223], 
                DiskBox[12, 0.02254220222992223], 
                DiskBox[13, 0.02254220222992223], 
                DiskBox[14, 0.02254220222992223], 
                DiskBox[15, 0.02254220222992223], 
                DiskBox[16, 0.02254220222992223], 
                DiskBox[17, 0.02254220222992223]}}], {
             Background -> GrayLevel[0, 0], FormatType -> TraditionalForm, 
              FrameTicks -> None, ImageSize -> 32}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  StyleBox["\"Points: \"", 
                   RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                  InterpretationBox["\"\\!\\(\\*RowBox[{\\\"10\\\"}]\\)\"", 
                   StringForm["``", 10], Editable -> False]}, "RowDefault"], 
                "SummaryItem"]}, {
               TagBox[
                TemplateBox[{
                  StyleBox["\"Dimensions: \"", 
                   RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                  InterpretationBox[
                  "\"\\!\\(\\*RowBox[{\\\"1000\\\"}]\\)\"", 
                   StringForm["``", 1000], Editable -> False]}, "RowDefault"],
                 "SummaryItem"]}, {
               TagBox[
                TemplateBox[{
                  StyleBox["\"Simplex Count: \"", 
                   RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                  InterpretationBox["\"\\!\\(\\*RowBox[{\\\"767\\\"}]\\)\"", 
                   StringForm["``", 767], Editable -> False]}, "RowDefault"], 
                "SummaryItem"]}, {
               TagBox[
                TemplateBox[{
                  StyleBox["\"Filtration Length: \"", 
                   RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                  InterpretationBox["\"\\!\\(\\*RowBox[{\\\"44\\\"}]\\)\"", 
                   StringForm["``", 44], Editable -> False]}, "RowDefault"], 
                "SummaryItem"]}, {
               TagBox[
                TemplateBox[{
                  StyleBox["\"Generators: \"", 
                   RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                  InterpretationBox["\"\\!\\(\\*RowBox[{\\\"9\\\"}]\\)\"", 
                   StringForm["``", 9], Editable -> False]}, "RowDefault"], 
                "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  $CellContext`PersistentHomologyObject[<|"Points" -> CompressedData["
1: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
Tw6CNacyLvD6cbv3Lsl/LxuVx+xyr65qxW03qYlfykyU5fxulLYZg8zykx6B
moMIY92e0r7ERjrvaKiuNQOaQ7HaWaHDiNigbH+PRMXU3HfUbB0OVBUurEp7
PwJHUZVVzcfoKJzd8jrtZBlI3lEqZ6IJL23Y1RC9vhGFb59UlAmNwP1H+/Fb
T4ch/PXptivnOKCua130cT0Zy1fukRcWZ0Fcv+BdXnAfBAQ45y4fPA2h3/eX
915gQ6tfL2ieD53o4w5Pv3l8dDK1M9e5E9cXD7D5LVOOzJ4Vq6JK+2BB23Rk
1RiRf46DS3x+8eBpOS/syfIWGFyXTpWVf4tabWq3jkIrMp+7/biZyYOyinHY
+BQLJXypV9SqMVD27/YKiibm9p2aU3PaCT+e12AccqMOascVD/WMkiDjZnNt
5iIHze5t3MF/RN3OyxR4J0sGaVJqqm9LP/oUbDY7Efeh/ODp+XPmxHnq0TNE
KJ8g8FJe2UO/F34ClYakhemIfZCeccu/Bgl7MhfNW8TFeJ1Du97xfMTOMake
mkmHUPjdKcttJIhLiPU4q/BQttpL8Nv1KOguOSxvV0Lw43mFITaDjFpphmAu
rw62bse7Fyjx4elgH7hjBw82ES5yikY0lJyY2uptP0L4+nXJUK8xyN49tUT7
8zCmDYtpu3y4mMhqop/aMYRkixuvJx4R3uuyZ8r2CR3edTO7OGY8pGrcbdoG
KoLLRYdsltJQxGuqO9TPhUO+bYWFQSEMTEMNtd+mwNUk0rziChm/e+eV5m4n
eHVUz/nA2s/wVetfoCTXDLOe4etqaT2YPRA5/WyUA6EuRp9KNhvtl1993m5M
gfLbwIVi4gzo/k56fd6lHQLzUq6vTKqDe61mcZIbC9M5FpsZvysw+2Yt/6sX
Azc51i4xfkwoVl5VqjtHAXVomPWETPjzvftTrS1DiA34Z651iuAew4ha1YEi
SNqrOVbZZoIWROl2lWbiLL2+5NUNKryOrv/7yG8IMgqRKpeGB+HgXh8eVDsA
K4UbvmQNwo/WDB1JH2iFg47iym3MHCQUu3y6VNWDNOotf8qzPoTfu9vWuo3I
i2aJ0lrTIRTPVnVo3exAo/ypx1t+cJD5qF7MQ7YZLPdXs68jK6AUaBPh2cqD
e92pG8WEj4aRzUlNRVT4kRLiVE6+gdA6L+1jkh0gD0qnJ+0Zg/fdGJPkzyMQ
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
     "], "Dimension" -> 
    1000, "MaximumDistance" -> 13.433790367745635`, 
    "Simplices" -> {{1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {10}, {3, 
      4}, {2, 6}, {2, 9}, {6, 9}, {2, 6, 9}, {4, 9}, {5, 6}, {3, 9}, {3, 4, 
      9}, {3, 7}, {3, 6}, {3, 6, 9}, {1, 6}, {6, 7}, {3, 6, 7}, {5, 9}, {5, 6,
       9}, {2, 7}, {2, 6, 7}, {2, 3}, {2, 3, 6}, {2, 3, 7}, {2, 3, 9}, {2, 3, 
      6, 7}, {2, 3, 6, 9}, {1, 9}, {1, 6, 9}, {4, 7}, {3, 4, 7}, {1, 3}, {1, 
      3, 6}, {1, 3, 9}, {1, 3, 6, 9}, {8, 9}, {4, 5}, {4, 5, 9}, {7, 10}, {4, 
      8}, {4, 8, 9}, {6, 10}, {6, 7, 10}, {4, 6}, {3, 4, 6}, {4, 5, 6}, {4, 6,
       7}, {4, 6, 9}, {3, 4, 6, 7}, {3, 4, 6, 9}, {4, 5, 6, 9}, {6, 8}, {4, 6,
       8}, {6, 8, 9}, {4, 6, 8, 9}, {2, 4}, {2, 3, 4}, {2, 4, 6}, {2, 4, 7}, {
      2, 4, 9}, {2, 3, 4, 6}, {2, 3, 4, 7}, {2, 3, 4, 9}, {2, 4, 6, 7}, {2, 4,
       6, 9}, {2, 3, 4, 6, 7}, {2, 3, 4, 6, 9}, {3, 5}, {3, 4, 5}, {3, 5, 
      6}, {3, 5, 9}, {3, 4, 5, 6}, {3, 4, 5, 9}, {3, 5, 6, 9}, {3, 4, 5, 6, 
      9}, {7, 9}, {2, 7, 9}, {3, 7, 9}, {4, 7, 9}, {6, 7, 9}, {2, 3, 7, 9}, {
      2, 4, 7, 9}, {2, 6, 7, 9}, {3, 4, 7, 9}, {3, 6, 7, 9}, {4, 6, 7, 9}, {2,
       3, 4, 7, 9}, {2, 3, 6, 7, 9}, {2, 4, 6, 7, 9}, {3, 4, 6, 7, 9}, {2, 3, 
      4, 6, 7, 9}, {2, 5}, {2, 3, 5}, {2, 4, 5}, {2, 5, 6}, {2, 5, 9}, {2, 3, 
      4, 5}, {2, 3, 5, 6}, {2, 3, 5, 9}, {2, 4, 5, 6}, {2, 4, 5, 9}, {2, 5, 6,
       9}, {2, 3, 4, 5, 6}, {2, 3, 4, 5, 9}, {2, 3, 5, 6, 9}, {2, 4, 5, 6, 
      9}, {2, 3, 4, 5, 6, 9}, {5, 7}, {2, 5, 7}, {3, 5, 7}, {4, 5, 7}, {5, 6, 
      7}, {5, 7, 9}, {2, 3, 5, 7}, {2, 4, 5, 7}, {2, 5, 6, 7}, {2, 5, 7, 9}, {
      3, 4, 5, 7}, {3, 5, 6, 7}, {3, 5, 7, 9}, {4, 5, 6, 7}, {4, 5, 7, 9}, {5,
       6, 7, 9}, {2, 3, 4, 5, 7}, {2, 3, 5, 6, 7}, {2, 3, 5, 7, 9}, {2, 4, 5, 
      6, 7}, {2, 4, 5, 7, 9}, {2, 5, 6, 7, 9}, {3, 4, 5, 6, 7}, {3, 4, 5, 7, 
      9}, {3, 5, 6, 7, 9}, {4, 5, 6, 7, 9}, {2, 3, 4, 5, 6, 7}, {2, 3, 4, 5, 
      7, 9}, {2, 3, 5, 6, 7, 9}, {2, 4, 5, 6, 7, 9}, {3, 4, 5, 6, 7, 9}, {2, 
      3, 4, 5, 6, 7, 9}, {5, 10}, {5, 6, 10}, {5, 7, 10}, {5, 6, 7, 10}, {2, 
      8}, {2, 4, 8}, {2, 6, 8}, {2, 8, 9}, {2, 4, 6, 8}, {2, 4, 8, 9}, {2, 6, 
      8, 9}, {2, 4, 6, 8, 9}, {9, 10}, {5, 9, 10}, {6, 9, 10}, {7, 9, 10}, {5,
       6, 9, 10}, {5, 7, 9, 10}, {6, 7, 9, 10}, {5, 6, 7, 9, 10}, {1, 7}, {1, 
      3, 7}, {1, 6, 7}, {1, 7, 9}, {1, 3, 6, 7}, {1, 3, 7, 9}, {1, 6, 7, 9}, {
      1, 3, 6, 7, 9}, {1, 10}, {1, 6, 10}, {1, 7, 10}, {1, 9, 10}, {1, 6, 7, 
      10}, {1, 6, 9, 10}, {1, 7, 9, 10}, {1, 6, 7, 9, 10}, {1, 5}, {1, 3, 
      5}, {1, 5, 6}, {1, 5, 7}, {1, 5, 9}, {1, 5, 10}, {1, 3, 5, 6}, {1, 3, 5,
       7}, {1, 3, 5, 9}, {1, 5, 6, 7}, {1, 5, 6, 9}, {1, 5, 6, 10}, {1, 5, 7, 
      9}, {1, 5, 7, 10}, {1, 5, 9, 10}, {1, 3, 5, 6, 7}, {1, 3, 5, 6, 9}, {1, 
      3, 5, 7, 9}, {1, 5, 6, 7, 9}, {1, 5, 6, 7, 10}, {1, 5, 6, 9, 10}, {1, 5,
       7, 9, 10}, {1, 3, 5, 6, 7, 9}, {1, 5, 6, 7, 9, 10}, {3, 8}, {2, 3, 
      8}, {3, 4, 8}, {3, 6, 8}, {3, 8, 9}, {2, 3, 4, 8}, {2, 3, 6, 8}, {2, 3, 
      8, 9}, {3, 4, 6, 8}, {3, 4, 8, 9}, {3, 6, 8, 9}, {2, 3, 4, 6, 8}, {2, 3,
       4, 8, 9}, {2, 3, 6, 8, 9}, {3, 4, 6, 8, 9}, {2, 3, 4, 6, 8, 9}, {1, 
      8}, {1, 3, 8}, {1, 6, 8}, {1, 8, 9}, {1, 3, 6, 8}, {1, 3, 8, 9}, {1, 6, 
      8, 9}, {1, 3, 6, 8, 9}, {8, 10}, {1, 8, 10}, {6, 8, 10}, {8, 9, 10}, {1,
       6, 8, 10}, {1, 8, 9, 10}, {6, 8, 9, 10}, {1, 6, 8, 9, 10}, {3, 10}, {1,
       3, 10}, {3, 5, 10}, {3, 6, 10}, {3, 7, 10}, {3, 8, 10}, {3, 9, 10}, {1,
       3, 5, 10}, {1, 3, 6, 10}, {1, 3, 7, 10}, {1, 3, 8, 10}, {1, 3, 9, 
      10}, {3, 5, 6, 10}, {3, 5, 7, 10}, {3, 5, 9, 10}, {3, 6, 7, 10}, {3, 6, 
      8, 10}, {3, 6, 9, 10}, {3, 7, 9, 10}, {3, 8, 9, 10}, {1, 3, 5, 6, 10}, {
      1, 3, 5, 7, 10}, {1, 3, 5, 9, 10}, {1, 3, 6, 7, 10}, {1, 3, 6, 8, 10}, {
      1, 3, 6, 9, 10}, {1, 3, 7, 9, 10}, {1, 3, 8, 9, 10}, {3, 5, 6, 7, 10}, {
      3, 5, 6, 9, 10}, {3, 5, 7, 9, 10}, {3, 6, 7, 9, 10}, {3, 6, 8, 9, 10}, {
      1, 3, 5, 6, 7, 10}, {1, 3, 5, 6, 9, 10}, {1, 3, 5, 7, 9, 10}, {1, 3, 6, 
      7, 9, 10}, {1, 3, 6, 8, 9, 10}, {3, 5, 6, 7, 9, 10}, {1, 3, 5, 6, 7, 9, 
      10}, {2, 10}, {2, 3, 10}, {2, 5, 10}, {2, 6, 10}, {2, 7, 10}, {2, 8, 
      10}, {2, 9, 10}, {2, 3, 5, 10}, {2, 3, 6, 10}, {2, 3, 7, 10}, {2, 3, 8, 
      10}, {2, 3, 9, 10}, {2, 5, 6, 10}, {2, 5, 7, 10}, {2, 5, 9, 10}, {2, 6, 
      7, 10}, {2, 6, 8, 10}, {2, 6, 9, 10}, {2, 7, 9, 10}, {2, 8, 9, 10}, {2, 
      3, 5, 6, 10}, {2, 3, 5, 7, 10}, {2, 3, 5, 9, 10}, {2, 3, 6, 7, 10}, {2, 
      3, 6, 8, 10}, {2, 3, 6, 9, 10}, {2, 3, 7, 9, 10}, {2, 3, 8, 9, 10}, {2, 
      5, 6, 7, 10}, {2, 5, 6, 9, 10}, {2, 5, 7, 9, 10}, {2, 6, 7, 9, 10}, {2, 
      6, 8, 9, 10}, {2, 3, 5, 6, 7, 10}, {2, 3, 5, 6, 9, 10}, {2, 3, 5, 7, 9, 
      10}, {2, 3, 6, 7, 9, 10}, {2, 3, 6, 8, 9, 10}, {2, 5, 6, 7, 9, 10}, {2, 
      3, 5, 6, 7, 9, 10}, {1, 4}, {1, 3, 4}, {1, 4, 5}, {1, 4, 6}, {1, 4, 
      7}, {1, 4, 8}, {1, 4, 9}, {1, 3, 4, 5}, {1, 3, 4, 6}, {1, 3, 4, 7}, {1, 
      3, 4, 8}, {1, 3, 4, 9}, {1, 4, 5, 6}, {1, 4, 5, 7}, {1, 4, 5, 9}, {1, 4,
       6, 7}, {1, 4, 6, 8}, {1, 4, 6, 9}, {1, 4, 7, 9}, {1, 4, 8, 9}, {1, 3, 
      4, 5, 6}, {1, 3, 4, 5, 7}, {1, 3, 4, 5, 9}, {1, 3, 4, 6, 7}, {1, 3, 4, 
      6, 8}, {1, 3, 4, 6, 9}, {1, 3, 4, 7, 9}, {1, 3, 4, 8, 9}, {1, 4, 5, 6, 
      7}, {1, 4, 5, 6, 9}, {1, 4, 5, 7, 9}, {1, 4, 6, 7, 9}, {1, 4, 6, 8, 
      9}, {1, 3, 4, 5, 6, 7}, {1, 3, 4, 5, 6, 9}, {1, 3, 4, 5, 7, 9}, {1, 3, 
      4, 6, 7, 9}, {1, 3, 4, 6, 8, 9}, {1, 4, 5, 6, 7, 9}, {1, 3, 4, 5, 6, 7, 
      9}, {7, 8}, {1, 7, 8}, {2, 7, 8}, {3, 7, 8}, {4, 7, 8}, {6, 7, 8}, {7, 
      8, 9}, {7, 8, 10}, {1, 3, 7, 8}, {1, 4, 7, 8}, {1, 6, 7, 8}, {1, 7, 8, 
      9}, {1, 7, 8, 10}, {2, 3, 7, 8}, {2, 4, 7, 8}, {2, 6, 7, 8}, {2, 7, 8, 
      9}, {2, 7, 8, 10}, {3, 4, 7, 8}, {3, 6, 7, 8}, {3, 7, 8, 9}, {3, 7, 8, 
      10}, {4, 6, 7, 8}, {4, 7, 8, 9}, {6, 7, 8, 9}, {6, 7, 8, 10}, {7, 8, 9, 
      10}, {1, 3, 4, 7, 8}, {1, 3, 6, 7, 8}, {1, 3, 7, 8, 9}, {1, 3, 7, 8, 
      10}, {1, 4, 6, 7, 8}, {1, 4, 7, 8, 9}, {1, 6, 7, 8, 9}, {1, 6, 7, 8, 
      10}, {1, 7, 8, 9, 10}, {2, 3, 4, 7, 8}, {2, 3, 6, 7, 8}, {2, 3, 7, 8, 
      9}, {2, 3, 7, 8, 10}, {2, 4, 6, 7, 8}, {2, 4, 7, 8, 9}, {2, 6, 7, 8, 
      9}, {2, 6, 7, 8, 10}, {2, 7, 8, 9, 10}, {3, 4, 6, 7, 8}, {3, 4, 7, 8, 
      9}, {3, 6, 7, 8, 9}, {3, 6, 7, 8, 10}, {3, 7, 8, 9, 10}, {4, 6, 7, 8, 
      9}, {6, 7, 8, 9, 10}, {1, 3, 4, 6, 7, 8}, {1, 3, 4, 7, 8, 9}, {1, 3, 6, 
      7, 8, 9}, {1, 3, 6, 7, 8, 10}, {1, 3, 7, 8, 9, 10}, {1, 4, 6, 7, 8, 
      9}, {1, 6, 7, 8, 9, 10}, {2, 3, 4, 6, 7, 8}, {2, 3, 4, 7, 8, 9}, {2, 3, 
      6, 7, 8, 9}, {2, 3, 6, 7, 8, 10}, {2, 3, 7, 8, 9, 10}, {2, 4, 6, 7, 8, 
      9}, {2, 6, 7, 8, 9, 10}, {3, 4, 6, 7, 8, 9}, {3, 6, 7, 8, 9, 10}, {1, 3,
       4, 6, 7, 8, 9}, {1, 3, 6, 7, 8, 9, 10}, {2, 3, 4, 6, 7, 8, 9}, {2, 3, 
      6, 7, 8, 9, 10}, {4, 10}, {1, 4, 10}, {2, 4, 10}, {3, 4, 10}, {4, 5, 
      10}, {4, 6, 10}, {4, 7, 10}, {4, 8, 10}, {4, 9, 10}, {1, 3, 4, 10}, {1, 
      4, 5, 10}, {1, 4, 6, 10}, {1, 4, 7, 10}, {1, 4, 8, 10}, {1, 4, 9, 10}, {
      2, 3, 4, 10}, {2, 4, 5, 10}, {2, 4, 6, 10}, {2, 4, 7, 10}, {2, 4, 8, 
      10}, {2, 4, 9, 10}, {3, 4, 5, 10}, {3, 4, 6, 10}, {3, 4, 7, 10}, {3, 4, 
      8, 10}, {3, 4, 9, 10}, {4, 5, 6, 10}, {4, 5, 7, 10}, {4, 5, 9, 10}, {4, 
      6, 7, 10}, {4, 6, 8, 10}, {4, 6, 9, 10}, {4, 7, 8, 10}, {4, 7, 9, 10}, {
      4, 8, 9, 10}, {1, 3, 4, 5, 10}, {1, 3, 4, 6, 10}, {1, 3, 4, 7, 10}, {1, 
      3, 4, 8, 10}, {1, 3, 4, 9, 10}, {1, 4, 5, 6, 10}, {1, 4, 5, 7, 10}, {1, 
      4, 5, 9, 10}, {1, 4, 6, 7, 10}, {1, 4, 6, 8, 10}, {1, 4, 6, 9, 10}, {1, 
      4, 7, 8, 10}, {1, 4, 7, 9, 10}, {1, 4, 8, 9, 10}, {2, 3, 4, 5, 10}, {2, 
      3, 4, 6, 10}, {2, 3, 4, 7, 10}, {2, 3, 4, 8, 10}, {2, 3, 4, 9, 10}, {2, 
      4, 5, 6, 10}, {2, 4, 5, 7, 10}, {2, 4, 5, 9, 10}, {2, 4, 6, 7, 10}, {2, 
      4, 6, 8, 10}, {2, 4, 6, 9, 10}, {2, 4, 7, 8, 10}, {2, 4, 7, 9, 10}, {2, 
      4, 8, 9, 10}, {3, 4, 5, 6, 10}, {3, 4, 5, 7, 10}, {3, 4, 5, 9, 10}, {3, 
      4, 6, 7, 10}, {3, 4, 6, 8, 10}, {3, 4, 6, 9, 10}, {3, 4, 7, 8, 10}, {3, 
      4, 7, 9, 10}, {3, 4, 8, 9, 10}, {4, 5, 6, 7, 10}, {4, 5, 6, 9, 10}, {4, 
      5, 7, 9, 10}, {4, 6, 7, 8, 10}, {4, 6, 7, 9, 10}, {4, 6, 8, 9, 10}, {4, 
      7, 8, 9, 10}, {1, 3, 4, 5, 6, 10}, {1, 3, 4, 5, 7, 10}, {1, 3, 4, 5, 9, 
      10}, {1, 3, 4, 6, 7, 10}, {1, 3, 4, 6, 8, 10}, {1, 3, 4, 6, 9, 10}, {1, 
      3, 4, 7, 8, 10}, {1, 3, 4, 7, 9, 10}, {1, 3, 4, 8, 9, 10}, {1, 4, 5, 6, 
      7, 10}, {1, 4, 5, 6, 9, 10}, {1, 4, 5, 7, 9, 10}, {1, 4, 6, 7, 8, 10}, {
      1, 4, 6, 7, 9, 10}, {1, 4, 6, 8, 9, 10}, {1, 4, 7, 8, 9, 10}, {2, 3, 4, 
      5, 6, 10}, {2, 3, 4, 5, 7, 10}, {2, 3, 4, 5, 9, 10}, {2, 3, 4, 6, 7, 
      10}, {2, 3, 4, 6, 8, 10}, {2, 3, 4, 6, 9, 10}, {2, 3, 4, 7, 8, 10}, {2, 
      3, 4, 7, 9, 10}, {2, 3, 4, 8, 9, 10}, {2, 4, 5, 6, 7, 10}, {2, 4, 5, 6, 
      9, 10}, {2, 4, 5, 7, 9, 10}, {2, 4, 6, 7, 8, 10}, {2, 4, 6, 7, 9, 10}, {
      2, 4, 6, 8, 9, 10}, {2, 4, 7, 8, 9, 10}, {3, 4, 5, 6, 7, 10}, {3, 4, 5, 
      6, 9, 10}, {3, 4, 5, 7, 9, 10}, {3, 4, 6, 7, 8, 10}, {3, 4, 6, 7, 9, 
      10}, {3, 4, 6, 8, 9, 10}, {3, 4, 7, 8, 9, 10}, {4, 5, 6, 7, 9, 10}, {4, 
      6, 7, 8, 9, 10}, {1, 3, 4, 5, 6, 7, 10}, {1, 3, 4, 5, 6, 9, 10}, {1, 3, 
      4, 5, 7, 9, 10}, {1, 3, 4, 6, 7, 8, 10}, {1, 3, 4, 6, 7, 9, 10}, {1, 3, 
      4, 6, 8, 9, 10}, {1, 3, 4, 7, 8, 9, 10}, {1, 4, 5, 6, 7, 9, 10}, {1, 4, 
      6, 7, 8, 9, 10}, {2, 3, 4, 5, 6, 7, 10}, {2, 3, 4, 5, 6, 9, 10}, {2, 3, 
      4, 5, 7, 9, 10}, {2, 3, 4, 6, 7, 8, 10}, {2, 3, 4, 6, 7, 9, 10}, {2, 3, 
      4, 6, 8, 9, 10}, {2, 3, 4, 7, 8, 9, 10}, {2, 4, 5, 6, 7, 9, 10}, {2, 4, 
      6, 7, 8, 9, 10}, {3, 4, 5, 6, 7, 9, 10}, {3, 4, 6, 7, 8, 9, 10}, {1, 3, 
      4, 5, 6, 7, 9, 10}, {1, 3, 4, 6, 7, 8, 9, 10}, {2, 3, 4, 5, 6, 7, 9, 
      10}, {2, 3, 4, 6, 7, 8, 9, 10}, {5, 8}, {1, 5, 8}, {2, 5, 8}, {3, 5, 
      8}, {4, 5, 8}, {5, 6, 8}, {5, 7, 8}, {5, 8, 9}, {5, 8, 10}, {1, 3, 5, 
      8}, {1, 4, 5, 8}, {1, 5, 6, 8}, {1, 5, 7, 8}, {1, 5, 8, 9}, {1, 5, 8, 
      10}, {2, 3, 5, 8}, {2, 4, 5, 8}, {2, 5, 6, 8}, {2, 5, 7, 8}, {2, 5, 8, 
      9}, {2, 5, 8, 10}, {3, 4, 5, 8}, {3, 5, 6, 8}, {3, 5, 7, 8}, {3, 5, 8, 
      9}, {3, 5, 8, 10}, {4, 5, 6, 8}, {4, 5, 7, 8}, {4, 5, 8, 9}, {4, 5, 8, 
      10}, {5, 6, 7, 8}, {5, 6, 8, 9}, {5, 6, 8, 10}, {5, 7, 8, 9}, {5, 7, 8, 
      10}, {5, 8, 9, 10}, {1, 3, 4, 5, 8}, {1, 3, 5, 6, 8}, {1, 3, 5, 7, 8}, {
      1, 3, 5, 8, 9}, {1, 3, 5, 8, 10}, {1, 4, 5, 6, 8}, {1, 4, 5, 7, 8}, {1, 
      4, 5, 8, 9}, {1, 4, 5, 8, 10}, {1, 5, 6, 7, 8}, {1, 5, 6, 8, 9}, {1, 5, 
      6, 8, 10}, {1, 5, 7, 8, 9}, {1, 5, 7, 8, 10}, {1, 5, 8, 9, 10}, {2, 3, 
      4, 5, 8}, {2, 3, 5, 6, 8}, {2, 3, 5, 7, 8}, {2, 3, 5, 8, 9}, {2, 3, 5, 
      8, 10}, {2, 4, 5, 6, 8}, {2, 4, 5, 7, 8}, {2, 4, 5, 8, 9}, {2, 4, 5, 8, 
      10}, {2, 5, 6, 7, 8}, {2, 5, 6, 8, 9}, {2, 5, 6, 8, 10}, {2, 5, 7, 8, 
      9}, {2, 5, 7, 8, 10}, {2, 5, 8, 9, 10}, {3, 4, 5, 6, 8}, {3, 4, 5, 7, 
      8}, {3, 4, 5, 8, 9}, {3, 4, 5, 8, 10}, {3, 5, 6, 7, 8}, {3, 5, 6, 8, 
      9}, {3, 5, 6, 8, 10}, {3, 5, 7, 8, 9}, {3, 5, 7, 8, 10}, {3, 5, 8, 9, 
      10}, {4, 5, 6, 7, 8}, {4, 5, 6, 8, 9}, {4, 5, 6, 8, 10}, {4, 5, 7, 8, 
      9}, {4, 5, 7, 8, 10}, {4, 5, 8, 9, 10}, {5, 6, 7, 8, 9}, {5, 6, 7, 8, 
      10}, {5, 6, 8, 9, 10}, {5, 7, 8, 9, 10}, {1, 3, 4, 5, 6, 8}, {1, 3, 4, 
      5, 7, 8}, {1, 3, 4, 5, 8, 9}, {1, 3, 4, 5, 8, 10}, {1, 3, 5, 6, 7, 8}, {
      1, 3, 5, 6, 8, 9}, {1, 3, 5, 6, 8, 10}, {1, 3, 5, 7, 8, 9}, {1, 3, 5, 7,
       8, 10}, {1, 3, 5, 8, 9, 10}, {1, 4, 5, 6, 7, 8}, {1, 4, 5, 6, 8, 9}, {
      1, 4, 5, 6, 8, 10}, {1, 4, 5, 7, 8, 9}, {1, 4, 5, 7, 8, 10}, {1, 4, 5, 
      8, 9, 10}, {1, 5, 6, 7, 8, 9}, {1, 5, 6, 7, 8, 10}, {1, 5, 6, 8, 9, 
      10}, {1, 5, 7, 8, 9, 10}, {2, 3, 4, 5, 6, 8}, {2, 3, 4, 5, 7, 8}, {2, 3,
       4, 5, 8, 9}, {2, 3, 4, 5, 8, 10}, {2, 3, 5, 6, 7, 8}, {2, 3, 5, 6, 8, 
      9}, {2, 3, 5, 6, 8, 10}, {2, 3, 5, 7, 8, 9}, {2, 3, 5, 7, 8, 10}, {2, 3,
       5, 8, 9, 10}, {2, 4, 5, 6, 7, 8}, {2, 4, 5, 6, 8, 9}, {2, 4, 5, 6, 8, 
      10}, {2, 4, 5, 7, 8, 9}, {2, 4, 5, 7, 8, 10}, {2, 4, 5, 8, 9, 10}, {2, 
      5, 6, 7, 8, 9}, {2, 5, 6, 7, 8, 10}, {2, 5, 6, 8, 9, 10}, {2, 5, 7, 8, 
      9, 10}, {3, 4, 5, 6, 7, 8}, {3, 4, 5, 6, 8, 9}, {3, 4, 5, 6, 8, 10}, {3,
       4, 5, 7, 8, 9}, {3, 4, 5, 7, 8, 10}, {3, 4, 5, 8, 9, 10}, {3, 5, 6, 7, 
      8, 9}, {3, 5, 6, 7, 8, 10}, {3, 5, 6, 8, 9, 10}, {3, 5, 7, 8, 9, 10}, {
      4, 5, 6, 7, 8, 9}, {4, 5, 6, 7, 8, 10}, {4, 5, 6, 8, 9, 10}, {4, 5, 7, 
      8, 9, 10}, {5, 6, 7, 8, 9, 10}, {1, 3, 4, 5, 6, 7, 8}, {1, 3, 4, 5, 6, 
      8, 9}, {1, 3, 4, 5, 6, 8, 10}, {1, 3, 4, 5, 7, 8, 9}, {1, 3, 4, 5, 7, 8,
       10}, {1, 3, 4, 5, 8, 9, 10}, {1, 3, 5, 6, 7, 8, 9}, {1, 3, 5, 6, 7, 8, 
      10}, {1, 3, 5, 6, 8, 9, 10}, {1, 3, 5, 7, 8, 9, 10}, {1, 4, 5, 6, 7, 8, 
      9}, {1, 4, 5, 6, 7, 8, 10}, {1, 4, 5, 6, 8, 9, 10}, {1, 4, 5, 7, 8, 9, 
      10}, {1, 5, 6, 7, 8, 9, 10}, {2, 3, 4, 5, 6, 7, 8}, {2, 3, 4, 5, 6, 8, 
      9}, {2, 3, 4, 5, 6, 8, 10}, {2, 3, 4, 5, 7, 8, 9}, {2, 3, 4, 5, 7, 8, 
      10}, {2, 3, 4, 5, 8, 9, 10}, {2, 3, 5, 6, 7, 8, 9}, {2, 3, 5, 6, 7, 8, 
      10}, {2, 3, 5, 6, 8, 9, 10}, {2, 3, 5, 7, 8, 9, 10}, {2, 4, 5, 6, 7, 8, 
      9}, {2, 4, 5, 6, 7, 8, 10}, {2, 4, 5, 6, 8, 9, 10}, {2, 4, 5, 7, 8, 9, 
      10}, {2, 5, 6, 7, 8, 9, 10}, {3, 4, 5, 6, 7, 8, 9}, {3, 4, 5, 6, 7, 8, 
      10}, {3, 4, 5, 6, 8, 9, 10}, {3, 4, 5, 7, 8, 9, 10}, {3, 5, 6, 7, 8, 9, 
      10}, {4, 5, 6, 7, 8, 9, 10}, {1, 3, 4, 5, 6, 7, 8, 9}, {1, 3, 4, 5, 6, 
      7, 8, 10}, {1, 3, 4, 5, 6, 8, 9, 10}, {1, 3, 4, 5, 7, 8, 9, 10}, {1, 3, 
      5, 6, 7, 8, 9, 10}, {1, 4, 5, 6, 7, 8, 9, 10}, {2, 3, 4, 5, 6, 7, 8, 
      9}, {2, 3, 4, 5, 6, 7, 8, 10}, {2, 3, 4, 5, 6, 8, 9, 10}, {2, 3, 4, 5, 
      7, 8, 9, 10}, {2, 3, 5, 6, 7, 8, 9, 10}, {2, 4, 5, 6, 7, 8, 9, 10}, {3, 
      4, 5, 6, 7, 8, 9, 10}, {1, 3, 4, 5, 6, 7, 8, 9, 10}, {2, 3, 4, 5, 6, 7, 
      8, 9, 10}}, "SimplexWeights" -> CompressedData["
1:eJxTTMoPSmVkYGD4z8RAdXD4yxKb0LUaDi9Mln/xuKLhsIXBSF7xqYbDheyf
JfuRaOGMDWfeyWk6XPl7Y7WdmqbDfNE1gYIOCNrYxGaNpaOmw/r+uE8e7gh6
U/nhzVVpmg5z1bysJ6Yj6JP1Th/tMxG0h+2eRWxFCHriqodz3YqJp09YJh5W
aUbQ225JH7zai6CzdY8rsU/ATWdsvhgUNUXTYTN3skzASgTNMF9Du3idpoPJ
+eQTKjsQdKrF8pzN+xH0cbPJwuKHyKdnzWF1XHQYNz3Bi/2TxVHa0TETqhM5
T5BPS7tFxyedHjia7aKc4NJzA0evOeTBpnV+5NL6KcUGehdw09v6pr28cJt8
+vbiV2yKT8inrV3FZ9a8I5/e+UGkJ/cH+XRC/u3HVuxaQ5a+He90vNJo4GhT
JottG8zJp7eeWrgpwIJ8WmxbBG/UKE027dwReXyy/ShNLv0nqpF7Z8QoTS6d
e974aVTPKD1Kk0f/rt26UXjSKD1Kj9KjNP3pnOnT2iZuG6VH6VF6lB6lRxoN
ABx3XJ0=
     "], 
    "IntervalIndices" -> {{4, 11}, {6, 12}, {9, 13}, {3, 16}, {5, 17}, {7, 
     20}, {2, 23}, {8, 44}, {10, 47}}, 
    "Intervals" -> {{0., 12.338540930877917`}, {0., 12.41461910763833}, {0., 
     12.447518324712611`}, {0., 12.560415646108629`}, {0., 
     12.574696893919203`}, {0., 12.627393133496389`}, {0., 
     12.700154893503939`}, {0., 12.789751613710635`}, {0., 
     12.840722416599874`}}, "FiltrationRadii" -> CompressedData["
1:eJxFzU0ow3Ecx/E/ZUty0DwciCZp3588xDAMH2SWE0ox8jDPIWVKnpKUHDxs
aCKSp4RhzBalxNLmIZuiZCehcBByIJTdvC+v41uobMqrcuE4Lpz7z/yxIM1f
E+FRvPQhvxRhm4sOEj6IYK//atl3KqjVn70EEi5/r1dTQgkzPrpcLxBixFJd
QhphY7jkXZ5F2Go1G9qrCdOh2UmaGsJxd/pbah1Bnrw3x2smaFZup2UqgjWh
3BzSSzDd+B9cDRLqwy3BfDWh1nCRpxgjGDwqAnKWCdyMKEy1ThDbKqwhO4Qq
yVKDYZ9giRsV+B0SJqfc0ubMBHU2/11yRChWd5S7Wwn+sqJS5SmBdxHotXhO
0B3KecxGiKxURUXYnd8h7ZPdQXDMP/OE94SkTL+JzhfC7qv3QOMnoazJcZfI
Z3CUplvaohliXSUmfTyD8WR2K0fC4Gsq8FQ4zegvtIymMvwoejx2CxgabTEP
igGG7y7jpmCEoWFc26cxMfwBAlOTow==
     "], "Edges" -> {
      DirectedEdge[13, 14], 
      DirectedEdge[12, 14], 
      DirectedEdge[13, 16], 
      DirectedEdge[11, 16], 
      DirectedEdge[12, 17], 
      DirectedEdge[13, 18], 
      DirectedEdge[16, 18], 
      DirectedEdge[12, 21], 
      DirectedEdge[16, 21], 
      DirectedEdge[12, 23], 
      DirectedEdge[20, 24], 
      DirectedEdge[12, 24], 
      DirectedEdge[16, 24], 
      DirectedEdge[13, 26], 
      DirectedEdge[17, 26], 
      DirectedEdge[20, 28], 
      DirectedEdge[16, 28], 
      DirectedEdge[16, 30], 
      DirectedEdge[31, 32], 
      DirectedEdge[29, 32], 
      DirectedEdge[25, 32], 
      DirectedEdge[31, 33], 
      DirectedEdge[22, 33], 
      DirectedEdge[15, 33], 
      DirectedEdge[13, 36], 
      DirectedEdge[23, 36], 
      DirectedEdge[20, 38], 
      DirectedEdge[11, 38], 
      DirectedEdge[16, 40], 
      DirectedEdge[23, 40], 
      DirectedEdge[41, 42], 
      DirectedEdge[37, 42], 
      DirectedEdge[22, 42], 
      DirectedEdge[13, 44], 
      DirectedEdge[17, 45], 
      DirectedEdge[11, 45], 
      DirectedEdge[16, 45], 
      DirectedEdge[44, 48], 
      DirectedEdge[11, 48], 
      DirectedEdge[16, 48], 
      DirectedEdge[47, 50], 
      DirectedEdge[20, 50], 
      DirectedEdge[12, 50], 
      DirectedEdge[16, 50], 
      DirectedEdge[12, 52], 
      DirectedEdge[11, 52], 
      DirectedEdge[16, 52], 
      DirectedEdge[53, 54], 
      DirectedEdge[46, 54], 
      DirectedEdge[27, 54], 
      DirectedEdge[22, 54], 
      DirectedEdge[19, 54], 
      DirectedEdge[53, 55], 
      DirectedEdge[39, 55], 
      DirectedEdge[25, 55], 
      DirectedEdge[53, 56], 
      DirectedEdge[22, 56], 
      DirectedEdge[19, 56], 
      DirectedEdge[58, 59], 
      DirectedEdge[44, 60], 
      DirectedEdge[12, 60], 
      DirectedEdge[61, 62], 
      DirectedEdge[53, 62], 
      DirectedEdge[49, 62], 
      DirectedEdge[22, 62], 
      DirectedEdge[19, 62], 
      DirectedEdge[11, 64], 
      DirectedEdge[16, 64], 
      DirectedEdge[65, 66], 
      DirectedEdge[53, 66], 
      DirectedEdge[31, 66], 
      DirectedEdge[65, 67], 
      DirectedEdge[39, 67], 
      DirectedEdge[31, 67], 
      DirectedEdge[29, 67], 
      DirectedEdge[25, 67], 
      DirectedEdge[65, 68], 
      DirectedEdge[31, 68], 
      DirectedEdge[22, 68], 
      DirectedEdge[19, 68], 
      DirectedEdge[15, 68], 
      DirectedEdge[70, 72], 
      DirectedEdge[69, 72], 
      DirectedEdge[57, 72], 
      DirectedEdge[34, 72], 
      DirectedEdge[71, 73], 
      DirectedEdge[69, 73], 
      DirectedEdge[58, 73], 
      DirectedEdge[35, 73], 
      DirectedEdge[17, 76], 
      DirectedEdge[16, 76], 
      DirectedEdge[77, 78], 
      DirectedEdge[46, 78], 
      DirectedEdge[27, 78], 
      DirectedEdge[22, 78], 
      DirectedEdge[19, 78], 
      DirectedEdge[77, 79], 
      DirectedEdge[46, 79], 
      DirectedEdge[19, 79], 
      DirectedEdge[81, 82], 
      DirectedEdge[80, 82], 
      DirectedEdge[59, 82], 
      DirectedEdge[13, 84], 
      DirectedEdge[20, 84], 
      DirectedEdge[16, 84], 
      DirectedEdge[85, 86], 
      DirectedEdge[29, 86], 
      DirectedEdge[25, 86], 
      DirectedEdge[22, 86], 
      DirectedEdge[15, 86], 
      DirectedEdge[85, 87], 
      DirectedEdge[39, 87], 
      DirectedEdge[29, 87], 
      DirectedEdge[25, 87], 
      DirectedEdge[22, 87], 
      DirectedEdge[19, 87], 
      DirectedEdge[15, 87], 
      DirectedEdge[85, 88], 
      DirectedEdge[29, 88], 
      DirectedEdge[15, 88], 
      DirectedEdge[90, 92], 
      DirectedEdge[89, 92], 
      DirectedEdge[71, 92], 
      DirectedEdge[70, 92], 
      DirectedEdge[91, 93], 
      DirectedEdge[89, 93], 
      DirectedEdge[35, 93], 
      DirectedEdge[34, 93], 
      DirectedEdge[91, 94], 
      DirectedEdge[90, 94], 
      DirectedEdge[71, 94], 
      DirectedEdge[70, 94], 
      DirectedEdge[58, 94], 
      DirectedEdge[57, 94], 
      DirectedEdge[35, 94], 
      DirectedEdge[34, 94], 
      DirectedEdge[97, 98], 
      DirectedEdge[96, 98], 
      DirectedEdge[95, 98], 
      DirectedEdge[75, 98], 
      DirectedEdge[74, 98], 
      DirectedEdge[17, 100], 
      DirectedEdge[101, 102], 
      DirectedEdge[77, 102], 
      DirectedEdge[65, 102], 
      DirectedEdge[101, 103], 
      DirectedEdge[77, 103], 
      DirectedEdge[46, 103], 
      DirectedEdge[31, 103], 
      DirectedEdge[27, 103], 
      DirectedEdge[22, 103], 
      DirectedEdge[19, 103], 
      DirectedEdge[101, 104], 
      DirectedEdge[77, 104], 
      DirectedEdge[46, 104], 
      DirectedEdge[31, 104], 
      DirectedEdge[22, 104], 
      DirectedEdge[19, 104], 
      DirectedEdge[15, 104], 
      DirectedEdge[106, 108], 
      DirectedEdge[105, 108], 
      DirectedEdge[80, 108], 
      DirectedEdge[69, 108], 
      DirectedEdge[107, 109], 
      DirectedEdge[105, 109], 
      DirectedEdge[81, 109], 
      DirectedEdge[71, 109], 
      DirectedEdge[107, 110], 
      DirectedEdge[106, 110], 
      DirectedEdge[81, 110], 
      DirectedEdge[80, 110], 
      DirectedEdge[59, 110], 
      DirectedEdge[35, 110], 
      DirectedEdge[113, 114], 
      DirectedEdge[112, 114], 
      DirectedEdge[111, 114], 
      DirectedEdge[83, 114], 
      DirectedEdge[75, 114], 
      DirectedEdge[20, 116], 
      DirectedEdge[17, 116], 
      DirectedEdge[16, 116], 
      DirectedEdge[117, 118], 
      DirectedEdge[101, 118], 
      DirectedEdge[31, 118], 
      DirectedEdge[29, 118], 
      DirectedEdge[25, 118], 
      DirectedEdge[117, 119], 
      DirectedEdge[101, 119], 
      DirectedEdge[77, 119], 
      DirectedEdge[39, 119], 
      DirectedEdge[31, 119], 
      DirectedEdge[29, 119], 
      DirectedEdge[25, 119], 
      DirectedEdge[117, 120], 
      DirectedEdge[101, 120], 
      DirectedEdge[77, 120], 
      DirectedEdge[46, 120], 
      DirectedEdge[31, 120], 
      DirectedEdge[29, 120], 
      DirectedEdge[27, 120], 
      DirectedEdge[22, 120], 
      DirectedEdge[19, 120], 
      DirectedEdge[117, 121], 
      DirectedEdge[101, 121], 
      DirectedEdge[85, 121], 
      DirectedEdge[77, 121], 
      DirectedEdge[46, 121], 
      DirectedEdge[31, 121], 
      DirectedEdge[22, 121], 
      DirectedEdge[19, 121], 
      DirectedEdge[15, 121], 
      DirectedEdge[123, 126], 
      DirectedEdge[122, 126], 
      DirectedEdge[105, 126], 
      DirectedEdge[70, 126], 
      DirectedEdge[124, 127], 
      DirectedEdge[122, 127], 
      DirectedEdge[106, 127], 
      DirectedEdge[34, 127], 
      DirectedEdge[125, 128], 
      DirectedEdge[122, 128], 
      DirectedEdge[107, 128], 
      DirectedEdge[89, 128], 
      DirectedEdge[124, 129], 
      DirectedEdge[123, 129], 
      DirectedEdge[106, 129], 
      DirectedEdge[105, 129], 
      DirectedEdge[80, 129], 
      DirectedEdge[70, 129], 
      DirectedEdge[57, 129], 
      DirectedEdge[34, 129], 
      DirectedEdge[125, 130], 
      DirectedEdge[123, 130], 
      DirectedEdge[107, 130], 
      DirectedEdge[105, 130], 
      DirectedEdge[90, 130], 
      DirectedEdge[81, 130], 
      DirectedEdge[71, 130], 
      DirectedEdge[125, 131], 
      DirectedEdge[124, 131], 
      DirectedEdge[107, 131], 
      DirectedEdge[106, 131], 
      DirectedEdge[91, 131], 
      DirectedEdge[81, 131], 
      DirectedEdge[80, 131], 
      DirectedEdge[59, 131], 
      DirectedEdge[35, 131], 
      DirectedEdge[135, 138], 
      DirectedEdge[133, 138], 
      DirectedEdge[132, 138], 
      DirectedEdge[111, 138], 
      DirectedEdge[74, 138], 
      DirectedEdge[136, 139], 
      DirectedEdge[134, 139], 
      DirectedEdge[132, 139], 
      DirectedEdge[112, 139], 
      DirectedEdge[95, 139], 
      DirectedEdge[137, 140], 
      DirectedEdge[134, 140], 
      DirectedEdge[133, 140], 
      DirectedEdge[113, 140], 
      DirectedEdge[96, 140], 
      DirectedEdge[137, 141], 
      DirectedEdge[136, 141], 
      DirectedEdge[135, 141], 
      DirectedEdge[113, 141], 
      DirectedEdge[112, 141], 
      DirectedEdge[111, 141], 
      DirectedEdge[97, 141], 
      DirectedEdge[83, 141], 
      DirectedEdge[75, 141], 
      DirectedEdge[145, 146], 
      DirectedEdge[144, 146], 
      DirectedEdge[143, 146], 
      DirectedEdge[142, 146], 
      DirectedEdge[115, 146], 
      DirectedEdge[99, 146], 
      DirectedEdge[47, 148], 
      DirectedEdge[20, 148], 
      DirectedEdge[17, 148], 
      DirectedEdge[16, 148], 
      DirectedEdge[149, 150], 
      DirectedEdge[117, 150], 
      DirectedEdge[101, 150], 
      DirectedEdge[77, 150], 
      DirectedEdge[51, 150], 
      DirectedEdge[46, 150], 
      DirectedEdge[31, 150], 
      DirectedEdge[29, 150], 
      DirectedEdge[27, 150], 
      DirectedEdge[22, 150], 
      DirectedEdge[19, 150], 
      DirectedEdge[44, 152], 
      DirectedEdge[153, 154], 
      DirectedEdge[65, 154], 
      DirectedEdge[61, 154], 
      DirectedEdge[53, 154], 
      DirectedEdge[31, 154], 
      DirectedEdge[153, 155], 
      DirectedEdge[65, 155], 
      DirectedEdge[49, 155], 
      DirectedEdge[31, 155], 
      DirectedEdge[22, 155], 
      DirectedEdge[19, 155], 
      DirectedEdge[15, 155], 
      DirectedEdge[157, 158], 
      DirectedEdge[156, 158], 
      DirectedEdge[71, 158], 
      DirectedEdge[69, 158], 
      DirectedEdge[63, 158], 
      DirectedEdge[58, 158], 
      DirectedEdge[35, 158], 
      DirectedEdge[47, 160], 
      DirectedEdge[13, 160], 
      DirectedEdge[20, 160], 
      DirectedEdge[16, 160], 
      DirectedEdge[161, 162], 
      DirectedEdge[149, 162], 
      DirectedEdge[27, 162], 
      DirectedEdge[161, 163], 
      DirectedEdge[149, 163], 
      DirectedEdge[85, 163], 
      DirectedEdge[51, 163], 
      DirectedEdge[29, 163], 
      DirectedEdge[27, 163], 
      DirectedEdge[15, 163], 
      DirectedEdge[165, 166], 
      DirectedEdge[164, 166], 
      DirectedEdge[151, 166], 
      DirectedEdge[125, 166], 
      DirectedEdge[124, 166], 
      DirectedEdge[107, 166], 
      DirectedEdge[106, 166], 
      DirectedEdge[91, 166], 
      DirectedEdge[81, 166], 
      DirectedEdge[80, 166], 
      DirectedEdge[59, 166], 
      DirectedEdge[35, 166], 
      DirectedEdge[20, 168], 
      DirectedEdge[16, 168], 
      DirectedEdge[23, 168], 
      DirectedEdge[169, 170], 
      DirectedEdge[41, 170], 
      DirectedEdge[25, 170], 
      DirectedEdge[169, 171], 
      DirectedEdge[85, 171], 
      DirectedEdge[41, 171], 
      DirectedEdge[37, 171], 
      DirectedEdge[29, 171], 
      DirectedEdge[25, 171], 
      DirectedEdge[15, 171], 
      DirectedEdge[173, 174], 
      DirectedEdge[172, 174], 
      DirectedEdge[91, 174], 
      DirectedEdge[89, 174], 
      DirectedEdge[43, 174], 
      DirectedEdge[35, 174], 
      DirectedEdge[34, 174], 
      DirectedEdge[47, 176], 
      DirectedEdge[20, 176], 
      DirectedEdge[16, 176], 
      DirectedEdge[23, 176], 
      DirectedEdge[177, 178], 
      DirectedEdge[169, 178], 
      DirectedEdge[51, 178], 
      DirectedEdge[41, 178], 
      DirectedEdge[25, 178], 
      DirectedEdge[177, 179], 
      DirectedEdge[161, 179], 
      DirectedEdge[149, 179], 
      DirectedEdge[37, 179], 
      DirectedEdge[27, 179], 
      DirectedEdge[181, 182], 
      DirectedEdge[180, 182], 
      DirectedEdge[173, 182], 
      DirectedEdge[172, 182], 
      DirectedEdge[165, 182], 
      DirectedEdge[164, 182], 
      DirectedEdge[151, 182], 
      DirectedEdge[125, 182], 
      DirectedEdge[124, 182], 
      DirectedEdge[107, 182], 
      DirectedEdge[106, 182], 
      DirectedEdge[89, 182], 
      DirectedEdge[81, 182], 
      DirectedEdge[80, 182], 
      DirectedEdge[59, 182], 
      DirectedEdge[43, 182], 
      DirectedEdge[34, 182], 
      DirectedEdge[17, 184], 
      DirectedEdge[23, 184], 
      DirectedEdge[185, 186], 
      DirectedEdge[77, 186], 
      DirectedEdge[46, 186], 
      DirectedEdge[41, 186], 
      DirectedEdge[27, 186], 
      DirectedEdge[22, 186], 
      DirectedEdge[19, 186], 
      DirectedEdge[185, 187], 
      DirectedEdge[169, 187], 
      DirectedEdge[117, 187], 
      DirectedEdge[101, 187], 
      DirectedEdge[31, 187], 
      DirectedEdge[29, 187], 
      DirectedEdge[25, 187], 
      DirectedEdge[185, 188], 
      DirectedEdge[77, 188], 
      DirectedEdge[46, 188], 
      DirectedEdge[41, 188], 
      DirectedEdge[37, 188], 
      DirectedEdge[22, 188], 
      DirectedEdge[19, 188], 
      DirectedEdge[185, 189], 
      DirectedEdge[177, 189], 
      DirectedEdge[149, 189], 
      DirectedEdge[77, 189], 
      DirectedEdge[46, 189], 
      DirectedEdge[41, 189], 
      DirectedEdge[27, 189], 
      DirectedEdge[22, 189], 
      DirectedEdge[19, 189], 
      DirectedEdge[191, 193], 
      DirectedEdge[190, 193], 
      DirectedEdge[172, 193], 
      DirectedEdge[124, 193], 
      DirectedEdge[122, 193], 
      DirectedEdge[106, 193], 
      DirectedEdge[34, 193], 
      DirectedEdge[192, 194], 
      DirectedEdge[190, 194], 
      DirectedEdge[81, 194], 
      DirectedEdge[80, 194], 
      DirectedEdge[59, 194], 
      DirectedEdge[43, 194], 
      DirectedEdge[192, 196], 
      DirectedEdge[191, 196], 
      DirectedEdge[173, 196], 
      DirectedEdge[125, 196], 
      DirectedEdge[122, 196], 
      DirectedEdge[107, 196], 
      DirectedEdge[89, 196], 
      DirectedEdge[195, 197], 
      DirectedEdge[191, 197], 
      DirectedEdge[190, 197], 
      DirectedEdge[180, 197], 
      DirectedEdge[172, 197], 
      DirectedEdge[151, 197], 
      DirectedEdge[124, 197], 
      DirectedEdge[122, 197], 
      DirectedEdge[106, 197], 
      DirectedEdge[34, 197], 
      DirectedEdge[195, 198], 
      DirectedEdge[192, 198], 
      DirectedEdge[190, 198], 
      DirectedEdge[181, 198], 
      DirectedEdge[164, 198], 
      DirectedEdge[81, 198], 
      DirectedEdge[80, 198], 
      DirectedEdge[59, 198], 
      DirectedEdge[43, 198], 
      DirectedEdge[201, 202], 
      DirectedEdge[200, 202], 
      DirectedEdge[199, 202], 
      DirectedEdge[175, 202], 
      DirectedEdge[137, 202], 
      DirectedEdge[134, 202], 
      DirectedEdge[133, 202], 
      DirectedEdge[113, 202], 
      DirectedEdge[96, 202], 
      DirectedEdge[204, 205], 
      DirectedEdge[203, 205], 
      DirectedEdge[201, 205], 
      DirectedEdge[200, 205], 
      DirectedEdge[199, 205], 
      DirectedEdge[183, 205], 
      DirectedEdge[175, 205], 
      DirectedEdge[167, 205], 
      DirectedEdge[137, 205], 
      DirectedEdge[134, 205], 
      DirectedEdge[133, 205], 
      DirectedEdge[113, 205], 
      DirectedEdge[96, 205], 
      DirectedEdge[44, 208], 
      DirectedEdge[16, 208], 
      DirectedEdge[209, 210], 
      DirectedEdge[153, 210], 
      DirectedEdge[65, 210], 
      DirectedEdge[209, 211], 
      DirectedEdge[153, 211], 
      DirectedEdge[65, 211], 
      DirectedEdge[61, 211], 
      DirectedEdge[53, 211], 
      DirectedEdge[209, 212], 
      DirectedEdge[153, 212], 
      DirectedEdge[65, 212], 
      DirectedEdge[49, 212], 
      DirectedEdge[19, 212], 
      DirectedEdge[214, 216], 
      DirectedEdge[213, 216], 
      DirectedEdge[156, 216], 
      DirectedEdge[69, 216], 
      DirectedEdge[215, 217], 
      DirectedEdge[213, 217], 
      DirectedEdge[157, 217], 
      DirectedEdge[71, 217], 
      DirectedEdge[215, 218], 
      DirectedEdge[214, 218], 
      DirectedEdge[157, 218], 
      DirectedEdge[156, 218], 
      DirectedEdge[71, 218], 
      DirectedEdge[69, 218], 
      DirectedEdge[63, 218], 
      DirectedEdge[58, 218], 
      DirectedEdge[221, 222], 
      DirectedEdge[220, 222], 
      DirectedEdge[219, 222], 
      DirectedEdge[159, 222], 
      DirectedEdge[75, 222], 
      DirectedEdge[44, 224], 
      DirectedEdge[23, 224], 
      DirectedEdge[225, 226], 
      DirectedEdge[209, 226], 
      DirectedEdge[153, 226], 
      DirectedEdge[65, 226], 
      DirectedEdge[61, 226], 
      DirectedEdge[53, 226], 
      DirectedEdge[41, 226], 
      DirectedEdge[225, 227], 
      DirectedEdge[209, 227], 
      DirectedEdge[153, 227], 
      DirectedEdge[65, 227], 
      DirectedEdge[49, 227], 
      DirectedEdge[41, 227], 
      DirectedEdge[37, 227], 
      DirectedEdge[22, 227], 
      DirectedEdge[19, 227], 
      DirectedEdge[229, 230], 
      DirectedEdge[228, 230], 
      DirectedEdge[215, 230], 
      DirectedEdge[214, 230], 
      DirectedEdge[157, 230], 
      DirectedEdge[156, 230], 
      DirectedEdge[71, 230], 
      DirectedEdge[69, 230], 
      DirectedEdge[63, 230], 
      DirectedEdge[58, 230], 
      DirectedEdge[43, 230], 
      DirectedEdge[47, 232], 
      DirectedEdge[44, 232], 
      DirectedEdge[20, 232], 
      DirectedEdge[16, 232], 
      DirectedEdge[233, 234], 
      DirectedEdge[225, 234], 
      DirectedEdge[209, 234], 
      DirectedEdge[177, 234], 
      DirectedEdge[153, 234], 
      DirectedEdge[65, 234], 
      DirectedEdge[61, 234], 
      DirectedEdge[53, 234], 
      DirectedEdge[41, 234], 
      DirectedEdge[233, 235], 
      DirectedEdge[225, 235], 
      DirectedEdge[209, 235], 
      DirectedEdge[177, 235], 
      DirectedEdge[161, 235], 
      DirectedEdge[153, 235], 
      DirectedEdge[149, 235], 
      DirectedEdge[65, 235], 
      DirectedEdge[49, 235], 
      DirectedEdge[41, 235], 
      DirectedEdge[27, 235], 
      DirectedEdge[22, 235], 
      DirectedEdge[19, 235], 
      DirectedEdge[237, 238], 
      DirectedEdge[236, 238], 
      DirectedEdge[229, 238], 
      DirectedEdge[228, 238], 
      DirectedEdge[215, 238], 
      DirectedEdge[214, 238], 
      DirectedEdge[181, 238], 
      DirectedEdge[157, 238], 
      DirectedEdge[156, 238], 
      DirectedEdge[71, 238], 
      DirectedEdge[69, 238], 
      DirectedEdge[63, 238], 
      DirectedEdge[58, 238], 
      DirectedEdge[43, 238], 
      DirectedEdge[47, 240], 
      DirectedEdge[20, 240], 
      DirectedEdge[241, 242], 
      DirectedEdge[177, 242], 
      DirectedEdge[149, 242], 
      DirectedEdge[77, 242], 
      DirectedEdge[46, 242], 
      DirectedEdge[41, 242], 
      DirectedEdge[27, 242], 
      DirectedEdge[22, 242], 
      DirectedEdge[19, 242], 
      DirectedEdge[241, 243], 
      DirectedEdge[177, 243], 
      DirectedEdge[41, 243], 
      DirectedEdge[241, 244], 
      DirectedEdge[177, 244], 
      DirectedEdge[51, 244], 
      DirectedEdge[41, 244], 
      DirectedEdge[25, 244], 
      DirectedEdge[241, 245], 
      DirectedEdge[233, 245], 
      DirectedEdge[225, 245], 
      DirectedEdge[241, 246], 
      DirectedEdge[177, 246], 
      DirectedEdge[161, 246], 
      DirectedEdge[149, 246], 
      DirectedEdge[41, 246], 
      DirectedEdge[27, 246], 
      DirectedEdge[22, 246], 
      DirectedEdge[248, 252], 
      DirectedEdge[247, 252], 
      DirectedEdge[195, 252], 
      DirectedEdge[190, 252], 
      DirectedEdge[249, 253], 
      DirectedEdge[247, 253], 
      DirectedEdge[195, 253], 
      DirectedEdge[190, 253], 
      DirectedEdge[180, 253], 
      DirectedEdge[172, 253], 
      DirectedEdge[151, 253], 
      DirectedEdge[124, 253], 
      DirectedEdge[122, 253], 
      DirectedEdge[106, 253], 
      DirectedEdge[34, 253], 
      DirectedEdge[251, 254], 
      DirectedEdge[247, 254], 
      DirectedEdge[195, 254], 
      DirectedEdge[190, 254], 
      DirectedEdge[181, 254], 
      DirectedEdge[164, 254], 
      DirectedEdge[81, 254], 
      DirectedEdge[80, 254], 
      DirectedEdge[59, 254], 
      DirectedEdge[43, 254], 
      DirectedEdge[249, 255], 
      DirectedEdge[248, 255], 
      DirectedEdge[180, 255], 
      DirectedEdge[172, 255], 
      DirectedEdge[250, 256], 
      DirectedEdge[248, 256], 
      DirectedEdge[236, 256], 
      DirectedEdge[228, 256], 
      DirectedEdge[251, 257], 
      DirectedEdge[248, 257], 
      DirectedEdge[181, 257], 
      DirectedEdge[43, 257], 
      DirectedEdge[251, 258], 
      DirectedEdge[249, 258], 
      DirectedEdge[181, 258], 
      DirectedEdge[180, 258], 
      DirectedEdge[172, 258], 
      DirectedEdge[165, 258], 
      DirectedEdge[164, 258], 
      DirectedEdge[151, 258], 
      DirectedEdge[125, 258], 
      DirectedEdge[124, 258], 
      DirectedEdge[107, 258], 
      DirectedEdge[106, 258], 
      DirectedEdge[89, 258], 
      DirectedEdge[81, 258], 
      DirectedEdge[80, 258], 
      DirectedEdge[59, 258], 
      DirectedEdge[43, 258], 
      DirectedEdge[34, 258], 
      DirectedEdge[251, 259], 
      DirectedEdge[250, 259], 
      DirectedEdge[237, 259], 
      DirectedEdge[229, 259], 
      DirectedEdge[263, 268], 
      DirectedEdge[261, 268], 
      DirectedEdge[260, 268], 
      DirectedEdge[203, 268], 
      DirectedEdge[199, 268], 
      DirectedEdge[265, 269], 
      DirectedEdge[262, 269], 
      DirectedEdge[260, 269], 
      DirectedEdge[204, 269], 
      DirectedEdge[200, 269], 
      DirectedEdge[266, 270], 
      DirectedEdge[262, 270], 
      DirectedEdge[261, 270], 
      DirectedEdge[204, 270], 
      DirectedEdge[203, 270], 
      DirectedEdge[200, 270], 
      DirectedEdge[199, 270], 
      DirectedEdge[183, 270], 
      DirectedEdge[175, 270], 
      DirectedEdge[167, 270], 
      DirectedEdge[137, 270], 
      DirectedEdge[134, 270], 
      DirectedEdge[133, 270], 
      DirectedEdge[113, 270], 
      DirectedEdge[96, 270], 
      DirectedEdge[266, 271], 
      DirectedEdge[265, 271], 
      DirectedEdge[263, 271], 
      DirectedEdge[183, 271], 
      DirectedEdge[175, 271], 
      DirectedEdge[267, 272], 
      DirectedEdge[265, 272], 
      DirectedEdge[264, 272], 
      DirectedEdge[239, 272], 
      DirectedEdge[231, 272], 
      DirectedEdge[276, 278], 
      DirectedEdge[275, 278], 
      DirectedEdge[274, 278], 
      DirectedEdge[273, 278], 
      DirectedEdge[207, 278], 
      DirectedEdge[206, 278], 
      DirectedEdge[47, 280], 
      DirectedEdge[20, 280], 
      DirectedEdge[16, 280], 
      DirectedEdge[281, 282], 
      DirectedEdge[241, 282], 
      DirectedEdge[177, 282], 
      DirectedEdge[149, 282], 
      DirectedEdge[101, 282], 
      DirectedEdge[77, 282], 
      DirectedEdge[46, 282], 
      DirectedEdge[41, 282], 
      DirectedEdge[27, 282], 
      DirectedEdge[22, 282], 
      DirectedEdge[19, 282], 
      DirectedEdge[281, 283], 
      DirectedEdge[241, 283], 
      DirectedEdge[177, 283], 
      DirectedEdge[41, 283], 
      DirectedEdge[31, 283], 
      DirectedEdge[281, 284], 
      DirectedEdge[241, 284], 
      DirectedEdge[177, 284], 
      DirectedEdge[51, 284], 
      DirectedEdge[41, 284], 
      DirectedEdge[31, 284], 
      DirectedEdge[29, 284], 
      DirectedEdge[281, 285], 
      DirectedEdge[241, 285], 
      DirectedEdge[233, 285], 
      DirectedEdge[225, 285], 
      DirectedEdge[209, 285], 
      DirectedEdge[281, 286], 
      DirectedEdge[241, 286], 
      DirectedEdge[177, 286], 
      DirectedEdge[161, 286], 
      DirectedEdge[149, 286], 
      DirectedEdge[41, 286], 
      DirectedEdge[31, 286], 
      DirectedEdge[27, 286], 
      DirectedEdge[15, 286], 
      DirectedEdge[288, 292], 
      DirectedEdge[287, 292], 
      DirectedEdge[248, 292], 
      DirectedEdge[247, 292], 
      DirectedEdge[195, 292], 
      DirectedEdge[190, 292], 
      DirectedEdge[106, 292], 
      DirectedEdge[289, 293], 
      DirectedEdge[287, 293], 
      DirectedEdge[249, 293], 
      DirectedEdge[247, 293], 
      DirectedEdge[195, 293], 
      DirectedEdge[190, 293], 
      DirectedEdge[180, 293], 
      DirectedEdge[172, 293], 
      DirectedEdge[151, 293], 
      DirectedEdge[124, 293], 
      DirectedEdge[106, 293], 
      DirectedEdge[34, 293], 
      DirectedEdge[291, 294], 
      DirectedEdge[287, 294], 
      DirectedEdge[251, 294], 
      DirectedEdge[247, 294], 
      DirectedEdge[195, 294], 
      DirectedEdge[190, 294], 
      DirectedEdge[181, 294], 
      DirectedEdge[164, 294], 
      DirectedEdge[107, 294], 
      DirectedEdge[81, 294], 
      DirectedEdge[80, 294], 
      DirectedEdge[59, 294], 
      DirectedEdge[43, 294], 
      DirectedEdge[289, 295], 
      DirectedEdge[288, 295], 
      DirectedEdge[249, 295], 
      DirectedEdge[248, 295], 
      DirectedEdge[180, 295], 
      DirectedEdge[172, 295], 
      DirectedEdge[34, 295], 
      DirectedEdge[290, 296], 
      DirectedEdge[288, 296], 
      DirectedEdge[250, 296], 
      DirectedEdge[248, 296], 
      DirectedEdge[236, 296], 
      DirectedEdge[228, 296], 
      DirectedEdge[214, 296], 
      DirectedEdge[291, 297], 
      DirectedEdge[288, 297], 
      DirectedEdge[251, 297], 
      DirectedEdge[248, 297], 
      DirectedEdge[181, 297], 
      DirectedEdge[43, 297], 
      DirectedEdge[35, 297], 
      DirectedEdge[291, 298], 
      DirectedEdge[289, 298], 
      DirectedEdge[251, 298], 
      DirectedEdge[249, 298], 
      DirectedEdge[181, 298], 
      DirectedEdge[180, 298], 
      DirectedEdge[172, 298], 
      DirectedEdge[165, 298], 
      DirectedEdge[164, 298], 
      DirectedEdge[151, 298], 
      DirectedEdge[125, 298], 
      DirectedEdge[124, 298], 
      DirectedEdge[107, 298], 
      DirectedEdge[106, 298], 
      DirectedEdge[81, 298], 
      DirectedEdge[80, 298], 
      DirectedEdge[59, 298], 
      DirectedEdge[43, 298], 
      DirectedEdge[34, 298], 
      DirectedEdge[291, 299], 
      DirectedEdge[290, 299], 
      DirectedEdge[251, 299], 
      DirectedEdge[250, 299], 
      DirectedEdge[237, 299], 
      DirectedEdge[229, 299], 
      DirectedEdge[215, 299], 
      DirectedEdge[303, 308], 
      DirectedEdge[301, 308], 
      DirectedEdge[300, 308], 
      DirectedEdge[263, 308], 
      DirectedEdge[261, 308], 
      DirectedEdge[260, 308], 
      DirectedEdge[203, 308], 
      DirectedEdge[199, 308], 
      DirectedEdge[133, 308], 
      DirectedEdge[305, 309], 
      DirectedEdge[302, 309], 
      DirectedEdge[300, 309], 
      DirectedEdge[265, 309], 
      DirectedEdge[262, 309], 
      DirectedEdge[260, 309], 
      DirectedEdge[204, 309], 
      DirectedEdge[200, 309], 
      DirectedEdge[113, 309], 
      DirectedEdge[306, 310], 
      DirectedEdge[302, 310], 
      DirectedEdge[301, 310], 
      DirectedEdge[266, 310], 
      DirectedEdge[262, 310], 
      DirectedEdge[261, 310], 
      DirectedEdge[204, 310], 
      DirectedEdge[203, 310], 
      DirectedEdge[200, 310], 
      DirectedEdge[199, 310], 
      DirectedEdge[183, 310], 
      DirectedEdge[175, 310], 
      DirectedEdge[167, 310], 
      DirectedEdge[137, 310], 
      DirectedEdge[133, 310], 
      DirectedEdge[113, 310], 
      DirectedEdge[96, 310], 
      DirectedEdge[306, 311], 
      DirectedEdge[305, 311], 
      DirectedEdge[303, 311], 
      DirectedEdge[266, 311], 
      DirectedEdge[265, 311], 
      DirectedEdge[263, 311], 
      DirectedEdge[183, 311], 
      DirectedEdge[175, 311], 
      DirectedEdge[96, 311], 
      DirectedEdge[307, 312], 
      DirectedEdge[305, 312], 
      DirectedEdge[304, 312], 
      DirectedEdge[267, 312], 
      DirectedEdge[265, 312], 
      DirectedEdge[264, 312], 
      DirectedEdge[239, 312], 
      DirectedEdge[231, 312], 
      DirectedEdge[221, 312], 
      DirectedEdge[316, 318], 
      DirectedEdge[315, 318], 
      DirectedEdge[314, 318], 
      DirectedEdge[313, 318], 
      DirectedEdge[276, 318], 
      DirectedEdge[275, 318], 
      DirectedEdge[274, 318], 
      DirectedEdge[273, 318], 
      DirectedEdge[207, 318], 
      DirectedEdge[206, 318], 
      DirectedEdge[144, 318], 
      DirectedEdge[11, 320], 
      DirectedEdge[16, 320], 
      DirectedEdge[23, 320], 
      DirectedEdge[321, 322], 
      DirectedEdge[185, 322], 
      DirectedEdge[77, 322], 
      DirectedEdge[321, 323], 
      DirectedEdge[53, 323], 
      DirectedEdge[41, 323], 
      DirectedEdge[321, 324], 
      DirectedEdge[169, 324], 
      DirectedEdge[39, 324], 
      DirectedEdge[321, 325], 
      DirectedEdge[225, 325], 
      DirectedEdge[209, 325], 
      DirectedEdge[153, 325], 
      DirectedEdge[65, 325], 
      DirectedEdge[321, 326], 
      DirectedEdge[41, 326], 
      DirectedEdge[37, 326], 
      DirectedEdge[22, 326], 
      DirectedEdge[19, 326], 
      DirectedEdge[328, 332], 
      DirectedEdge[327, 332], 
      DirectedEdge[190, 332], 
      DirectedEdge[80, 332], 
      DirectedEdge[329, 333], 
      DirectedEdge[327, 333], 
      DirectedEdge[191, 333], 
      DirectedEdge[123, 333], 
      DirectedEdge[122, 333], 
      DirectedEdge[105, 333], 
      DirectedEdge[70, 333], 
      DirectedEdge[331, 334], 
      DirectedEdge[327, 334], 
      DirectedEdge[192, 334], 
      DirectedEdge[81, 334], 
      DirectedEdge[329, 335], 
      DirectedEdge[328, 335], 
      DirectedEdge[172, 335], 
      DirectedEdge[57, 335], 
      DirectedEdge[330, 336], 
      DirectedEdge[328, 336], 
      DirectedEdge[228, 336], 
      DirectedEdge[214, 336], 
      DirectedEdge[213, 336], 
      DirectedEdge[156, 336], 
      DirectedEdge[69, 336], 
      DirectedEdge[331, 337], 
      DirectedEdge[328, 337], 
      DirectedEdge[58, 337], 
      DirectedEdge[43, 337], 
      DirectedEdge[331, 338], 
      DirectedEdge[329, 338], 
      DirectedEdge[173, 338], 
      DirectedEdge[90, 338], 
      DirectedEdge[89, 338], 
      DirectedEdge[71, 338], 
      DirectedEdge[70, 338], 
      DirectedEdge[331, 339], 
      DirectedEdge[330, 339], 
      DirectedEdge[229, 339], 
      DirectedEdge[215, 339], 
      DirectedEdge[213, 339], 
      DirectedEdge[157, 339], 
      DirectedEdge[71, 339], 
      DirectedEdge[343, 348], 
      DirectedEdge[341, 348], 
      DirectedEdge[340, 348], 
      DirectedEdge[199, 348], 
      DirectedEdge[135, 348], 
      DirectedEdge[133, 348], 
      DirectedEdge[132, 348], 
      DirectedEdge[111, 348], 
      DirectedEdge[74, 348], 
      DirectedEdge[345, 349], 
      DirectedEdge[342, 349], 
      DirectedEdge[340, 349], 
      DirectedEdge[200, 349], 
      DirectedEdge[83, 349], 
      DirectedEdge[346, 350], 
      DirectedEdge[342, 350], 
      DirectedEdge[341, 350], 
      DirectedEdge[201, 350], 
      DirectedEdge[136, 350], 
      DirectedEdge[134, 350], 
      DirectedEdge[132, 350], 
      DirectedEdge[112, 350], 
      DirectedEdge[95, 350], 
      DirectedEdge[346, 351], 
      DirectedEdge[345, 351], 
      DirectedEdge[343, 351], 
      DirectedEdge[175, 351], 
      DirectedEdge[97, 351], 
      DirectedEdge[96, 351], 
      DirectedEdge[95, 351], 
      DirectedEdge[75, 351], 
      DirectedEdge[74, 351], 
      DirectedEdge[347, 352], 
      DirectedEdge[345, 352], 
      DirectedEdge[344, 352], 
      DirectedEdge[231, 352], 
      DirectedEdge[221, 352], 
      DirectedEdge[220, 352], 
      DirectedEdge[219, 352], 
      DirectedEdge[159, 352], 
      DirectedEdge[75, 352], 
      DirectedEdge[356, 358], 
      DirectedEdge[355, 358], 
      DirectedEdge[354, 358], 
      DirectedEdge[353, 358], 
      DirectedEdge[206, 358], 
      DirectedEdge[145, 358], 
      DirectedEdge[144, 358], 
      DirectedEdge[143, 358], 
      DirectedEdge[142, 358], 
      DirectedEdge[115, 358], 
      DirectedEdge[99, 358], 
      DirectedEdge[44, 360], 
      DirectedEdge[20, 360], 
      DirectedEdge[16, 360], 
      DirectedEdge[361, 362], 
      DirectedEdge[225, 362], 
      DirectedEdge[209, 362], 
      DirectedEdge[169, 362], 
      DirectedEdge[31, 362], 
      DirectedEdge[29, 362], 
      DirectedEdge[25, 362], 
      DirectedEdge[361, 363], 
      DirectedEdge[225, 363], 
      DirectedEdge[169, 363], 
      DirectedEdge[361, 364], 
      DirectedEdge[225, 364], 
      DirectedEdge[209, 364], 
      DirectedEdge[169, 364], 
      DirectedEdge[153, 364], 
      DirectedEdge[65, 364], 
      DirectedEdge[39, 364], 
      DirectedEdge[361, 365], 
      DirectedEdge[225, 365], 
      DirectedEdge[209, 365], 
      DirectedEdge[169, 365], 
      DirectedEdge[153, 365], 
      DirectedEdge[65, 365], 
      DirectedEdge[61, 365], 
      DirectedEdge[53, 365], 
      DirectedEdge[25, 365], 
      DirectedEdge[361, 366], 
      DirectedEdge[225, 366], 
      DirectedEdge[209, 366], 
      DirectedEdge[169, 366], 
      DirectedEdge[153, 366], 
      DirectedEdge[85, 366], 
      DirectedEdge[65, 366], 
      DirectedEdge[49, 366], 
      DirectedEdge[29, 366], 
      DirectedEdge[25, 366], 
      DirectedEdge[22, 366], 
      DirectedEdge[19, 366], 
      DirectedEdge[15, 366], 
      DirectedEdge[361, 367], 
      DirectedEdge[233, 367], 
      DirectedEdge[177, 367], 
      DirectedEdge[169, 367], 
      DirectedEdge[51, 367], 
      DirectedEdge[41, 367], 
      DirectedEdge[25, 367], 
      DirectedEdge[368, 373], 
      DirectedEdge[369, 374], 
      DirectedEdge[373, 374], 
      DirectedEdge[330, 374], 
      DirectedEdge[329, 374], 
      DirectedEdge[213, 374], 
      DirectedEdge[70, 374], 
      DirectedEdge[370, 375], 
      DirectedEdge[373, 375], 
      DirectedEdge[228, 375], 
      DirectedEdge[214, 375], 
      DirectedEdge[172, 375], 
      DirectedEdge[34, 375], 
      DirectedEdge[371, 376], 
      DirectedEdge[373, 376], 
      DirectedEdge[229, 376], 
      DirectedEdge[215, 376], 
      DirectedEdge[173, 376], 
      DirectedEdge[89, 376], 
      DirectedEdge[372, 377], 
      DirectedEdge[373, 377], 
      DirectedEdge[290, 377], 
      DirectedEdge[289, 377], 
      DirectedEdge[250, 377], 
      DirectedEdge[249, 377], 
      DirectedEdge[369, 378], 
      DirectedEdge[368, 378], 
      DirectedEdge[330, 378], 
      DirectedEdge[329, 378], 
      DirectedEdge[370, 379], 
      DirectedEdge[368, 379], 
      DirectedEdge[228, 379], 
      DirectedEdge[172, 379], 
      DirectedEdge[371, 380], 
      DirectedEdge[368, 380], 
      DirectedEdge[229, 380], 
      DirectedEdge[173, 380], 
      DirectedEdge[372, 381], 
      DirectedEdge[368, 381], 
      DirectedEdge[250, 381], 
      DirectedEdge[249, 381], 
      DirectedEdge[370, 382], 
      DirectedEdge[369, 382], 
      DirectedEdge[330, 382], 
      DirectedEdge[329, 382], 
      DirectedEdge[228, 382], 
      DirectedEdge[214, 382], 
      DirectedEdge[213, 382], 
      DirectedEdge[172, 382], 
      DirectedEdge[156, 382], 
      DirectedEdge[69, 382], 
      DirectedEdge[57, 382], 
      DirectedEdge[371, 383], 
      DirectedEdge[369, 383], 
      DirectedEdge[330, 383], 
      DirectedEdge[329, 383], 
      DirectedEdge[229, 383], 
      DirectedEdge[215, 383], 
      DirectedEdge[213, 383], 
      DirectedEdge[173, 383], 
      DirectedEdge[157, 383], 
      DirectedEdge[90, 383], 
      DirectedEdge[89, 383], 
      DirectedEdge[70, 383], 
      DirectedEdge[371, 384], 
      DirectedEdge[370, 384], 
      DirectedEdge[229, 384], 
      DirectedEdge[228, 384], 
      DirectedEdge[215, 384], 
      DirectedEdge[214, 384], 
      DirectedEdge[173, 384], 
      DirectedEdge[172, 384], 
      DirectedEdge[157, 384], 
      DirectedEdge[156, 384], 
      DirectedEdge[91, 384], 
      DirectedEdge[89, 384], 
      DirectedEdge[71, 384], 
      DirectedEdge[69, 384], 
      DirectedEdge[63, 384], 
      DirectedEdge[58, 384], 
      DirectedEdge[35, 384], 
      DirectedEdge[34, 384], 
      DirectedEdge[372, 385], 
      DirectedEdge[370, 385], 
      DirectedEdge[236, 385], 
      DirectedEdge[180, 385], 
      DirectedEdge[372, 386], 
      DirectedEdge[371, 386], 
      DirectedEdge[237, 386], 
      DirectedEdge[181, 386], 
      DirectedEdge[180, 386], 
      DirectedEdge[173, 386], 
      DirectedEdge[172, 386], 
      DirectedEdge[165, 386], 
      DirectedEdge[164, 386], 
      DirectedEdge[151, 386], 
      DirectedEdge[125, 386], 
      DirectedEdge[124, 386], 
      DirectedEdge[107, 386], 
      DirectedEdge[106, 386], 
      DirectedEdge[89, 386], 
      DirectedEdge[81, 386], 
      DirectedEdge[80, 386], 
      DirectedEdge[59, 386], 
      DirectedEdge[43, 386], 
      DirectedEdge[34, 386], 
      DirectedEdge[387, 396], 
      DirectedEdge[388, 397], 
      DirectedEdge[389, 398], 
      DirectedEdge[390, 399], 
      DirectedEdge[391, 400], 
      DirectedEdge[397, 400], 
      DirectedEdge[396, 400], 
      DirectedEdge[344, 400], 
      DirectedEdge[343, 400], 
      DirectedEdge[219, 400], 
      DirectedEdge[74, 400], 
      DirectedEdge[392, 401], 
      DirectedEdge[398, 401], 
      DirectedEdge[396, 401], 
      DirectedEdge[347, 401], 
      DirectedEdge[346, 401], 
      DirectedEdge[220, 401], 
      DirectedEdge[95, 401], 
      DirectedEdge[393, 402], 
      DirectedEdge[398, 402], 
      DirectedEdge[397, 402], 
      DirectedEdge[231, 402], 
      DirectedEdge[221, 402], 
      DirectedEdge[175, 402], 
      DirectedEdge[96, 402], 
      DirectedEdge[394, 403], 
      DirectedEdge[399, 403], 
      DirectedEdge[397, 403], 
      DirectedEdge[304, 403], 
      DirectedEdge[303, 403], 
      DirectedEdge[264, 403], 
      DirectedEdge[263, 403], 
      DirectedEdge[395, 404], 
      DirectedEdge[399, 404], 
      DirectedEdge[398, 404], 
      DirectedEdge[307, 404], 
      DirectedEdge[306, 404], 
      DirectedEdge[267, 404], 
      DirectedEdge[266, 404], 
      DirectedEdge[391, 405], 
      DirectedEdge[388, 405], 
      DirectedEdge[387, 405], 
      DirectedEdge[344, 405], 
      DirectedEdge[343, 405], 
      DirectedEdge[392, 406], 
      DirectedEdge[389, 406], 
      DirectedEdge[387, 406], 
      DirectedEdge[347, 406], 
      DirectedEdge[346, 406], 
      DirectedEdge[393, 407], 
      DirectedEdge[389, 407], 
      DirectedEdge[388, 407], 
      DirectedEdge[231, 407], 
      DirectedEdge[175, 407], 
      DirectedEdge[394, 408], 
      DirectedEdge[390, 408], 
      DirectedEdge[388, 408], 
      DirectedEdge[264, 408], 
      DirectedEdge[263, 408], 
      DirectedEdge[395, 409], 
      DirectedEdge[390, 409], 
      DirectedEdge[389, 409], 
      DirectedEdge[267, 409], 
      DirectedEdge[266, 409], 
      DirectedEdge[393, 410], 
      DirectedEdge[392, 410], 
      DirectedEdge[391, 410], 
      DirectedEdge[347, 410], 
      DirectedEdge[346, 410], 
      DirectedEdge[344, 410], 
      DirectedEdge[343, 410], 
      DirectedEdge[231, 410], 
      DirectedEdge[221, 410], 
      DirectedEdge[220, 410], 
      DirectedEdge[219, 410], 
      DirectedEdge[175, 410], 
      DirectedEdge[159, 410], 
      DirectedEdge[97, 410], 
      DirectedEdge[96, 410], 
      DirectedEdge[95, 410], 
      DirectedEdge[74, 410], 
      DirectedEdge[395, 411], 
      DirectedEdge[394, 411], 
      DirectedEdge[393, 411], 
      DirectedEdge[239, 411], 
      DirectedEdge[183, 411], 
      DirectedEdge[412, 419], 
      DirectedEdge[413, 420], 
      DirectedEdge[414, 421], 
      DirectedEdge[415, 422], 
      DirectedEdge[416, 423], 
      DirectedEdge[417, 424], 
      DirectedEdge[421, 424], 
      DirectedEdge[420, 424], 
      DirectedEdge[419, 424], 
      DirectedEdge[357, 424], 
      DirectedEdge[356, 424], 
      DirectedEdge[223, 424], 
      DirectedEdge[99, 424], 
      DirectedEdge[418, 425], 
      DirectedEdge[423, 425], 
      DirectedEdge[422, 425], 
      DirectedEdge[421, 425], 
      DirectedEdge[317, 425], 
      DirectedEdge[316, 425], 
      DirectedEdge[277, 425], 
      DirectedEdge[276, 425], 
      DirectedEdge[417, 426], 
      DirectedEdge[414, 426], 
      DirectedEdge[413, 426], 
      DirectedEdge[412, 426], 
      DirectedEdge[357, 426], 
      DirectedEdge[356, 426], 
      DirectedEdge[418, 427], 
      DirectedEdge[416, 427], 
      DirectedEdge[415, 427], 
      DirectedEdge[414, 427], 
      DirectedEdge[277, 427], 
      DirectedEdge[276, 427], 
      DirectedEdge[428, 430], 
      DirectedEdge[429, 431], 
      DirectedEdge[47, 432], 
      DirectedEdge[20, 432], 
      DirectedEdge[11, 432], 
      DirectedEdge[433, 434], 
      DirectedEdge[321, 434], 
      DirectedEdge[281, 434], 
      DirectedEdge[241, 434], 
      DirectedEdge[65, 434], 
      DirectedEdge[433, 435], 
      DirectedEdge[321, 435], 
      DirectedEdge[241, 435], 
      DirectedEdge[433, 436], 
      DirectedEdge[321, 436], 
      DirectedEdge[177, 436], 
      DirectedEdge[149, 436], 
      DirectedEdge[46, 436], 
      DirectedEdge[41, 436], 
      DirectedEdge[27, 436], 
      DirectedEdge[22, 436], 
      DirectedEdge[19, 436], 
      DirectedEdge[433, 437], 
      DirectedEdge[321, 437], 
      DirectedEdge[177, 437], 
      DirectedEdge[53, 437], 
      DirectedEdge[41, 437], 
      DirectedEdge[433, 438], 
      DirectedEdge[321, 438], 
      DirectedEdge[177, 438], 
      DirectedEdge[51, 438], 
      DirectedEdge[41, 438], 
      DirectedEdge[39, 438], 
      DirectedEdge[25, 438], 
      DirectedEdge[433, 439], 
      DirectedEdge[321, 439], 
      DirectedEdge[233, 439], 
      DirectedEdge[225, 439], 
      DirectedEdge[209, 439], 
      DirectedEdge[153, 439], 
      DirectedEdge[65, 439], 
      DirectedEdge[433, 440], 
      DirectedEdge[321, 440], 
      DirectedEdge[177, 440], 
      DirectedEdge[161, 440], 
      DirectedEdge[149, 440], 
      DirectedEdge[41, 440], 
      DirectedEdge[27, 440], 
      DirectedEdge[22, 440], 
      DirectedEdge[19, 440], 
      DirectedEdge[441, 447], 
      DirectedEdge[442, 448], 
      DirectedEdge[447, 448], 
      DirectedEdge[327, 448], 
      DirectedEdge[287, 448], 
      DirectedEdge[247, 448], 
      DirectedEdge[105, 448], 
      DirectedEdge[443, 449], 
      DirectedEdge[447, 449], 
      DirectedEdge[328, 449], 
      DirectedEdge[288, 449], 
      DirectedEdge[248, 449], 
      DirectedEdge[69, 449], 
      DirectedEdge[444, 450], 
      DirectedEdge[447, 450], 
      DirectedEdge[329, 450], 
      DirectedEdge[289, 450], 
      DirectedEdge[249, 450], 
      DirectedEdge[70, 450], 
      DirectedEdge[445, 451], 
      DirectedEdge[447, 451], 
      DirectedEdge[330, 451], 
      DirectedEdge[290, 451], 
      DirectedEdge[250, 451], 
      DirectedEdge[213, 451], 
      DirectedEdge[446, 452], 
      DirectedEdge[447, 452], 
      DirectedEdge[331, 452], 
      DirectedEdge[291, 452], 
      DirectedEdge[251, 452], 
      DirectedEdge[71, 452], 
      DirectedEdge[442, 453], 
      DirectedEdge[441, 453], 
      DirectedEdge[327, 453], 
      DirectedEdge[247, 453], 
      DirectedEdge[443, 454], 
      DirectedEdge[441, 454], 
      DirectedEdge[328, 454], 
      DirectedEdge[248, 454], 
      DirectedEdge[444, 455], 
      DirectedEdge[441, 455], 
      DirectedEdge[329, 455], 
      DirectedEdge[249, 455], 
      DirectedEdge[445, 456], 
      DirectedEdge[441, 456], 
      DirectedEdge[330, 456], 
      DirectedEdge[250, 456], 
      DirectedEdge[446, 457], 
      DirectedEdge[441, 457], 
      DirectedEdge[331, 457], 
      DirectedEdge[251, 457], 
      DirectedEdge[443, 458], 
      DirectedEdge[442, 458], 
      DirectedEdge[328, 458], 
      DirectedEdge[327, 458], 
      DirectedEdge[195, 458], 
      DirectedEdge[190, 458], 
      DirectedEdge[80, 458], 
      DirectedEdge[444, 459], 
      DirectedEdge[442, 459], 
      DirectedEdge[329, 459], 
      DirectedEdge[327, 459], 
      DirectedEdge[195, 459], 
      DirectedEdge[190, 459], 
      DirectedEdge[180, 459], 
      DirectedEdge[172, 459], 
      DirectedEdge[151, 459], 
      DirectedEdge[124, 459], 
      DirectedEdge[123, 459], 
      DirectedEdge[106, 459], 
      DirectedEdge[105, 459], 
      DirectedEdge[70, 459], 
      DirectedEdge[34, 459], 
      DirectedEdge[446, 460], 
      DirectedEdge[442, 460], 
      DirectedEdge[331, 460], 
      DirectedEdge[327, 460], 
      DirectedEdge[195, 460], 
      DirectedEdge[190, 460], 
      DirectedEdge[181, 460], 
      DirectedEdge[164, 460], 
      DirectedEdge[80, 460], 
      DirectedEdge[59, 460], 
      DirectedEdge[43, 460], 
      DirectedEdge[444, 461], 
      DirectedEdge[443, 461], 
      DirectedEdge[329, 461], 
      DirectedEdge[328, 461], 
      DirectedEdge[180, 461], 
      DirectedEdge[172, 461], 
      DirectedEdge[57, 461], 
      DirectedEdge[445, 462], 
      DirectedEdge[443, 462], 
      DirectedEdge[330, 462], 
      DirectedEdge[328, 462], 
      DirectedEdge[236, 462], 
      DirectedEdge[228, 462], 
      DirectedEdge[214, 462], 
      DirectedEdge[213, 462], 
      DirectedEdge[156, 462], 
      DirectedEdge[69, 462], 
      DirectedEdge[446, 463], 
      DirectedEdge[443, 463], 
      DirectedEdge[331, 463], 
      DirectedEdge[328, 463], 
      DirectedEdge[181, 463], 
      DirectedEdge[58, 463], 
      DirectedEdge[43, 463], 
      DirectedEdge[445, 464], 
      DirectedEdge[444, 464], 
      DirectedEdge[372, 464], 
      DirectedEdge[369, 464], 
      DirectedEdge[446, 465], 
      DirectedEdge[444, 465], 
      DirectedEdge[331, 465], 
      DirectedEdge[329, 465], 
      DirectedEdge[181, 465], 
      DirectedEdge[180, 465], 
      DirectedEdge[172, 465], 
      DirectedEdge[165, 465], 
      DirectedEdge[164, 465], 
      DirectedEdge[151, 465], 
      DirectedEdge[125, 465], 
      DirectedEdge[124, 465], 
      DirectedEdge[107, 465], 
      DirectedEdge[106, 465], 
      DirectedEdge[90, 465], 
      DirectedEdge[81, 465], 
      DirectedEdge[80, 465], 
      DirectedEdge[71, 465], 
      DirectedEdge[70, 465], 
      DirectedEdge[59, 465], 
      DirectedEdge[43, 465], 
      DirectedEdge[34, 465], 
      DirectedEdge[446, 466], 
      DirectedEdge[445, 466], 
      DirectedEdge[331, 466], 
      DirectedEdge[330, 466], 
      DirectedEdge[237, 466], 
      DirectedEdge[229, 466], 
      DirectedEdge[215, 466], 
      DirectedEdge[213, 466], 
      DirectedEdge[157, 466], 
      DirectedEdge[71, 466], 
      DirectedEdge[467, 481], 
      DirectedEdge[468, 482], 
      DirectedEdge[469, 483], 
      DirectedEdge[470, 484], 
      DirectedEdge[471, 485], 
      DirectedEdge[472, 486], 
      DirectedEdge[482, 486], 
      DirectedEdge[481, 486], 
      DirectedEdge[340, 486], 
      DirectedEdge[300, 486], 
      DirectedEdge[260, 486], 
      DirectedEdge[111, 486], 
      DirectedEdge[473, 487], 
      DirectedEdge[483, 487], 
      DirectedEdge[481, 487], 
      DirectedEdge[341, 487], 
      DirectedEdge[301, 487], 
      DirectedEdge[261, 487], 
      DirectedEdge[132, 487], 
      DirectedEdge[474, 488], 
      DirectedEdge[485, 488], 
      DirectedEdge[481, 488], 
      DirectedEdge[342, 488], 
      DirectedEdge[302, 488], 
      DirectedEdge[262, 488], 
      DirectedEdge[112, 488], 
      DirectedEdge[475, 489], 
      DirectedEdge[483, 489], 
      DirectedEdge[482, 489], 
      DirectedEdge[343, 489], 
      DirectedEdge[303, 489], 
      DirectedEdge[263, 489], 
      DirectedEdge[74, 489], 
      DirectedEdge[476, 490], 
      DirectedEdge[484, 490], 
      DirectedEdge[482, 490], 
      DirectedEdge[344, 490], 
      DirectedEdge[304, 490], 
      DirectedEdge[264, 490], 
      DirectedEdge[219, 490], 
      DirectedEdge[477, 491], 
      DirectedEdge[485, 491], 
      DirectedEdge[482, 491], 
      DirectedEdge[345, 491], 
      DirectedEdge[305, 491], 
      DirectedEdge[265, 491], 
      DirectedEdge[75, 491], 
      DirectedEdge[478, 492], 
      DirectedEdge[484, 492], 
      DirectedEdge[483, 492], 
      DirectedEdge[399, 492], 
      DirectedEdge[396, 492], 
      DirectedEdge[479, 493], 
      DirectedEdge[485, 493], 
      DirectedEdge[483, 493], 
      DirectedEdge[346, 493], 
      DirectedEdge[306, 493], 
      DirectedEdge[266, 493], 
      DirectedEdge[95, 493], 
      DirectedEdge[480, 494], 
      DirectedEdge[485, 494], 
      DirectedEdge[484, 494], 
      DirectedEdge[347, 494], 
      DirectedEdge[307, 494], 
      DirectedEdge[267, 494], 
      DirectedEdge[220, 494], 
      DirectedEdge[472, 495], 
      DirectedEdge[468, 495], 
      DirectedEdge[467, 495], 
      DirectedEdge[340, 495], 
      DirectedEdge[260, 495], 
      DirectedEdge[473, 496], 
      DirectedEdge[469, 496], 
      DirectedEdge[467, 496], 
      DirectedEdge[341, 496], 
      DirectedEdge[261, 496], 
      DirectedEdge[474, 497], 
      DirectedEdge[471, 497], 
      DirectedEdge[467, 497], 
      DirectedEdge[342, 497], 
      DirectedEdge[262, 497], 
      DirectedEdge[475, 498], 
      DirectedEdge[469, 498], 
      DirectedEdge[468, 498], 
      DirectedEdge[343, 498], 
      DirectedEdge[263, 498], 
      DirectedEdge[476, 499], 
      DirectedEdge[470, 499], 
      DirectedEdge[468, 499], 
      DirectedEdge[344, 499], 
      DirectedEdge[264, 499], 
      DirectedEdge[477, 500], 
      DirectedEdge[471, 500], 
      DirectedEdge[468, 500], 
      DirectedEdge[345, 500], 
      DirectedEdge[265, 500], 
      DirectedEdge[478, 501], 
      DirectedEdge[470, 501], 
      DirectedEdge[469, 501], 
      DirectedEdge[390, 501], 
      DirectedEdge[387, 501], 
      DirectedEdge[479, 502], 
      DirectedEdge[471, 502], 
      DirectedEdge[469, 502], 
      DirectedEdge[346, 502], 
      DirectedEdge[266, 502], 
      DirectedEdge[480, 503], 
      DirectedEdge[471, 503], 
      DirectedEdge[470, 503], 
      DirectedEdge[347, 503], 
      DirectedEdge[267, 503], 
      DirectedEdge[475, 504], 
      DirectedEdge[473, 504], 
      DirectedEdge[472, 504], 
      DirectedEdge[343, 504], 
      DirectedEdge[341, 504], 
      DirectedEdge[340, 504], 
      DirectedEdge[203, 504], 
      DirectedEdge[199, 504], 
      DirectedEdge[135, 504], 
      DirectedEdge[133, 504], 
      DirectedEdge[132, 504], 
      DirectedEdge[111, 504], 
      DirectedEdge[74, 504], 
      DirectedEdge[477, 505], 
      DirectedEdge[474, 505], 
      DirectedEdge[472, 505], 
      DirectedEdge[345, 505], 
      DirectedEdge[342, 505], 
      DirectedEdge[340, 505], 
      DirectedEdge[204, 505], 
      DirectedEdge[200, 505], 
      DirectedEdge[83, 505], 
      DirectedEdge[479, 506], 
      DirectedEdge[474, 506], 
      DirectedEdge[473, 506], 
      DirectedEdge[346, 506], 
      DirectedEdge[342, 506], 
      DirectedEdge[341, 506], 
      DirectedEdge[204, 506], 
      DirectedEdge[203, 506], 
      DirectedEdge[200, 506], 
      DirectedEdge[199, 506], 
      DirectedEdge[183, 506], 
      DirectedEdge[175, 506], 
      DirectedEdge[167, 506], 
      DirectedEdge[137, 506], 
      DirectedEdge[136, 506], 
      DirectedEdge[133, 506], 
      DirectedEdge[132, 506], 
      DirectedEdge[113, 506], 
      DirectedEdge[112, 506], 
      DirectedEdge[96, 506], 
      DirectedEdge[95, 506], 
      DirectedEdge[478, 507], 
      DirectedEdge[476, 507], 
      DirectedEdge[475, 507], 
      DirectedEdge[394, 507], 
      DirectedEdge[391, 507], 
      DirectedEdge[479, 508], 
      DirectedEdge[477, 508], 
      DirectedEdge[475, 508], 
      DirectedEdge[346, 508], 
      DirectedEdge[345, 508], 
      DirectedEdge[343, 508], 
      DirectedEdge[183, 508], 
      DirectedEdge[175, 508], 
      DirectedEdge[97, 508], 
      DirectedEdge[96, 508], 
      DirectedEdge[95, 508], 
      DirectedEdge[75, 508], 
      DirectedEdge[74, 508], 
      DirectedEdge[480, 509], 
      DirectedEdge[477, 509], 
      DirectedEdge[476, 509], 
      DirectedEdge[347, 509], 
      DirectedEdge[345, 509], 
      DirectedEdge[344, 509], 
      DirectedEdge[239, 509], 
      DirectedEdge[231, 509], 
      DirectedEdge[221, 509], 
      DirectedEdge[220, 509], 
      DirectedEdge[219, 509], 
      DirectedEdge[159, 509], 
      DirectedEdge[75, 509], 
      DirectedEdge[480, 510], 
      DirectedEdge[479, 510], 
      DirectedEdge[478, 510], 
      DirectedEdge[395, 510], 
      DirectedEdge[392, 510], 
      DirectedEdge[511, 527], 
      DirectedEdge[512, 528], 
      DirectedEdge[513, 529], 
      DirectedEdge[514, 530], 
      DirectedEdge[515, 531], 
      DirectedEdge[516, 532], 
      DirectedEdge[517, 533], 
      DirectedEdge[518, 534], 
      DirectedEdge[519, 535], 
      DirectedEdge[520, 536], 
      DirectedEdge[530, 536], 
      DirectedEdge[528, 536], 
      DirectedEdge[527, 536], 
      DirectedEdge[353, 536], 
      DirectedEdge[313, 536], 
      DirectedEdge[273, 536], 
      DirectedEdge[142, 536], 
      DirectedEdge[521, 537], 
      DirectedEdge[532, 537], 
      DirectedEdge[529, 537], 
      DirectedEdge[527, 537], 
      DirectedEdge[354, 537], 
      DirectedEdge[314, 537], 
      DirectedEdge[274, 537], 
      DirectedEdge[115, 537], 
      DirectedEdge[522, 538], 
      DirectedEdge[534, 538], 
      DirectedEdge[529, 538], 
      DirectedEdge[528, 538], 
      DirectedEdge[355, 538], 
      DirectedEdge[315, 538], 
      DirectedEdge[275, 538], 
      DirectedEdge[143, 538], 
      DirectedEdge[523, 539], 
      DirectedEdge[533, 539], 
      DirectedEdge[531, 539], 
      DirectedEdge[530, 539], 
      DirectedEdge[422, 539], 
      DirectedEdge[419, 539], 
      DirectedEdge[524, 540], 
      DirectedEdge[534, 540], 
      DirectedEdge[532, 540], 
      DirectedEdge[530, 540], 
      DirectedEdge[356, 540], 
      DirectedEdge[316, 540], 
      DirectedEdge[276, 540], 
      DirectedEdge[99, 540], 
      DirectedEdge[525, 541], 
      DirectedEdge[535, 541], 
      DirectedEdge[532, 541], 
      DirectedEdge[531, 541], 
      DirectedEdge[357, 541], 
      DirectedEdge[317, 541], 
      DirectedEdge[277, 541], 
      DirectedEdge[223, 541], 
      DirectedEdge[526, 542], 
      DirectedEdge[535, 542], 
      DirectedEdge[534, 542], 
      DirectedEdge[533, 542], 
      DirectedEdge[423, 542], 
      DirectedEdge[420, 542], 
      DirectedEdge[520, 543], 
      DirectedEdge[514, 543], 
      DirectedEdge[512, 543], 
      DirectedEdge[511, 543], 
      DirectedEdge[353, 543], 
      DirectedEdge[273, 543], 
      DirectedEdge[521, 544], 
      DirectedEdge[516, 544], 
      DirectedEdge[513, 544], 
      DirectedEdge[511, 544], 
      DirectedEdge[354, 544], 
      DirectedEdge[274, 544], 
      DirectedEdge[522, 545], 
      DirectedEdge[518, 545], 
      DirectedEdge[513, 545], 
      DirectedEdge[512, 545], 
      DirectedEdge[355, 545], 
      DirectedEdge[275, 545], 
      DirectedEdge[523, 546], 
      DirectedEdge[517, 546], 
      DirectedEdge[515, 546], 
      DirectedEdge[514, 546], 
      DirectedEdge[415, 546], 
      DirectedEdge[412, 546], 
      DirectedEdge[524, 547], 
      DirectedEdge[518, 547], 
      DirectedEdge[516, 547], 
      DirectedEdge[514, 547], 
      DirectedEdge[356, 547], 
      DirectedEdge[276, 547], 
      DirectedEdge[525, 548], 
      DirectedEdge[519, 548], 
      DirectedEdge[516, 548], 
      DirectedEdge[515, 548], 
      DirectedEdge[357, 548], 
      DirectedEdge[277, 548], 
      DirectedEdge[526, 549], 
      DirectedEdge[519, 549], 
      DirectedEdge[518, 549], 
      DirectedEdge[517, 549], 
      DirectedEdge[416, 549], 
      DirectedEdge[413, 549], 
      DirectedEdge[524, 550], 
      DirectedEdge[522, 550], 
      DirectedEdge[521, 550], 
      DirectedEdge[520, 550], 
      DirectedEdge[356, 550], 
      DirectedEdge[355, 550], 
      DirectedEdge[354, 550], 
      DirectedEdge[353, 550], 
      DirectedEdge[207, 550], 
      DirectedEdge[206, 550], 
      DirectedEdge[145, 550], 
      DirectedEdge[144, 550], 
      DirectedEdge[143, 550], 
      DirectedEdge[142, 550], 
      DirectedEdge[115, 550], 
      DirectedEdge[99, 550], 
      DirectedEdge[526, 551], 
      DirectedEdge[525, 551], 
      DirectedEdge[524, 551], 
      DirectedEdge[523, 551], 
      DirectedEdge[418, 551], 
      DirectedEdge[417, 551], 
      DirectedEdge[552, 561], 
      DirectedEdge[553, 562], 
      DirectedEdge[554, 563], 
      DirectedEdge[555, 564], 
      DirectedEdge[556, 565], 
      DirectedEdge[557, 566], 
      DirectedEdge[558, 567], 
      DirectedEdge[559, 568], 
      DirectedEdge[565, 568], 
      DirectedEdge[563, 568], 
      DirectedEdge[562, 568], 
      DirectedEdge[561, 568], 
      DirectedEdge[359, 568], 
      DirectedEdge[319, 568], 
      DirectedEdge[279, 568], 
      DirectedEdge[147, 568], 
      DirectedEdge[560, 569], 
      DirectedEdge[567, 569], 
      DirectedEdge[566, 569], 
      DirectedEdge[565, 569], 
      DirectedEdge[564, 569], 
      DirectedEdge[431, 569], 
      DirectedEdge[430, 569], 
      DirectedEdge[559, 570], 
      DirectedEdge[556, 570], 
      DirectedEdge[554, 570], 
      DirectedEdge[553, 570], 
      DirectedEdge[552, 570], 
      DirectedEdge[359, 570], 
      DirectedEdge[279, 570], 
      DirectedEdge[560, 571], 
      DirectedEdge[558, 571], 
      DirectedEdge[557, 571], 
      DirectedEdge[556, 571], 
      DirectedEdge[555, 571], 
      DirectedEdge[429, 571], 
      DirectedEdge[428, 571], 
      DirectedEdge[572, 574], 
      DirectedEdge[573, 575], 
      DirectedEdge[44, 576], 
      DirectedEdge[17, 576], 
      DirectedEdge[577, 578], 
      DirectedEdge[225, 578], 
      DirectedEdge[209, 578], 
      DirectedEdge[185, 578], 
      DirectedEdge[101, 578], 
      DirectedEdge[577, 579], 
      DirectedEdge[225, 579], 
      DirectedEdge[185, 579], 
      DirectedEdge[577, 580], 
      DirectedEdge[225, 580], 
      DirectedEdge[209, 580], 
      DirectedEdge[185, 580], 
      DirectedEdge[153, 580], 
      DirectedEdge[77, 580], 
      DirectedEdge[65, 580], 
      DirectedEdge[577, 581], 
      DirectedEdge[225, 581], 
      DirectedEdge[209, 581], 
      DirectedEdge[185, 581], 
      DirectedEdge[153, 581], 
      DirectedEdge[77, 581], 
      DirectedEdge[65, 581], 
      DirectedEdge[61, 581], 
      DirectedEdge[53, 581], 
      DirectedEdge[46, 581], 
      DirectedEdge[27, 581], 
      DirectedEdge[22, 581], 
      DirectedEdge[19, 581], 
      DirectedEdge[577, 582], 
      DirectedEdge[361, 582], 
      DirectedEdge[185, 582], 
      DirectedEdge[169, 582], 
      DirectedEdge[117, 582], 
      DirectedEdge[101, 582], 
      DirectedEdge[31, 582], 
      DirectedEdge[29, 582], 
      DirectedEdge[25, 582], 
      DirectedEdge[577, 583], 
      DirectedEdge[225, 583], 
      DirectedEdge[209, 583], 
      DirectedEdge[185, 583], 
      DirectedEdge[153, 583], 
      DirectedEdge[77, 583], 
      DirectedEdge[65, 583], 
      DirectedEdge[49, 583], 
      DirectedEdge[46, 583], 
      DirectedEdge[577, 584], 
      DirectedEdge[233, 584], 
      DirectedEdge[185, 584], 
      DirectedEdge[177, 584], 
      DirectedEdge[149, 584], 
      DirectedEdge[77, 584], 
      DirectedEdge[46, 584], 
      DirectedEdge[41, 584], 
      DirectedEdge[27, 584], 
      DirectedEdge[22, 584], 
      DirectedEdge[19, 584], 
      DirectedEdge[585, 591], 
      DirectedEdge[586, 592], 
      DirectedEdge[591, 592], 
      DirectedEdge[330, 592], 
      DirectedEdge[327, 592], 
      DirectedEdge[213, 592], 
      DirectedEdge[105, 592], 
      DirectedEdge[587, 593], 
      DirectedEdge[591, 593], 
      DirectedEdge[228, 593], 
      DirectedEdge[214, 593], 
      DirectedEdge[190, 593], 
      DirectedEdge[106, 593], 
      DirectedEdge[588, 594], 
      DirectedEdge[591, 594], 
      DirectedEdge[373, 594], 
      DirectedEdge[191, 594], 
      DirectedEdge[122, 594], 
      DirectedEdge[589, 595], 
      DirectedEdge[591, 595], 
      DirectedEdge[229, 595], 
      DirectedEdge[215, 595], 
      DirectedEdge[192, 595], 
      DirectedEdge[107, 595], 
      DirectedEdge[590, 596], 
      DirectedEdge[591, 596], 
      DirectedEdge[290, 596], 
      DirectedEdge[287, 596], 
      DirectedEdge[250, 596], 
      DirectedEdge[247, 596], 
      DirectedEdge[586, 597], 
      DirectedEdge[585, 597], 
      DirectedEdge[330, 597], 
      DirectedEdge[327, 597], 
      DirectedEdge[587, 598], 
      DirectedEdge[585, 598], 
      DirectedEdge[228, 598], 
      DirectedEdge[190, 598], 
      DirectedEdge[588, 599], 
      DirectedEdge[585, 599], 
      DirectedEdge[368, 599], 
      DirectedEdge[191, 599], 
      DirectedEdge[589, 600], 
      DirectedEdge[585, 600], 
      DirectedEdge[229, 600], 
      DirectedEdge[192, 600], 
      DirectedEdge[590, 601], 
      DirectedEdge[585, 601], 
      DirectedEdge[250, 601], 
      DirectedEdge[247, 601], 
      DirectedEdge[587, 602], 
      DirectedEdge[586, 602], 
      DirectedEdge[330, 602], 
      DirectedEdge[327, 602], 
      DirectedEdge[228, 602], 
      DirectedEdge[214, 602], 
      DirectedEdge[213, 602], 
      DirectedEdge[190, 602], 
      DirectedEdge[156, 602], 
      DirectedEdge[80, 602], 
      DirectedEdge[69, 602], 
      DirectedEdge[588, 603], 
      DirectedEdge[586, 603], 
      DirectedEdge[369, 603], 
      DirectedEdge[329, 603], 
      DirectedEdge[327, 603], 
      DirectedEdge[191, 603], 
      DirectedEdge[123, 603], 
      DirectedEdge[122, 603], 
      DirectedEdge[105, 603], 
      DirectedEdge[70, 603], 
      DirectedEdge[589, 604], 
      DirectedEdge[586, 604], 
      DirectedEdge[330, 604], 
      DirectedEdge[327, 604], 
      DirectedEdge[229, 604], 
      DirectedEdge[215, 604], 
      DirectedEdge[213, 604], 
      DirectedEdge[192, 604], 
      DirectedEdge[157, 604], 
      DirectedEdge[81, 604], 
      DirectedEdge[71, 604], 
      DirectedEdge[590, 605], 
      DirectedEdge[586, 605], 
      DirectedEdge[445, 605], 
      DirectedEdge[442, 605], 
      DirectedEdge[588, 606], 
      DirectedEdge[587, 606], 
      DirectedEdge[370, 606], 
      DirectedEdge[191, 606], 
      DirectedEdge[190, 606], 
      DirectedEdge[172, 606], 
      DirectedEdge[124, 606], 
      DirectedEdge[122, 606], 
      DirectedEdge[106, 606], 
      DirectedEdge[34, 606], 
      DirectedEdge[589, 607], 
      DirectedEdge[587, 607], 
      DirectedEdge[229, 607], 
      DirectedEdge[228, 607], 
      DirectedEdge[215, 607], 
      DirectedEdge[214, 607], 
      DirectedEdge[192, 607], 
      DirectedEdge[190, 607], 
      DirectedEdge[157, 607], 
      DirectedEdge[156, 607], 
      DirectedEdge[81, 607], 
      DirectedEdge[80, 607], 
      DirectedEdge[71, 607], 
      DirectedEdge[69, 607], 
      DirectedEdge[63, 607], 
      DirectedEdge[58, 607], 
      DirectedEdge[59, 607], 
      DirectedEdge[590, 608], 
      DirectedEdge[587, 608], 
      DirectedEdge[236, 608], 
      DirectedEdge[195, 608], 
      DirectedEdge[589, 609], 
      DirectedEdge[588, 609], 
      DirectedEdge[371, 609], 
      DirectedEdge[192, 609], 
      DirectedEdge[191, 609], 
      DirectedEdge[173, 609], 
      DirectedEdge[125, 609], 
      DirectedEdge[122, 609], 
      DirectedEdge[107, 609], 
      DirectedEdge[89, 609], 
      DirectedEdge[590, 610], 
      DirectedEdge[588, 610], 
      DirectedEdge[372, 610], 
      DirectedEdge[195, 610], 
      DirectedEdge[191, 610], 
      DirectedEdge[190, 610], 
      DirectedEdge[180, 610], 
      DirectedEdge[172, 610], 
      DirectedEdge[151, 610], 
      DirectedEdge[124, 610], 
      DirectedEdge[122, 610], 
      DirectedEdge[106, 610], 
      DirectedEdge[34, 610], 
      DirectedEdge[590, 611], 
      DirectedEdge[589, 611], 
      DirectedEdge[237, 611], 
      DirectedEdge[195, 611], 
      DirectedEdge[192, 611], 
      DirectedEdge[190, 611], 
      DirectedEdge[181, 611], 
      DirectedEdge[164, 611], 
      DirectedEdge[81, 611], 
      DirectedEdge[80, 611], 
      DirectedEdge[59, 611], 
      DirectedEdge[43, 611], 
      DirectedEdge[612, 627], 
      DirectedEdge[613, 628], 
      DirectedEdge[614, 629], 
      DirectedEdge[615, 630], 
      DirectedEdge[616, 631], 
      DirectedEdge[617, 632], 
      DirectedEdge[628, 632], 
      DirectedEdge[627, 632], 
      DirectedEdge[344, 632], 
      DirectedEdge[340, 632], 
      DirectedEdge[219, 632], 
      DirectedEdge[111, 632], 
      DirectedEdge[618, 633], 
      DirectedEdge[629, 633], 
      DirectedEdge[627, 633], 
      DirectedEdge[396, 633], 
      DirectedEdge[341, 633], 
      DirectedEdge[132, 633], 
      DirectedEdge[619, 634], 
      DirectedEdge[630, 634], 
      DirectedEdge[627, 634], 
      DirectedEdge[347, 634], 
      DirectedEdge[342, 634], 
      DirectedEdge[220, 634], 
      DirectedEdge[112, 634], 
      DirectedEdge[620, 635], 
      DirectedEdge[631, 635], 
      DirectedEdge[627, 635], 
      DirectedEdge[484, 635], 
      DirectedEdge[481, 635], 
      DirectedEdge[621, 636], 
      DirectedEdge[629, 636], 
      DirectedEdge[628, 636], 
      DirectedEdge[397, 636], 
      DirectedEdge[199, 636], 
      DirectedEdge[133, 636], 
      DirectedEdge[622, 637], 
      DirectedEdge[630, 637], 
      DirectedEdge[628, 637], 
      DirectedEdge[231, 637], 
      DirectedEdge[221, 637], 
      DirectedEdge[200, 637], 
      DirectedEdge[113, 637], 
      DirectedEdge[623, 638], 
      DirectedEdge[631, 638], 
      DirectedEdge[628, 638], 
      DirectedEdge[304, 638], 
      DirectedEdge[300, 638], 
      DirectedEdge[264, 638], 
      DirectedEdge[260, 638], 
      DirectedEdge[624, 639], 
      DirectedEdge[630, 639], 
      DirectedEdge[629, 639], 
      DirectedEdge[398, 639], 
      DirectedEdge[201, 639], 
      DirectedEdge[134, 639], 
      DirectedEdge[625, 640], 
      DirectedEdge[631, 640], 
      DirectedEdge[629, 640], 
      DirectedEdge[399, 640], 
      DirectedEdge[301, 640], 
      DirectedEdge[261, 640], 
      DirectedEdge[626, 641], 
      DirectedEdge[631, 641], 
      DirectedEdge[630, 641], 
      DirectedEdge[307, 641], 
      DirectedEdge[302, 641], 
      DirectedEdge[267, 641], 
      DirectedEdge[262, 641], 
      DirectedEdge[617, 642], 
      DirectedEdge[613, 642], 
      DirectedEdge[612, 642], 
      DirectedEdge[344, 642], 
      DirectedEdge[340, 642], 
      DirectedEdge[618, 643], 
      DirectedEdge[614, 643], 
      DirectedEdge[612, 643], 
      DirectedEdge[387, 643], 
      DirectedEdge[341, 643], 
      DirectedEdge[619, 644], 
      DirectedEdge[615, 644], 
      DirectedEdge[612, 644], 
      DirectedEdge[347, 644], 
      DirectedEdge[342, 644], 
      DirectedEdge[620, 645], 
      DirectedEdge[616, 645], 
      DirectedEdge[612, 645], 
      DirectedEdge[470, 645], 
      DirectedEdge[467, 645], 
      DirectedEdge[621, 646], 
      DirectedEdge[614, 646], 
      DirectedEdge[613, 646], 
      DirectedEdge[388, 646], 
      DirectedEdge[199, 646], 
      DirectedEdge[622, 647], 
      DirectedEdge[615, 647], 
      DirectedEdge[613, 647], 
      DirectedEdge[231, 647], 
      DirectedEdge[200, 647], 
      DirectedEdge[623, 648], 
      DirectedEdge[616, 648], 
      DirectedEdge[613, 648], 
      DirectedEdge[264, 648], 
      DirectedEdge[260, 648], 
      DirectedEdge[624, 649], 
      DirectedEdge[615, 649], 
      DirectedEdge[614, 649], 
      DirectedEdge[389, 649], 
      DirectedEdge[201, 649], 
      DirectedEdge[625, 650], 
      DirectedEdge[616, 650], 
      DirectedEdge[614, 650], 
      DirectedEdge[390, 650], 
      DirectedEdge[261, 650], 
      DirectedEdge[626, 651], 
      DirectedEdge[616, 651], 
      DirectedEdge[615, 651], 
      DirectedEdge[267, 651], 
      DirectedEdge[262, 651], 
      DirectedEdge[621, 652], 
      DirectedEdge[618, 652], 
      DirectedEdge[617, 652], 
      DirectedEdge[391, 652], 
      DirectedEdge[343, 652], 
      DirectedEdge[341, 652], 
      DirectedEdge[340, 652], 
      DirectedEdge[199, 652], 
      DirectedEdge[135, 652], 
      DirectedEdge[133, 652], 
      DirectedEdge[132, 652], 
      DirectedEdge[111, 652], 
      DirectedEdge[74, 652], 
      DirectedEdge[622, 653], 
      DirectedEdge[619, 653], 
      DirectedEdge[617, 653], 
      DirectedEdge[347, 653], 
      DirectedEdge[344, 653], 
      DirectedEdge[342, 653], 
      DirectedEdge[340, 653], 
      DirectedEdge[231, 653], 
      DirectedEdge[221, 653], 
      DirectedEdge[220, 653], 
      DirectedEdge[219, 653], 
      DirectedEdge[200, 653], 
      DirectedEdge[159, 653], 
      DirectedEdge[83, 653], 
      DirectedEdge[75, 653], 
      DirectedEdge[623, 654], 
      DirectedEdge[620, 654], 
      DirectedEdge[617, 654], 
      DirectedEdge[476, 654], 
      DirectedEdge[472, 654], 
      DirectedEdge[624, 655], 
      DirectedEdge[619, 655], 
      DirectedEdge[618, 655], 
      DirectedEdge[392, 655], 
      DirectedEdge[346, 655], 
      DirectedEdge[342, 655], 
      DirectedEdge[341, 655], 
      DirectedEdge[201, 655], 
      DirectedEdge[136, 655], 
      DirectedEdge[134, 655], 
      DirectedEdge[132, 655], 
      DirectedEdge[112, 655], 
      DirectedEdge[95, 655], 
      DirectedEdge[625, 656], 
      DirectedEdge[620, 656], 
      DirectedEdge[618, 656], 
      DirectedEdge[478, 656], 
      DirectedEdge[473, 656], 
      DirectedEdge[626, 657], 
      DirectedEdge[620, 657], 
      DirectedEdge[619, 657], 
      DirectedEdge[480, 657], 
      DirectedEdge[474, 657], 
      DirectedEdge[624, 658], 
      DirectedEdge[622, 658], 
      DirectedEdge[621, 658], 
      DirectedEdge[393, 658], 
      DirectedEdge[201, 658], 
      DirectedEdge[200, 658], 
      DirectedEdge[199, 658], 
      DirectedEdge[175, 658], 
      DirectedEdge[137, 658], 
      DirectedEdge[134, 658], 
      DirectedEdge[133, 658], 
      DirectedEdge[113, 658], 
      DirectedEdge[96, 658], 
      DirectedEdge[625, 659], 
      DirectedEdge[623, 659], 
      DirectedEdge[621, 659], 
      DirectedEdge[394, 659], 
      DirectedEdge[203, 659], 
      DirectedEdge[626, 660], 
      DirectedEdge[623, 660], 
      DirectedEdge[622, 660], 
      DirectedEdge[239, 660], 
      DirectedEdge[204, 660], 
      DirectedEdge[626, 661], 
      DirectedEdge[625, 661], 
      DirectedEdge[624, 661], 
      DirectedEdge[395, 661], 
      DirectedEdge[204, 661], 
      DirectedEdge[203, 661], 
      DirectedEdge[201, 661], 
      DirectedEdge[200, 661], 
      DirectedEdge[199, 661], 
      DirectedEdge[183, 661], 
      DirectedEdge[175, 661], 
      DirectedEdge[167, 661], 
      DirectedEdge[137, 661], 
      DirectedEdge[134, 661], 
      DirectedEdge[133, 661], 
      DirectedEdge[113, 661], 
      DirectedEdge[96, 661], 
      DirectedEdge[662, 682], 
      DirectedEdge[663, 683], 
      DirectedEdge[664, 684], 
      DirectedEdge[665, 685], 
      DirectedEdge[666, 686], 
      DirectedEdge[667, 687], 
      DirectedEdge[668, 688], 
      DirectedEdge[669, 689], 
      DirectedEdge[670, 690], 
      DirectedEdge[671, 691], 
      DirectedEdge[672, 692], 
      DirectedEdge[686, 692], 
      DirectedEdge[683, 692], 
      DirectedEdge[682, 692], 
      DirectedEdge[419, 692], 
      DirectedEdge[353, 692], 
      DirectedEdge[142, 692], 
      DirectedEdge[673, 693], 
      DirectedEdge[687, 693], 
      DirectedEdge[684, 693], 
      DirectedEdge[682, 693], 
      DirectedEdge[357, 693], 
      DirectedEdge[354, 693], 
      DirectedEdge[223, 693], 
      DirectedEdge[115, 693], 
      DirectedEdge[674, 694], 
      DirectedEdge[688, 694], 
      DirectedEdge[685, 694], 
      DirectedEdge[682, 694], 
      DirectedEdge[531, 694], 
      DirectedEdge[527, 694], 
      DirectedEdge[675, 695], 
      DirectedEdge[689, 695], 
      DirectedEdge[684, 695], 
      DirectedEdge[683, 695], 
      DirectedEdge[420, 695], 
      DirectedEdge[355, 695], 
      DirectedEdge[143, 695], 
      DirectedEdge[676, 696], 
      DirectedEdge[690, 696], 
      DirectedEdge[685, 696], 
      DirectedEdge[683, 696], 
      DirectedEdge[533, 696], 
      DirectedEdge[528, 696], 
      DirectedEdge[677, 697], 
      DirectedEdge[691, 697], 
      DirectedEdge[685, 697], 
      DirectedEdge[684, 697], 
      DirectedEdge[535, 697], 
      DirectedEdge[529, 697], 
      DirectedEdge[678, 698], 
      DirectedEdge[689, 698], 
      DirectedEdge[687, 698], 
      DirectedEdge[686, 698], 
      DirectedEdge[421, 698], 
      DirectedEdge[206, 698], 
      DirectedEdge[144, 698], 
      DirectedEdge[679, 699], 
      DirectedEdge[690, 699], 
      DirectedEdge[688, 699], 
      DirectedEdge[686, 699], 
      DirectedEdge[422, 699], 
      DirectedEdge[313, 699], 
      DirectedEdge[273, 699], 
      DirectedEdge[680, 700], 
      DirectedEdge[691, 700], 
      DirectedEdge[688, 700], 
      DirectedEdge[687, 700], 
      DirectedEdge[317, 700], 
      DirectedEdge[314, 700], 
      DirectedEdge[277, 700], 
      DirectedEdge[274, 700], 
      DirectedEdge[681, 701], 
      DirectedEdge[691, 701], 
      DirectedEdge[690, 701], 
      DirectedEdge[689, 701], 
      DirectedEdge[423, 701], 
      DirectedEdge[315, 701], 
      DirectedEdge[275, 701], 
      DirectedEdge[672, 702], 
      DirectedEdge[666, 702], 
      DirectedEdge[663, 702], 
      DirectedEdge[662, 702], 
      DirectedEdge[412, 702], 
      DirectedEdge[353, 702], 
      DirectedEdge[673, 703], 
      DirectedEdge[667, 703], 
      DirectedEdge[664, 703], 
      DirectedEdge[662, 703], 
      DirectedEdge[357, 703], 
      DirectedEdge[354, 703], 
      DirectedEdge[674, 704], 
      DirectedEdge[668, 704], 
      DirectedEdge[665, 704], 
      DirectedEdge[662, 704], 
      DirectedEdge[515, 704], 
      DirectedEdge[511, 704], 
      DirectedEdge[675, 705], 
      DirectedEdge[669, 705], 
      DirectedEdge[664, 705], 
      DirectedEdge[663, 705], 
      DirectedEdge[413, 705], 
      DirectedEdge[355, 705], 
      DirectedEdge[676, 706], 
      DirectedEdge[670, 706], 
      DirectedEdge[665, 706], 
      DirectedEdge[663, 706], 
      DirectedEdge[517, 706], 
      DirectedEdge[512, 706], 
      DirectedEdge[677, 707], 
      DirectedEdge[671, 707], 
      DirectedEdge[665, 707], 
      DirectedEdge[664, 707], 
      DirectedEdge[519, 707], 
      DirectedEdge[513, 707], 
      DirectedEdge[678, 708], 
      DirectedEdge[669, 708], 
      DirectedEdge[667, 708], 
      DirectedEdge[666, 708], 
      DirectedEdge[414, 708], 
      DirectedEdge[206, 708], 
      DirectedEdge[679, 709], 
      DirectedEdge[670, 709], 
      DirectedEdge[668, 709], 
      DirectedEdge[666, 709], 
      DirectedEdge[415, 709], 
      DirectedEdge[273, 709], 
      DirectedEdge[680, 710], 
      DirectedEdge[671, 710], 
      DirectedEdge[668, 710], 
      DirectedEdge[667, 710], 
      DirectedEdge[277, 710], 
      DirectedEdge[274, 710], 
      DirectedEdge[681, 711], 
      DirectedEdge[671, 711], 
      DirectedEdge[670, 711], 
      DirectedEdge[669, 711], 
      DirectedEdge[416, 711], 
      DirectedEdge[275, 711], 
      DirectedEdge[678, 712], 
      DirectedEdge[675, 712], 
      DirectedEdge[673, 712], 
      DirectedEdge[672, 712], 
      DirectedEdge[417, 712], 
      DirectedEdge[356, 712], 
      DirectedEdge[355, 712], 
      DirectedEdge[354, 712], 
      DirectedEdge[353, 712], 
      DirectedEdge[206, 712], 
      DirectedEdge[145, 712], 
      DirectedEdge[144, 712], 
      DirectedEdge[143, 712], 
      DirectedEdge[142, 712], 
      DirectedEdge[115, 712], 
      DirectedEdge[99, 712], 
      DirectedEdge[679, 713], 
      DirectedEdge[676, 713], 
      DirectedEdge[674, 713], 
      DirectedEdge[672, 713], 
      DirectedEdge[523, 713], 
      DirectedEdge[520, 713], 
      DirectedEdge[680, 714], 
      DirectedEdge[677, 714], 
      DirectedEdge[674, 714], 
      DirectedEdge[673, 714], 
      DirectedEdge[525, 714], 
      DirectedEdge[521, 714], 
      DirectedEdge[681, 715], 
      DirectedEdge[677, 715], 
      DirectedEdge[676, 715], 
      DirectedEdge[675, 715], 
      DirectedEdge[526, 715], 
      DirectedEdge[522, 715], 
      DirectedEdge[681, 716], 
      DirectedEdge[680, 716], 
      DirectedEdge[679, 716], 
      DirectedEdge[678, 716], 
      DirectedEdge[418, 716], 
      DirectedEdge[207, 716], 
      DirectedEdge[717, 732], 
      DirectedEdge[718, 733], 
      DirectedEdge[719, 734], 
      DirectedEdge[720, 735], 
      DirectedEdge[721, 736], 
      DirectedEdge[722, 737], 
      DirectedEdge[723, 738], 
      DirectedEdge[724, 739], 
      DirectedEdge[725, 740], 
      DirectedEdge[726, 741], 
      DirectedEdge[727, 742], 
      DirectedEdge[738, 742], 
      DirectedEdge[735, 742], 
      DirectedEdge[733, 742], 
      DirectedEdge[732, 742], 
      DirectedEdge[430, 742], 
      DirectedEdge[359, 742], 
      DirectedEdge[147, 742], 
      DirectedEdge[728, 743], 
      DirectedEdge[739, 743], 
      DirectedEdge[736, 743], 
      DirectedEdge[734, 743], 
      DirectedEdge[732, 743], 
      DirectedEdge[564, 743], 
      DirectedEdge[561, 743], 
      DirectedEdge[729, 744], 
      DirectedEdge[740, 744], 
      DirectedEdge[737, 744], 
      DirectedEdge[734, 744], 
      DirectedEdge[733, 744], 
      DirectedEdge[566, 744], 
      DirectedEdge[562, 744], 
      DirectedEdge[730, 745], 
      DirectedEdge[741, 745], 
      DirectedEdge[737, 745], 
      DirectedEdge[736, 745], 
      DirectedEdge[735, 745], 
      DirectedEdge[567, 745], 
      DirectedEdge[563, 745], 
      DirectedEdge[731, 746], 
      DirectedEdge[741, 746], 
      DirectedEdge[740, 746], 
      DirectedEdge[739, 746], 
      DirectedEdge[738, 746], 
      DirectedEdge[431, 746], 
      DirectedEdge[319, 746], 
      DirectedEdge[279, 746], 
      DirectedEdge[727, 747], 
      DirectedEdge[723, 747], 
      DirectedEdge[720, 747], 
      DirectedEdge[718, 747], 
      DirectedEdge[717, 747], 
      DirectedEdge[428, 747], 
      DirectedEdge[359, 747], 
      DirectedEdge[728, 748], 
      DirectedEdge[724, 748], 
      DirectedEdge[721, 748], 
      DirectedEdge[719, 748], 
      DirectedEdge[717, 748], 
      DirectedEdge[555, 748], 
      DirectedEdge[552, 748], 
      DirectedEdge[729, 749], 
      DirectedEdge[725, 749], 
      DirectedEdge[722, 749], 
      DirectedEdge[719, 749], 
      DirectedEdge[718, 749], 
      DirectedEdge[557, 749], 
      DirectedEdge[553, 749], 
      DirectedEdge[730, 750], 
      DirectedEdge[726, 750], 
      DirectedEdge[722, 750], 
      DirectedEdge[721, 750], 
      DirectedEdge[720, 750], 
      DirectedEdge[558, 750], 
      DirectedEdge[554, 750], 
      DirectedEdge[731, 751], 
      DirectedEdge[726, 751], 
      DirectedEdge[725, 751], 
      DirectedEdge[724, 751], 
      DirectedEdge[723, 751], 
      DirectedEdge[429, 751], 
      DirectedEdge[279, 751], 
      DirectedEdge[731, 752], 
      DirectedEdge[730, 752], 
      DirectedEdge[729, 752], 
      DirectedEdge[728, 752], 
      DirectedEdge[727, 752], 
      DirectedEdge[560, 752], 
      DirectedEdge[559, 752], 
      DirectedEdge[753, 759], 
      DirectedEdge[754, 760], 
      DirectedEdge[755, 761], 
      DirectedEdge[756, 762], 
      DirectedEdge[757, 763], 
      DirectedEdge[758, 764], 
      DirectedEdge[763, 764], 
      DirectedEdge[762, 764], 
      DirectedEdge[761, 764], 
      DirectedEdge[760, 764], 
      DirectedEdge[759, 764], 
      DirectedEdge[575, 764], 
      DirectedEdge[574, 764], 
      DirectedEdge[758, 765], 
      DirectedEdge[757, 765], 
      DirectedEdge[756, 765], 
      DirectedEdge[755, 765], 
      DirectedEdge[754, 765], 
      DirectedEdge[753, 765], 
      DirectedEdge[573, 765], 
      DirectedEdge[572, 765], 
      DirectedEdge[766, 767]}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.804492562090034*^9, 3.804492790555297*^9, 
  3.8230214732672195`*^9},
 CellID->3720168]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Options",
 "\[NonBreakingSpace]",
 Cell["(3)", "ExampleCount"],
 "\[NonBreakingSpace]"
}], "Subsection",
 TaggingRules->{},
 CellID->890561554],

Cell[CellGroupData[{

Cell[TextData[{
 "Distance",
 "\[NonBreakingSpace]",
 Cell["(2)", "ExampleCount"],
 "\[NonBreakingSpace]"
}], "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{{3.804492628471273*^9, 3.804492630494429*^9}, {
  3.80449282272925*^9, 3.804492830152156*^9}, {3.804492954357038*^9, 
  3.8044929557880087`*^9}},
 CellID->375358416],

Cell["The maximum distance used in computations can be specified:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8044925075778637`*^9, 3.804492523120275*^9}, {
  3.8044925901585293`*^9, 3.804492595861801*^9}, {3.804492759251581*^9, 
  3.804492761618194*^9}, {3.804492850841065*^9, 3.804492885822322*^9}, {
  3.8044929575559893`*^9, 3.804492969139514*^9}},
 CellID->178252614],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "3"}], "}"}]}], "]"}]}], ";"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.804492836929914*^9, 3.804492837423998*^9}, {
   3.8044928875345507`*^9, 3.804492896974312*^9}, 3.823021362833768*^9},
 CellLabel->"In[59]:=",
 CellID->898078306],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   TagBox[
    DynamicModuleBox[{Typeset`open = False}, 
     FrameBox[
      PaneSelectorBox[{False->GridBox[{
         {
          PaneBox[GridBox[{
             {
              StyleBox[
               StyleBox[
                AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                 BoxBaselineShift->-0.25,
                 BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                
                FontColor->RGBColor[
                 0.8745098039215686, 0.2784313725490196, 0.03137254901960784]],
               
               ShowStringCharacters->False,
               FontFamily->"Source Sans Pro Black",
               FontSize->0.6538461538461539 Inherited,
               FontWeight->"Heavy",
               PrivateFontOptions->{"OperatorSubstitution"->False}], 
              StyleBox[
               RowBox[{
                StyleBox["PersistentHomology", "ResourceFunctionLabel"], " "}],
               ShowAutoStyles->False,
               ShowStringCharacters->False,
               FontSize->Rational[12, 13] Inherited,
               FontColor->GrayLevel[0.1]]}
            },
            GridBoxSpacings->{"Columns" -> {{0.25}}}],
           Alignment->Left,
           BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
           BaselinePosition->Baseline,
           FrameMargins->{{3, 0}, {0, 0}}], 
          ItemBox[
           PaneBox[
            TogglerBox[Dynamic[Typeset`open], {True->
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "IconizeCloser"],
              ImageSizeCache->{11., {1., 10.}}], False->
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "IconizeOpener"],
              ImageSizeCache->{11., {1., 10.}}]},
             Appearance->None,
             BaselinePosition->Baseline,
             ContentPadding->False,
             FrameMargins->0],
            Alignment->Left,
            BaselinePosition->Baseline,
            FrameMargins->{{1, 1}, {0, 0}}],
           Frame->{{
              RGBColor[
              0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
               0.5], False}, {False, False}}]}
        },
        BaselinePosition->{1, 1},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
       GridBox[{
         {GridBox[{
            {
             PaneBox[GridBox[{
                {
                 StyleBox[
                  StyleBox[
                   AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                   
                   FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                  ShowStringCharacters->False,
                  FontFamily->"Source Sans Pro Black",
                  FontSize->0.6538461538461539 Inherited,
                  FontWeight->"Heavy",
                  PrivateFontOptions->{"OperatorSubstitution"->False}], 
                 StyleBox[
                  RowBox[{
                   StyleBox["PersistentHomology", "ResourceFunctionLabel"], 
                   " "}],
                  ShowAutoStyles->False,
                  ShowStringCharacters->False,
                  FontSize->Rational[12, 13] Inherited,
                  FontColor->GrayLevel[0.1]]}
               },
               GridBoxSpacings->{"Columns" -> {{0.25}}}],
              Alignment->Left,
              BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
              BaselinePosition->Baseline,
              FrameMargins->{{3, 0}, {0, 0}}], 
             ItemBox[
              PaneBox[
               TogglerBox[Dynamic[Typeset`open], {True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "IconizeCloser"]], False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "IconizeOpener"]]},
                Appearance->None,
                BaselinePosition->Baseline,
                ContentPadding->False,
                FrameMargins->0],
               Alignment->Left,
               BaselinePosition->Baseline,
               FrameMargins->{{1, 1}, {0, 0}}],
              Frame->{{
                 RGBColor[
                 0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                  0.5], False}, {False, False}}]}
           },
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
         {
          StyleBox[
           PaneBox[GridBox[{
              {
               RowBox[{
                TagBox["\<\"Version (latest): \"\>",
                 "IconizedLabel"], " ", 
                TagBox["\<\"1.0.1\"\>",
                 "IconizedItem"]}]},
              {
               TagBox[
                
                TemplateBox[{
                 "\"Documentation \[RightGuillemet]\"", 
                  "https://resources.wolframcloud.com/FunctionRepository/\
resources/PersistentHomology"},
                 "HyperlinkURL"],
                "IconizedItem"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            Alignment->Left,
            BaselinePosition->Baseline,
            FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
           FontFamily->"Roboto",
           FontSize->11]}
        },
        BaselinePosition->{1, 1},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
             GrayLevel[0.8]}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
       Typeset`open],
       BaselinePosition->Baseline,
       ImageSize->Automatic],
      Background->RGBColor[
       0.9686274509803922, 0.9764705882352941, 0.984313725490196],
      BaselinePosition->Baseline,
      DefaultBaseStyle->{},
      FrameMargins->{{0, 0}, {1, 0}},
      FrameStyle->RGBColor[
       0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
      RoundingRadius->4]],
    {"FunctionResourceBox", 
     RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
     "PersistentHomology"},
    TagBoxNote->"FunctionResourceBox"],
   ResourceFunction["PersistentHomology"],
   BoxID -> "PersistentHomology",
   Selectable->False], "[", 
  RowBox[{"data", ",", 
   RowBox[{"\"\<Distance\>\"", "\[Rule]", "0.75"}]}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.804492901704577*^9, 3.804492912621777*^9}, {
   3.80449297199837*^9, 3.804492974411725*^9}, {3.804493084380237*^9, 
   3.804493085904361*^9}, 3.823021364241985*^9},
 CellID->375620034],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PersistentHomologyObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             GraphicsComplexBox[CompressedData["
1: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
DD7UNnFU6mGhG2+T145RH+SY9ZrzutlY7vy4V2ngKex2UAy4ntEDQ02/GiX9
uKDJkxbtMe2FnIE50gkPudC2yslK4U8vuN6sNTtygQs/bOInhsL7oH7xMpH5
+7lwbMI9rWBHP9j/elIzto4Ll5b2/DvS2g+9zSapiqJcyHELv6J/bQB6/5yh
fejhwNU9a713TQzAq5uXer3SOCCd1ZT4e5IEwwV3F73RYsFbYtPio/vJMLLR
fO8MwblvmZvRMhMfMhyJ/r1/YTsT+vpG+7sayVDt3Z3WHckE0a8R/0rmUaA7
Oumf62UmxF97+LHnEAVWe4QHrlVlQqhcYuJcdwoo+ob4MzkMMFzx1E+lmAJP
OM5No4Lzu/PamhCp6m4ItV2u09LCgSGFhxdOa/XAj6p/Tv2CcyO6d17KS+yB
343jjjHHOSBRFJTLV+yFXRmsOQdlOHA6amCsMKYXjOuKzbkDbBg02+Jet7EP
ajPeVeQlsqEjeJP/18w+UFDZ9aXyPhuIPzddcNbrh/Xha36rG7Khdd7JEBkF
EnhTNTbtaWZACvvN+uBrJNAx116zIZYBpxTHLBbkCtrPDc7GPmLA4CbFZ+Zi
ZEg4K6XXZMaAV38W9+07LpgfvcezC3cwYNUq5eQ4Qf0YSm1IfyjHAG5Oj7nh
TzJYO778IT+DAVfutr2eEtQb29zf6xTx6FCrrrpJn9gHZZcC51i3cUBWN/n9
tiUDsENcpnOpHwcub7w5sn7XINSfJDzw0ufA/Tei9ReshuDYjxADBpcNexLt
Y1fvIkCLiXjhlSA20C6/qPKuIoCLYp+97hY2KPgFPl9tSARH20Huu3oWyJR1
/A6oJoJVGdO/zpIFJZe/kOXfMcDN/l5Y3xoKUHYVqm+QZoLCTHkbqTQyPHE+
mejkzQSKpTbtvRYZhtXvz20ZZcKPubvnlgvmRaPGMpgneE7RxhzWF01BHi35
rhNayoIfzPK0yUQinPb9Xum7jA3K3j3HC+SIQH/aRv9wnQ2h/PYHh3wIsEp/
nVdGUA/0nv31bsZrNuipMFratXvhwOfvn4P/sUBSnkn4zBXk/wWJK8Z3WPAq
b7H60vQ+yFu7TNWLwYR59EEDk8f98ETfb56vDRN4xuvERc0F+c0L2JxOZcD6
BvM/sXsGweRgaubOmwxwcNLzz9AYAn6/6eM7Y4J6keK/lWZHg8W+RI/npYLx
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
              "], {{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                Arrowheads[0.], {
                 ArrowBox[{1, 2}, 0.02254220222992223], 
                 ArrowBox[{1, 5}, 0.02254220222992223], 
                 ArrowBox[{1, 7}, 0.02254220222992223], 
                 ArrowBox[{1, 9}, 0.02254220222992223], 
                 ArrowBox[{1, 11}, 0.02254220222992223], 
                 ArrowBox[{1, 13}, 0.02254220222992223], 
                 ArrowBox[{1, 15}, 0.02254220222992223], 
                 ArrowBox[{1, 17}, 0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-2.1409496216940123`*^-16, -1.0434049156924905`}, 5}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {1.0704748108470062`*^-15, -0.9225412836753133}, 5}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.19317181243605622`, -1.0333779239158283`}, 7}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.1495108326247347, -0.7998123114976872}, 7}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.3696769958201283, -0.9542463251548349}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.24459071364353785`, -0.6313614109083246}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.5056775470872312, -0.8166972803055038}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.272398578269021, -0.43993880945047653`}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.582805838183662, -0.6393075500603161}, 13}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.229178820294798, -0.251397190160288}, 13}], 
                  0.02254220222992223], 
                 ArrowBox[
                  BezierCurveBox[{
                   2, {-0.590645266014236, -0.4460346004393019}, 15}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.12076850752425144`, -0.09120014346806327}, 15}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {-0.04103500681170743, -0.01167546606958506}, 4}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.5674671696890601, 0.16145833033997112`}, 4}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.15069014333422975`, 0.013963498134084052`}, 6}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.7369836857302795, 0.06829159554065786}, 6}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.33873038367193714`, -0.031387992444006356`}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.8613974228519735, -0.07982022606495483}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.49768983777687453`, -0.14160496769998895`}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.9239056164555438, -0.26287381225308243`}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.6061001505474233, -0.3018020143922123}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.9160661886249679, -0.45614676187410347`}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.6493199085216432, -0.4903436336824059}, 14}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.8389378975285393, -0.633536492119288}, 14}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.6215120438961692, -0.6817662351402451}, 16}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.7029373462614268, -0.7710855369686257}, 16}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.19172515014593514`, 1.0256389642036672`}, 6}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.16951651604121815`, 0.9068332652006886}, 6}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.37976539048364444`, 0.9802874736255784}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.2939302531629152, 0.7587214435950802}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.5387248445885809, 0.8700704983695936}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.35643844676648223`, 0.5756678574069446}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.6471351573591255, 0.7098734516773724}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.34859901893590606`, 0.3823949077859304}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.6903549153333459, 0.5213318323871787}, 14}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.27147072783947207`, 0.20500517754074105`}, 14}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.3769213302526145, -0.9729461079072422}, 7}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.33326035044130586`, -0.8602441275062771}, 7}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.5534265136367049, -0.8938145091462413}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.4283402314601095, -0.6917932269169124}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.6894270649037971, -0.7562654642969203}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.4561480960855884, -0.500370625459065}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.7665553560002341, -0.5788757340517223}, 13}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.41292833811137236`, -0.31182900616887055`}, 13}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.5492819065248636, 0.887120738826274}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.4856554033088557, 0.7843604077987405}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.7082413606297987, 0.7769037635702826}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.5481635969124143, 0.6013068216106137}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.8166516734003458, 0.616706716878059}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.5403241690818401, 0.4080338719895959}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   7, {-0.7029373462614349, -0.7710855369686219}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   7, {-0.6215120438961611, -0.6817662351402489}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   7, {-0.8389378975285295, -0.6335364921192947}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   7, {-0.6493199085216452, -0.4903436336824001}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   8, {0.83265509775149, 0.6287919419646689}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   8, {0.7362038372501287, 0.5559553310325218}, 10}], 
                  0.02254220222992223]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                DiskBox[1, 0.02254220222992223], 
                DiskBox[2, 0.02254220222992223], 
                DiskBox[3, 0.02254220222992223], 
                DiskBox[4, 0.02254220222992223], 
                DiskBox[5, 0.02254220222992223], 
                DiskBox[6, 0.02254220222992223], 
                DiskBox[7, 0.02254220222992223], 
                DiskBox[8, 0.02254220222992223], 
                DiskBox[9, 0.02254220222992223], 
                DiskBox[10, 0.02254220222992223], 
                DiskBox[11, 0.02254220222992223], 
                DiskBox[12, 0.02254220222992223], 
                DiskBox[13, 0.02254220222992223], 
                DiskBox[14, 0.02254220222992223], 
                DiskBox[15, 0.02254220222992223], 
                DiskBox[16, 0.02254220222992223], 
                DiskBox[17, 0.02254220222992223]}}], {
             Background -> GrayLevel[0, 0], FormatType -> TraditionalForm, 
              FrameTicks -> None, ImageSize -> 32}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  StyleBox["\"Points: \"", 
                   RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                  InterpretationBox["\"\\!\\(\\*RowBox[{\\\"10\\\"}]\\)\"", 
                   StringForm["``", 10], Editable -> False]}, "RowDefault"], 
                "SummaryItem"]}, {
               TagBox[
                TemplateBox[{
                  StyleBox["\"Dimensions: \"", 
                   RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                  InterpretationBox["\"\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\"", 
                   StringForm["``", 3], Editable -> False]}, "RowDefault"], 
                "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             GraphicsComplexBox[CompressedData["
1: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
DD7UNnFU6mGhG2+T145RH+SY9ZrzutlY7vy4V2ngKex2UAy4ntEDQ02/GiX9
uKDJkxbtMe2FnIE50gkPudC2yslK4U8vuN6sNTtygQs/bOInhsL7oH7xMpH5
+7lwbMI9rWBHP9j/elIzto4Ll5b2/DvS2g+9zSapiqJcyHELv6J/bQB6/5yh
fejhwNU9a713TQzAq5uXer3SOCCd1ZT4e5IEwwV3F73RYsFbYtPio/vJMLLR
fO8MwblvmZvRMhMfMhyJ/r1/YTsT+vpG+7sayVDt3Z3WHckE0a8R/0rmUaA7
Oumf62UmxF97+LHnEAVWe4QHrlVlQqhcYuJcdwoo+ob4MzkMMFzx1E+lmAJP
OM5No4Lzu/PamhCp6m4ItV2u09LCgSGFhxdOa/XAj6p/Tv2CcyO6d17KS+yB
343jjjHHOSBRFJTLV+yFXRmsOQdlOHA6amCsMKYXjOuKzbkDbBg02+Jet7EP
ajPeVeQlsqEjeJP/18w+UFDZ9aXyPhuIPzddcNbrh/Xha36rG7Khdd7JEBkF
EnhTNTbtaWZACvvN+uBrJNAx116zIZYBpxTHLBbkCtrPDc7GPmLA4CbFZ+Zi
ZEg4K6XXZMaAV38W9+07LpgfvcezC3cwYNUq5eQ4Qf0YSm1IfyjHAG5Oj7nh
TzJYO778IT+DAVfutr2eEtQb29zf6xTx6FCrrrpJn9gHZZcC51i3cUBWN/n9
tiUDsENcpnOpHwcub7w5sn7XINSfJDzw0ufA/Tei9ReshuDYjxADBpcNexLt
Y1fvIkCLiXjhlSA20C6/qPKuIoCLYp+97hY2KPgFPl9tSARH20Huu3oWyJR1
/A6oJoJVGdO/zpIFJZe/kOXfMcDN/l5Y3xoKUHYVqm+QZoLCTHkbqTQyPHE+
mejkzQSKpTbtvRYZhtXvz20ZZcKPubvnlgvmRaPGMpgneE7RxhzWF01BHi35
rhNayoIfzPK0yUQinPb9Xum7jA3K3j3HC+SIQH/aRv9wnQ2h/PYHh3wIsEp/
nVdGUA/0nv31bsZrNuipMFratXvhwOfvn4P/sUBSnkn4zBXk/wWJK8Z3WPAq
b7H60vQ+yFu7TNWLwYR59EEDk8f98ETfb56vDRN4xuvERc0F+c0L2JxOZcD6
BvM/sXsGweRgaubOmwxwcNLzz9AYAn6/6eM7Y4J6keK/lWZHg8W+RI/npYLx
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
              "], {{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                Arrowheads[0.], {
                 ArrowBox[{1, 2}, 0.02254220222992223], 
                 ArrowBox[{1, 5}, 0.02254220222992223], 
                 ArrowBox[{1, 7}, 0.02254220222992223], 
                 ArrowBox[{1, 9}, 0.02254220222992223], 
                 ArrowBox[{1, 11}, 0.02254220222992223], 
                 ArrowBox[{1, 13}, 0.02254220222992223], 
                 ArrowBox[{1, 15}, 0.02254220222992223], 
                 ArrowBox[{1, 17}, 0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-2.1409496216940123`*^-16, -1.0434049156924905`}, 5}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {1.0704748108470062`*^-15, -0.9225412836753133}, 5}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.19317181243605622`, -1.0333779239158283`}, 7}], 
                  0.02254220222992223], 
                 ArrowBox[
                  BezierCurveBox[{
                   2, {-0.1495108326247347, -0.7998123114976872}, 7}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.3696769958201283, -0.9542463251548349}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.24459071364353785`, -0.6313614109083246}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.5056775470872312, -0.8166972803055038}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.272398578269021, -0.43993880945047653`}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.582805838183662, -0.6393075500603161}, 13}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.229178820294798, -0.251397190160288}, 13}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.590645266014236, -0.4460346004393019}, 15}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   2, {-0.12076850752425144`, -0.09120014346806327}, 15}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {-0.04103500681170743, -0.01167546606958506}, 4}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.5674671696890601, 0.16145833033997112`}, 4}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.15069014333422975`, 0.013963498134084052`}, 6}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.7369836857302795, 0.06829159554065786}, 6}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.33873038367193714`, -0.031387992444006356`}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.8613974228519735, -0.07982022606495483}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.49768983777687453`, -0.14160496769998895`}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.9239056164555438, -0.26287381225308243`}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.6061001505474233, -0.3018020143922123}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.9160661886249679, -0.45614676187410347`}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.6493199085216432, -0.4903436336824059}, 14}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.8389378975285393, -0.633536492119288}, 14}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.6215120438961692, -0.6817662351402451}, 16}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   3, {0.7029373462614268, -0.7710855369686257}, 16}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.19172515014593514`, 1.0256389642036672`}, 6}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.16951651604121815`, 0.9068332652006886}, 6}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.37976539048364444`, 0.9802874736255784}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.2939302531629152, 0.7587214435950802}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.5387248445885809, 0.8700704983695936}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.35643844676648223`, 0.5756678574069446}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.6471351573591255, 0.7098734516773724}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.34859901893590606`, 0.3823949077859304}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.6903549153333459, 0.5213318323871787}, 14}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   4, {0.27147072783947207`, 0.20500517754074105`}, 14}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.3769213302526145, -0.9729461079072422}, 7}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.33326035044130586`, -0.8602441275062771}, 7}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.5534265136367049, -0.8938145091462413}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.4283402314601095, -0.6917932269169124}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.6894270649037971, -0.7562654642969203}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.4561480960855884, -0.500370625459065}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.7665553560002341, -0.5788757340517223}, 13}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   5, {-0.41292833811137236`, -0.31182900616887055`}, 13}], 
                  0.02254220222992223], 
                 ArrowBox[
                  BezierCurveBox[{
                   6, {0.5492819065248636, 0.887120738826274}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.4856554033088557, 0.7843604077987405}, 8}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.7082413606297987, 0.7769037635702826}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.5481635969124143, 0.6013068216106137}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.8166516734003458, 0.616706716878059}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   6, {0.5403241690818401, 0.4080338719895959}, 12}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   7, {-0.7029373462614349, -0.7710855369686219}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   7, {-0.6215120438961611, -0.6817662351402489}, 9}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   7, {-0.8389378975285295, -0.6335364921192947}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   7, {-0.6493199085216452, -0.4903436336824001}, 11}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   8, {0.83265509775149, 0.6287919419646689}, 10}], 
                  0.02254220222992223], 
                 ArrowBox[
                  
                  BezierCurveBox[{
                   8, {0.7362038372501287, 0.5559553310325218}, 10}], 
                  0.02254220222992223]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                DiskBox[1, 0.02254220222992223], 
                DiskBox[2, 0.02254220222992223], 
                DiskBox[3, 0.02254220222992223], 
                DiskBox[4, 0.02254220222992223], 
                DiskBox[5, 0.02254220222992223], 
                DiskBox[6, 0.02254220222992223], 
                DiskBox[7, 0.02254220222992223], 
                DiskBox[8, 0.02254220222992223], 
                DiskBox[9, 0.02254220222992223], 
                DiskBox[10, 0.02254220222992223], 
                DiskBox[11, 0.02254220222992223], 
                DiskBox[12, 0.02254220222992223], 
                DiskBox[13, 0.02254220222992223], 
                DiskBox[14, 0.02254220222992223], 
                DiskBox[15, 0.02254220222992223], 
                DiskBox[16, 0.02254220222992223], 
                DiskBox[17, 0.02254220222992223]}}], {
             Background -> GrayLevel[0, 0], FormatType -> TraditionalForm, 
              FrameTicks -> None, ImageSize -> 32}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  StyleBox["\"Points: \"", 
                   RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                  InterpretationBox["\"\\!\\(\\*RowBox[{\\\"10\\\"}]\\)\"", 
                   StringForm["``", 10], Editable -> False]}, "RowDefault"], 
                "SummaryItem"]}, {
               TagBox[
                TemplateBox[{
                  StyleBox["\"Dimensions: \"", 
                   RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                  InterpretationBox["\"\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\"", 
                   StringForm["``", 3], Editable -> False]}, "RowDefault"], 
                "SummaryItem"]}, {
               TagBox[
                TemplateBox[{
                  StyleBox["\"Simplex Count: \"", 
                   RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                  InterpretationBox["\"\\!\\(\\*RowBox[{\\\"55\\\"}]\\)\"", 
                   StringForm["``", 55], Editable -> False]}, "RowDefault"], 
                "SummaryItem"]}, {
               TagBox[
                TemplateBox[{
                  StyleBox["\"Filtration Length: \"", 
                   RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                  InterpretationBox["\"\\!\\(\\*RowBox[{\\\"20\\\"}]\\)\"", 
                   StringForm["``", 20], Editable -> False]}, "RowDefault"], 
                "SummaryItem"]}, {
               TagBox[
                TemplateBox[{
                  StyleBox["\"Generators: \"", 
                   RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                  InterpretationBox["\"\\!\\(\\*RowBox[{\\\"9\\\"}]\\)\"", 
                   StringForm["``", 9], Editable -> False]}, "RowDefault"], 
                "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  $CellContext`PersistentHomologyObject[<|
   "Points" -> {{0.04701440397588197, 0.08713244155308142, 
     0.11279730904849528`}, {0.7962060148406873, 0.016707235565696088`, 
     0.8344157102868399}, {0.6557665320827006, 0.4733405592285196, 
     0.05777309011275977}, {0.01583956879915971, 0.7931066455479991, 
     0.3102027000616021}, {0.5210620136940183, 0.14752176746672063`, 
     0.5887472149300073}, {0.460660412670413, 0.8898702211234495, 
     0.36419314750028775`}, {0.6085996572759031, 0.9032442339571805, 
     0.07418559106019917}, {0.9845790531070306, 0.8043379764741339, 
     0.9835618545445848}, {0.12843455087928324`, 0.3749969232020778, 
     0.16051817312960615`}, {0.2068323116355082, 0.8396782879222273, 
     0.5541871851741516}}, "Dimension" -> 3, "MaximumDistance" -> 
    1.466847689542039, 
    "Simplices" -> {{1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {10}, {1, 
      9}, {4, 10}, {6, 10}, {6, 7}, {2, 5}, {3, 7}, {4, 9}, {4, 6}, {4, 6, 
      10}, {3, 9}, {3, 6}, {3, 6, 7}, {9, 10}, {4, 9, 10}, {5, 9}, {7, 10}, {
      6, 7, 10}, {3, 5}, {3, 5, 9}, {6, 9}, {3, 6, 9}, {4, 6, 9}, {6, 9, 
      10}, {4, 6, 9, 10}, {4, 7}, {4, 6, 7}, {4, 7, 10}, {4, 6, 7, 10}, {1, 
      5}, {1, 5, 9}, {7, 9}, {3, 7, 9}, {4, 7, 9}, {6, 7, 9}, {7, 9, 10}, {3, 
      6, 7, 9}, {4, 6, 7, 9}, {4, 7, 9, 10}, {6, 7, 9, 10}, {1, 3}, {1, 3, 
      5}, {1, 3, 9}, {1, 3, 5, 9}, {1, 4}, {1, 4, 9}}, 
    "SimplexWeights" -> CompressedData["
1:eJxTTMoPSmVkYGAwZ6A+eMP0Kzg2+bK9ws1fjTN4r9jPSPggltR9xf7warmg
hltX7N+7thUZ8Ny0X22a2fNi0237PRyn6j2C7tqrWaU6rgxD0Ht4cy85Vz20
L8mIXTNhPYK26DvK6LDsMZy+sujVdf3vj+2Zyl/YGig9gdNKiTHN/qkIOuJ4
u9vOlYTptjuFrF+346b/R/Tr6U59CqdrulYnzmB6TjG9zPfqDyZl3LR/5ecl
s6sQNABlsLal
     "], 
    "IntervalIndices" -> {{9, 11}, {10, 12}, {6, 13}, {7, 14}, {5, 15}, {4, 
     16}, {3, 17}, {2, 25}, {20, 32}}, 
    "Intervals" -> {{0., 0.30293973160591636`}, {0., 0.3133298177084658}, {0.,
      0.3210072731030862}, {0., 0.32583625812065636`}, {0., 
     0.39136897262605336`}, {0., 0.43279470169076245`}, {0., 
     0.45814716796315813`}, {0., 0.6239241807098446}, {0.5461749181635507, 
     0.645718229059848}}, 
    "FiltrationRadii" -> {0., 0.30293973160591636`, 0.3133298177084658, 
     0.3210072731030862, 0.32583625812065636`, 0.39136897262605336`, 
     0.43279470169076245`, 0.45814716796315813`, 0.4584143770815977, 
     0.5461749181635507, 0.5526812902928797, 0.6140441927531759, 
     0.6239241807098446, 0.6291733941213524, 0.6373670163766614, 
     0.645718229059848, 0.6474557024329364, 0.6744600209592874, 
     0.7190668017977511, 0.7230238780997993, 0.7337167951298315}, 
    "Edges" -> {
      DirectedEdge[12, 13], 
      DirectedEdge[14, 16], 
      DirectedEdge[13, 16], 
      DirectedEdge[11, 17], 
      DirectedEdge[16, 17], 
      DirectedEdge[13, 18], 
      DirectedEdge[11, 20], 
      DirectedEdge[17, 20], 
      DirectedEdge[13, 21], 
      DirectedEdge[16, 21], 
      DirectedEdge[12, 23], 
      DirectedEdge[11, 23], 
      DirectedEdge[16, 23], 
      DirectedEdge[17, 23], 
      DirectedEdge[11, 25], 
      DirectedEdge[15, 25], 
      DirectedEdge[12, 26], 
      DirectedEdge[14, 26], 
      DirectedEdge[13, 26], 
      DirectedEdge[15, 28], 
      DirectedEdge[17, 28], 
      DirectedEdge[25, 28], 
      DirectedEdge[11, 30], 
      DirectedEdge[13, 30], 
      DirectedEdge[16, 30], 
      DirectedEdge[17, 30], 
      DirectedEdge[31, 32], 
      DirectedEdge[22, 32], 
      DirectedEdge[31, 33], 
      DirectedEdge[24, 33], 
      DirectedEdge[22, 33], 
      DirectedEdge[32, 33], 
      DirectedEdge[19, 33], 
      DirectedEdge[14, 35], 
      DirectedEdge[13, 35], 
      DirectedEdge[36, 37], 
      DirectedEdge[27, 37], 
      DirectedEdge[19, 37], 
      DirectedEdge[15, 39], 
      DirectedEdge[25, 39], 
      DirectedEdge[11, 41], 
      DirectedEdge[14, 41], 
      DirectedEdge[13, 41], 
      DirectedEdge[16, 41], 
      DirectedEdge[17, 41], 
      DirectedEdge[42, 43], 
      DirectedEdge[36, 43], 
      DirectedEdge[32, 43], 
      DirectedEdge[42, 44], 
      DirectedEdge[31, 44], 
      DirectedEdge[22, 44], 
      DirectedEdge[42, 45], 
      DirectedEdge[27, 45], 
      DirectedEdge[24, 45], 
      DirectedEdge[32, 45], 
      DirectedEdge[19, 45], 
      DirectedEdge[46, 47], 
      DirectedEdge[48, 49], 
      DirectedEdge[46, 49], 
      DirectedEdge[47, 49], 
      DirectedEdge[38, 49], 
      DirectedEdge[34, 49], 
      DirectedEdge[17, 50], 
      DirectedEdge[51, 52], 
      DirectedEdge[40, 52], 
      DirectedEdge[29, 52], 
      DirectedEdge[16, 54], 
      DirectedEdge[17, 54]}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellEditDuplicate->True,
 TaggingRules->{},
 CellChangeTimes->{3.80449292180836*^9, 3.804492977749896*^9, 
  3.823021531931992*^9},
 CellID->765950919]
}, Open  ]],

Cell["This will sometimes speed up computation times:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8044925075778637`*^9, 3.804492523120275*^9}, {
   3.8044925901585293`*^9, 3.804492595861801*^9}, {3.804492759251581*^9, 
   3.804492761618194*^9}, {3.804492850841065*^9, 3.804492885822322*^9}, {
   3.8044929575559893`*^9, 3.80449299906669*^9}, {3.80449303149861*^9, 
   3.804493041962367*^9}, 3.804493101200829*^9},
 CellID->276646032],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   InterpretationBox[
    TagBox[
     DynamicModuleBox[{Typeset`open = False}, 
      FrameBox[
       PaneSelectorBox[{False->GridBox[{
          {
           PaneBox[GridBox[{
              {
               StyleBox[
                StyleBox[
                 AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                  BoxBaselineShift->-0.25,
                  BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                 
                 FontColor->RGBColor[
                  0.8745098039215686, 0.2784313725490196, 
                   0.03137254901960784]],
                ShowStringCharacters->False,
                FontFamily->"Source Sans Pro Black",
                FontSize->0.6538461538461539 Inherited,
                FontWeight->"Heavy",
                PrivateFontOptions->{"OperatorSubstitution"->False}], 
               StyleBox[
                RowBox[{
                 StyleBox["PersistentHomology", "ResourceFunctionLabel"], 
                 " "}],
                ShowAutoStyles->False,
                ShowStringCharacters->False,
                FontSize->Rational[12, 13] Inherited,
                FontColor->GrayLevel[0.1]]}
             },
             GridBoxSpacings->{"Columns" -> {{0.25}}}],
            Alignment->Left,
            BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
            BaselinePosition->Baseline,
            FrameMargins->{{3, 0}, {0, 0}}], 
           ItemBox[
            PaneBox[
             TogglerBox[Dynamic[Typeset`open], {True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "IconizeCloser"],
               ImageSizeCache->{11., {1., 10.}}], False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "IconizeOpener"],
               ImageSizeCache->{11., {1., 10.}}]},
              Appearance->None,
              BaselinePosition->Baseline,
              ContentPadding->False,
              FrameMargins->0],
             Alignment->Left,
             BaselinePosition->Baseline,
             FrameMargins->{{1, 1}, {0, 0}}],
            Frame->{{
               RGBColor[
               0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                0.5], False}, {False, False}}]}
         },
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
        GridBox[{
          {GridBox[{
             {
              PaneBox[GridBox[{
                 {
                  StyleBox[
                   StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                   ShowStringCharacters->False,
                   FontFamily->"Source Sans Pro Black",
                   FontSize->0.6538461538461539 Inherited,
                   FontWeight->"Heavy",
                   PrivateFontOptions->{"OperatorSubstitution"->False}], 
                  StyleBox[
                   RowBox[{
                    StyleBox["PersistentHomology", "ResourceFunctionLabel"], 
                    " "}],
                   ShowAutoStyles->False,
                   ShowStringCharacters->False,
                   FontSize->Rational[12, 13] Inherited,
                   FontColor->GrayLevel[0.1]]}
                },
                GridBoxSpacings->{"Columns" -> {{0.25}}}],
               Alignment->Left,
               BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
               BaselinePosition->Baseline,
               FrameMargins->{{3, 0}, {0, 0}}], 
              ItemBox[
               PaneBox[
                TogglerBox[Dynamic[Typeset`open], {True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "IconizeCloser"]], False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "IconizeOpener"]]},
                 Appearance->None,
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0],
                Alignment->Left,
                BaselinePosition->Baseline,
                FrameMargins->{{1, 1}, {0, 0}}],
               Frame->{{
                  RGBColor[
                  0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                   0.5], False}, {False, False}}]}
            },
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
          {
           StyleBox[
            PaneBox[GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Version (latest): \"\>",
                  "IconizedLabel"], " ", 
                 TagBox["\<\"1.0.1\"\>",
                  "IconizedItem"]}]},
               {
                TagBox[
                 
                 TemplateBox[{
                  "\"Documentation \[RightGuillemet]\"", 
                   "https://resources.wolframcloud.com/FunctionRepository/\
resources/PersistentHomology"},
                  "HyperlinkURL"],
                 "IconizedItem"]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             Alignment->Left,
             BaselinePosition->Baseline,
             FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
            FontFamily->"Roboto",
            FontSize->11]}
         },
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
              GrayLevel[0.8]}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open],
        BaselinePosition->Baseline,
        ImageSize->Automatic],
       Background->RGBColor[
        0.9686274509803922, 0.9764705882352941, 0.984313725490196],
       BaselinePosition->Baseline,
       DefaultBaseStyle->{},
       FrameMargins->{{0, 0}, {1, 0}},
       FrameStyle->RGBColor[
        0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
       RoundingRadius->4]],
     {"FunctionResourceBox", 
      RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
      "PersistentHomology"},
     TagBoxNote->"FunctionResourceBox"],
    ResourceFunction["PersistentHomology"],
    BoxID -> "PersistentHomology",
    Selectable->False], "[", 
   RowBox[{"data", ",", 
    RowBox[{"\"\<Distance\>\"", "\[Rule]", "0.75"}]}], "]"}], "]"}]], "Input",\

 TaggingRules->{},
 CellChangeTimes->{{3.804493047842121*^9, 3.804493088647814*^9}, 
   3.8044948632467623`*^9, 3.8230213659629498`*^9},
 CellID->610217151],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7.6404422`", ",", 
   InterpretationBox[
    RowBox[{
     TagBox["PersistentHomologyObject",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               GraphicsComplexBox[CompressedData["
1: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
DD7UNnFU6mGhG2+T145RH+SY9ZrzutlY7vy4V2ngKex2UAy4ntEDQ02/GiX9
uKDJkxbtMe2FnIE50gkPudC2yslK4U8vuN6sNTtygQs/bOInhsL7oH7xMpH5
+7lwbMI9rWBHP9j/elIzto4Ll5b2/DvS2g+9zSapiqJcyHELv6J/bQB6/5yh
fejhwNU9a713TQzAq5uXer3SOCCd1ZT4e5IEwwV3F73RYsFbYtPio/vJMLLR
fO8MwblvmZvRMhMfMhyJ/r1/YTsT+vpG+7sayVDt3Z3WHckE0a8R/0rmUaA7
Oumf62UmxF97+LHnEAVWe4QHrlVlQqhcYuJcdwoo+ob4MzkMMFzx1E+lmAJP
OM5No4Lzu/PamhCp6m4ItV2u09LCgSGFhxdOa/XAj6p/Tv2CcyO6d17KS+yB
343jjjHHOSBRFJTLV+yFXRmsOQdlOHA6amCsMKYXjOuKzbkDbBg02+Jet7EP
ajPeVeQlsqEjeJP/18w+UFDZ9aXyPhuIPzddcNbrh/Xha36rG7Khdd7JEBkF
EnhTNTbtaWZACvvN+uBrJNAx116zIZYBpxTHLBbkCtrPDc7GPmLA4CbFZ+Zi
ZEg4K6XXZMaAV38W9+07LpgfvcezC3cwYNUq5eQ4Qf0YSm1IfyjHAG5Oj7nh
TzJYO778IT+DAVfutr2eEtQb29zf6xTx6FCrrrpJn9gHZZcC51i3cUBWN/n9
tiUDsENcpnOpHwcub7w5sn7XINSfJDzw0ufA/Tei9ReshuDYjxADBpcNexLt
Y1fvIkCLiXjhlSA20C6/qPKuIoCLYp+97hY2KPgFPl9tSARH20Huu3oWyJR1
/A6oJoJVGdO/zpIFJZe/kOXfMcDN/l5Y3xoKUHYVqm+QZoLCTHkbqTQyPHE+
mejkzQSKpTbtvRYZhtXvz20ZZcKPubvnlgvmRaPGMpgneE7RxhzWF01BHi35
rhNayoIfzPK0yUQinPb9Xum7jA3K3j3HC+SIQH/aRv9wnQ2h/PYHh3wIsEp/
nVdGUA/0nv31bsZrNuipMFratXvhwOfvn4P/sUBSnkn4zBXk/wWJK8Z3WPAq
b7H60vQ+yFu7TNWLwYR59EEDk8f98ETfb56vDRN4xuvERc0F+c0L2JxOZcD6
BvM/sXsGweRgaubOmwxwcNLzz9AYAn6/6eM7Y4J6keK/lWZHg8W+RI/npYLx
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
                "], {{
                  Directive[
                   Opacity[0.7], 
                   Hue[0.6, 0.7, 0.5]], 
                  Arrowheads[0.], {
                   ArrowBox[{1, 2}, 0.02254220222992223], 
                   ArrowBox[{1, 5}, 0.02254220222992223], 
                   ArrowBox[{1, 7}, 0.02254220222992223], 
                   ArrowBox[{1, 9}, 0.02254220222992223], 
                   ArrowBox[{1, 11}, 0.02254220222992223], 
                   ArrowBox[{1, 13}, 0.02254220222992223], 
                   ArrowBox[{1, 15}, 0.02254220222992223], 
                   ArrowBox[{1, 17}, 0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-2.1409496216940123`*^-16, -1.0434049156924905`}, 5}],
                     0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {1.0704748108470062`*^-15, -0.9225412836753133}, 5}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.19317181243605622`, -1.0333779239158283`}, 7}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.1495108326247347, -0.7998123114976872}, 7}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.3696769958201283, -0.9542463251548349}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.24459071364353785`, -0.6313614109083246}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.5056775470872312, -0.8166972803055038}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.272398578269021, -0.43993880945047653`}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.582805838183662, -0.6393075500603161}, 13}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.229178820294798, -0.251397190160288}, 13}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.590645266014236, -0.4460346004393019}, 15}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.12076850752425144`, -0.09120014346806327}, 15}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {-0.04103500681170743, -0.01167546606958506}, 4}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.5674671696890601, 0.16145833033997112`}, 4}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.15069014333422975`, 0.013963498134084052`}, 6}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.7369836857302795, 0.06829159554065786}, 6}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.33873038367193714`, -0.031387992444006356`}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.8613974228519735, -0.07982022606495483}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.49768983777687453`, -0.14160496769998895`}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.9239056164555438, -0.26287381225308243`}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.6061001505474233, -0.3018020143922123}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.9160661886249679, -0.45614676187410347`}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    BezierCurveBox[{
                    3, {0.6493199085216432, -0.4903436336824059}, 14}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.8389378975285393, -0.633536492119288}, 14}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.6215120438961692, -0.6817662351402451}, 16}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.7029373462614268, -0.7710855369686257}, 16}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.19172515014593514`, 1.0256389642036672`}, 6}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.16951651604121815`, 0.9068332652006886}, 6}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.37976539048364444`, 0.9802874736255784}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.2939302531629152, 0.7587214435950802}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.5387248445885809, 0.8700704983695936}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.35643844676648223`, 0.5756678574069446}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.6471351573591255, 0.7098734516773724}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.34859901893590606`, 0.3823949077859304}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.6903549153333459, 0.5213318323871787}, 14}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.27147072783947207`, 0.20500517754074105`}, 14}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.3769213302526145, -0.9729461079072422}, 7}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.33326035044130586`, -0.8602441275062771}, 7}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.5534265136367049, -0.8938145091462413}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.4283402314601095, -0.6917932269169124}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.6894270649037971, -0.7562654642969203}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.4561480960855884, -0.500370625459065}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.7665553560002341, -0.5788757340517223}, 13}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.41292833811137236`, -0.31182900616887055`}, 13}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5492819065248636, 0.887120738826274}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.4856554033088557, 0.7843604077987405}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.7082413606297987, 0.7769037635702826}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5481635969124143, 0.6013068216106137}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.8166516734003458, 0.616706716878059}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5403241690818401, 0.4080338719895959}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.7029373462614349, -0.7710855369686219}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.6215120438961611, -0.6817662351402489}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.8389378975285295, -0.6335364921192947}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.6493199085216452, -0.4903436336824001}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    8, {0.83265509775149, 0.6287919419646689}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    8, {0.7362038372501287, 0.5559553310325218}, 10}], 
                    0.02254220222992223]}}, {
                  Directive[
                   Hue[0.6, 0.2, 0.8], 
                   EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                  DiskBox[1, 0.02254220222992223], 
                  DiskBox[2, 0.02254220222992223], 
                  DiskBox[3, 0.02254220222992223], 
                  DiskBox[4, 0.02254220222992223], 
                  DiskBox[5, 0.02254220222992223], 
                  DiskBox[6, 0.02254220222992223], 
                  DiskBox[7, 0.02254220222992223], 
                  DiskBox[8, 0.02254220222992223], 
                  DiskBox[9, 0.02254220222992223], 
                  DiskBox[10, 0.02254220222992223], 
                  DiskBox[11, 0.02254220222992223], 
                  DiskBox[12, 0.02254220222992223], 
                  DiskBox[13, 0.02254220222992223], 
                  DiskBox[14, 0.02254220222992223], 
                  DiskBox[15, 0.02254220222992223], 
                  DiskBox[16, 0.02254220222992223], 
                  DiskBox[17, 0.02254220222992223]}}], {
               Background -> GrayLevel[0, 0], FormatType -> TraditionalForm, 
                FrameTicks -> None, ImageSize -> 32}], 
              GridBox[{{
                 TagBox[
                  TemplateBox[{
                    StyleBox["\"Points: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox[
                    "\"\\!\\(\\*RowBox[{\\\"10\\\"}]\\)\"", 
                    StringForm["``", 10], Editable -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 TagBox[
                  TemplateBox[{
                    StyleBox["\"Dimensions: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox["\"\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\"", 
                    StringForm["``", 3], Editable -> False]}, "RowDefault"], 
                  "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               GraphicsComplexBox[CompressedData["
1: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
DD7UNnFU6mGhG2+T145RH+SY9ZrzutlY7vy4V2ngKex2UAy4ntEDQ02/GiX9
uKDJkxbtMe2FnIE50gkPudC2yslK4U8vuN6sNTtygQs/bOInhsL7oH7xMpH5
+7lwbMI9rWBHP9j/elIzto4Ll5b2/DvS2g+9zSapiqJcyHELv6J/bQB6/5yh
fejhwNU9a713TQzAq5uXer3SOCCd1ZT4e5IEwwV3F73RYsFbYtPio/vJMLLR
fO8MwblvmZvRMhMfMhyJ/r1/YTsT+vpG+7sayVDt3Z3WHckE0a8R/0rmUaA7
Oumf62UmxF97+LHnEAVWe4QHrlVlQqhcYuJcdwoo+ob4MzkMMFzx1E+lmAJP
OM5No4Lzu/PamhCp6m4ItV2u09LCgSGFhxdOa/XAj6p/Tv2CcyO6d17KS+yB
343jjjHHOSBRFJTLV+yFXRmsOQdlOHA6amCsMKYXjOuKzbkDbBg02+Jet7EP
ajPeVeQlsqEjeJP/18w+UFDZ9aXyPhuIPzddcNbrh/Xha36rG7Khdd7JEBkF
EnhTNTbtaWZACvvN+uBrJNAx116zIZYBpxTHLBbkCtrPDc7GPmLA4CbFZ+Zi
ZEg4K6XXZMaAV38W9+07LpgfvcezC3cwYNUq5eQ4Qf0YSm1IfyjHAG5Oj7nh
TzJYO778IT+DAVfutr2eEtQb29zf6xTx6FCrrrpJn9gHZZcC51i3cUBWN/n9
tiUDsENcpnOpHwcub7w5sn7XINSfJDzw0ufA/Tei9ReshuDYjxADBpcNexLt
Y1fvIkCLiXjhlSA20C6/qPKuIoCLYp+97hY2KPgFPl9tSARH20Huu3oWyJR1
/A6oJoJVGdO/zpIFJZe/kOXfMcDN/l5Y3xoKUHYVqm+QZoLCTHkbqTQyPHE+
mejkzQSKpTbtvRYZhtXvz20ZZcKPubvnlgvmRaPGMpgneE7RxhzWF01BHi35
rhNayoIfzPK0yUQinPb9Xum7jA3K3j3HC+SIQH/aRv9wnQ2h/PYHh3wIsEp/
nVdGUA/0nv31bsZrNuipMFratXvhwOfvn4P/sUBSnkn4zBXk/wWJK8Z3WPAq
b7H60vQ+yFu7TNWLwYR59EEDk8f98ETfb56vDRN4xuvERc0F+c0L2JxOZcD6
BvM/sXsGweRgaubOmwxwcNLzz9AYAn6/6eM7Y4J6keK/lWZHg8W+RI/npYLx
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
                "], {{
                  Directive[
                   Opacity[0.7], 
                   Hue[0.6, 0.7, 0.5]], 
                  Arrowheads[0.], {
                   ArrowBox[{1, 2}, 0.02254220222992223], 
                   ArrowBox[{1, 5}, 0.02254220222992223], 
                   ArrowBox[{1, 7}, 0.02254220222992223], 
                   ArrowBox[{1, 9}, 0.02254220222992223], 
                   ArrowBox[{1, 11}, 0.02254220222992223], 
                   ArrowBox[{1, 13}, 0.02254220222992223], 
                   ArrowBox[{1, 15}, 0.02254220222992223], 
                   ArrowBox[{1, 17}, 0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-2.1409496216940123`*^-16, -1.0434049156924905`}, 5}],
                     0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {1.0704748108470062`*^-15, -0.9225412836753133}, 5}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.19317181243605622`, -1.0333779239158283`}, 7}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.1495108326247347, -0.7998123114976872}, 7}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.3696769958201283, -0.9542463251548349}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.24459071364353785`, -0.6313614109083246}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.5056775470872312, -0.8166972803055038}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.272398578269021, -0.43993880945047653`}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.582805838183662, -0.6393075500603161}, 13}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.229178820294798, -0.251397190160288}, 13}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.590645266014236, -0.4460346004393019}, 15}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.12076850752425144`, -0.09120014346806327}, 15}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {-0.04103500681170743, -0.01167546606958506}, 4}], 
                    0.02254220222992223], 
                   ArrowBox[
                    BezierCurveBox[{
                    3, {0.5674671696890601, 0.16145833033997112`}, 4}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.15069014333422975`, 0.013963498134084052`}, 6}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.7369836857302795, 0.06829159554065786}, 6}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.33873038367193714`, -0.031387992444006356`}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.8613974228519735, -0.07982022606495483}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.49768983777687453`, -0.14160496769998895`}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.9239056164555438, -0.26287381225308243`}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.6061001505474233, -0.3018020143922123}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.9160661886249679, -0.45614676187410347`}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.6493199085216432, -0.4903436336824059}, 14}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.8389378975285393, -0.633536492119288}, 14}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.6215120438961692, -0.6817662351402451}, 16}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.7029373462614268, -0.7710855369686257}, 16}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.19172515014593514`, 1.0256389642036672`}, 6}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.16951651604121815`, 0.9068332652006886}, 6}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.37976539048364444`, 0.9802874736255784}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.2939302531629152, 0.7587214435950802}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.5387248445885809, 0.8700704983695936}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.35643844676648223`, 0.5756678574069446}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.6471351573591255, 0.7098734516773724}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.34859901893590606`, 0.3823949077859304}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.6903549153333459, 0.5213318323871787}, 14}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.27147072783947207`, 0.20500517754074105`}, 14}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.3769213302526145, -0.9729461079072422}, 7}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.33326035044130586`, -0.8602441275062771}, 7}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.5534265136367049, -0.8938145091462413}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.4283402314601095, -0.6917932269169124}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.6894270649037971, -0.7562654642969203}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.4561480960855884, -0.500370625459065}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.7665553560002341, -0.5788757340517223}, 13}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.41292833811137236`, -0.31182900616887055`}, 13}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5492819065248636, 0.887120738826274}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.4856554033088557, 0.7843604077987405}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.7082413606297987, 0.7769037635702826}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5481635969124143, 0.6013068216106137}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.8166516734003458, 0.616706716878059}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5403241690818401, 0.4080338719895959}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.7029373462614349, -0.7710855369686219}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.6215120438961611, -0.6817662351402489}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.8389378975285295, -0.6335364921192947}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.6493199085216452, -0.4903436336824001}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    8, {0.83265509775149, 0.6287919419646689}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    8, {0.7362038372501287, 0.5559553310325218}, 10}], 
                    0.02254220222992223]}}, {
                  Directive[
                   Hue[0.6, 0.2, 0.8], 
                   EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                  DiskBox[1, 0.02254220222992223], 
                  DiskBox[2, 0.02254220222992223], 
                  DiskBox[3, 0.02254220222992223], 
                  DiskBox[4, 0.02254220222992223], 
                  DiskBox[5, 0.02254220222992223], 
                  DiskBox[6, 0.02254220222992223], 
                  DiskBox[7, 0.02254220222992223], 
                  DiskBox[8, 0.02254220222992223], 
                  DiskBox[9, 0.02254220222992223], 
                  DiskBox[10, 0.02254220222992223], 
                  DiskBox[11, 0.02254220222992223], 
                  DiskBox[12, 0.02254220222992223], 
                  DiskBox[13, 0.02254220222992223], 
                  DiskBox[14, 0.02254220222992223], 
                  DiskBox[15, 0.02254220222992223], 
                  DiskBox[16, 0.02254220222992223], 
                  DiskBox[17, 0.02254220222992223]}}], {
               Background -> GrayLevel[0, 0], FormatType -> TraditionalForm, 
                FrameTicks -> None, ImageSize -> 32}], 
              GridBox[{{
                 TagBox[
                  TemplateBox[{
                    StyleBox["\"Points: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox[
                    "\"\\!\\(\\*RowBox[{\\\"10\\\"}]\\)\"", 
                    StringForm["``", 10], Editable -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 TagBox[
                  TemplateBox[{
                    StyleBox["\"Dimensions: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox["\"\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\"", 
                    StringForm["``", 3], Editable -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 TagBox[
                  TemplateBox[{
                    StyleBox["\"Simplex Count: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox[
                    "\"\\!\\(\\*RowBox[{\\\"55\\\"}]\\)\"", 
                    StringForm["``", 55], Editable -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 TagBox[
                  TemplateBox[{
                    StyleBox["\"Filtration Length: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox[
                    "\"\\!\\(\\*RowBox[{\\\"20\\\"}]\\)\"", 
                    StringForm["``", 20], Editable -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 TagBox[
                  TemplateBox[{
                    StyleBox["\"Generators: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox["\"\\!\\(\\*RowBox[{\\\"9\\\"}]\\)\"", 
                    StringForm["``", 9], Editable -> False]}, "RowDefault"], 
                  "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    $CellContext`PersistentHomologyObject[<|
     "Points" -> {{0.04701440397588197, 0.08713244155308142, 
       0.11279730904849528`}, {0.7962060148406873, 0.016707235565696088`, 
       0.8344157102868399}, {0.6557665320827006, 0.4733405592285196, 
       0.05777309011275977}, {0.01583956879915971, 0.7931066455479991, 
       0.3102027000616021}, {0.5210620136940183, 0.14752176746672063`, 
       0.5887472149300073}, {0.460660412670413, 0.8898702211234495, 
       0.36419314750028775`}, {0.6085996572759031, 0.9032442339571805, 
       0.07418559106019917}, {0.9845790531070306, 0.8043379764741339, 
       0.9835618545445848}, {0.12843455087928324`, 0.3749969232020778, 
       0.16051817312960615`}, {0.2068323116355082, 0.8396782879222273, 
       0.5541871851741516}}, "Dimension" -> 3, "MaximumDistance" -> 
      1.466847689542039, 
      "Simplices" -> {{1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {10}, {1, 
        9}, {4, 10}, {6, 10}, {6, 7}, {2, 5}, {3, 7}, {4, 9}, {4, 6}, {4, 6, 
        10}, {3, 9}, {3, 6}, {3, 6, 7}, {9, 10}, {4, 9, 10}, {5, 9}, {7, 
        10}, {6, 7, 10}, {3, 5}, {3, 5, 9}, {6, 9}, {3, 6, 9}, {4, 6, 9}, {6, 
        9, 10}, {4, 6, 9, 10}, {4, 7}, {4, 6, 7}, {4, 7, 10}, {4, 6, 7, 10}, {
        1, 5}, {1, 5, 9}, {7, 9}, {3, 7, 9}, {4, 7, 9}, {6, 7, 9}, {7, 9, 
        10}, {3, 6, 7, 9}, {4, 6, 7, 9}, {4, 7, 9, 10}, {6, 7, 9, 10}, {1, 
        3}, {1, 3, 5}, {1, 3, 9}, {1, 3, 5, 9}, {1, 4}, {1, 4, 9}}, 
      "SimplexWeights" -> CompressedData["
1:eJxTTMoPSmVkYGAwZ6A+eMP0Kzg2+bK9ws1fjTN4r9jPSPggltR9xf7warmg
hltX7N+7thUZ8Ny0X22a2fNi0237PRyn6j2C7tqrWaU6rgxD0Ht4cy85Vz20
L8mIXTNhPYK26DvK6LDsMZy+sujVdf3vj+2Zyl/YGig9gdNKiTHN/qkIOuJ4
u9vOlYTptjuFrF+346b/R/Tr6U59CqdrulYnzmB6TjG9zPfqDyZl3LR/5ecl
s6sQNABlsLal
       "], 
      "IntervalIndices" -> {{9, 11}, {10, 12}, {6, 13}, {7, 14}, {5, 15}, {4, 
       16}, {3, 17}, {2, 25}, {20, 32}}, 
      "Intervals" -> {{0., 0.30293973160591636`}, {0., 0.3133298177084658}, {
       0., 0.3210072731030862}, {0., 0.32583625812065636`}, {0., 
       0.39136897262605336`}, {0., 0.43279470169076245`}, {0., 
       0.45814716796315813`}, {0., 0.6239241807098446}, {0.5461749181635507, 
       0.645718229059848}}, 
      "FiltrationRadii" -> {0., 0.30293973160591636`, 0.3133298177084658, 
       0.3210072731030862, 0.32583625812065636`, 0.39136897262605336`, 
       0.43279470169076245`, 0.45814716796315813`, 0.4584143770815977, 
       0.5461749181635507, 0.5526812902928797, 0.6140441927531759, 
       0.6239241807098446, 0.6291733941213524, 0.6373670163766614, 
       0.645718229059848, 0.6474557024329364, 0.6744600209592874, 
       0.7190668017977511, 0.7230238780997993, 0.7337167951298315}, "Edges" -> {
        DirectedEdge[12, 13], 
        DirectedEdge[14, 16], 
        DirectedEdge[13, 16], 
        DirectedEdge[11, 17], 
        DirectedEdge[16, 17], 
        DirectedEdge[13, 18], 
        DirectedEdge[11, 20], 
        DirectedEdge[17, 20], 
        DirectedEdge[13, 21], 
        DirectedEdge[16, 21], 
        DirectedEdge[12, 23], 
        DirectedEdge[11, 23], 
        DirectedEdge[16, 23], 
        DirectedEdge[17, 23], 
        DirectedEdge[11, 25], 
        DirectedEdge[15, 25], 
        DirectedEdge[12, 26], 
        DirectedEdge[14, 26], 
        DirectedEdge[13, 26], 
        DirectedEdge[15, 28], 
        DirectedEdge[17, 28], 
        DirectedEdge[25, 28], 
        DirectedEdge[11, 30], 
        DirectedEdge[13, 30], 
        DirectedEdge[16, 30], 
        DirectedEdge[17, 30], 
        DirectedEdge[31, 32], 
        DirectedEdge[22, 32], 
        DirectedEdge[31, 33], 
        DirectedEdge[24, 33], 
        DirectedEdge[22, 33], 
        DirectedEdge[32, 33], 
        DirectedEdge[19, 33], 
        DirectedEdge[14, 35], 
        DirectedEdge[13, 35], 
        DirectedEdge[36, 37], 
        DirectedEdge[27, 37], 
        DirectedEdge[19, 37], 
        DirectedEdge[15, 39], 
        DirectedEdge[25, 39], 
        DirectedEdge[11, 41], 
        DirectedEdge[14, 41], 
        DirectedEdge[13, 41], 
        DirectedEdge[16, 41], 
        DirectedEdge[17, 41], 
        DirectedEdge[42, 43], 
        DirectedEdge[36, 43], 
        DirectedEdge[32, 43], 
        DirectedEdge[42, 44], 
        DirectedEdge[31, 44], 
        DirectedEdge[22, 44], 
        DirectedEdge[42, 45], 
        DirectedEdge[27, 45], 
        DirectedEdge[24, 45], 
        DirectedEdge[32, 45], 
        DirectedEdge[19, 45], 
        DirectedEdge[46, 47], 
        DirectedEdge[48, 49], 
        DirectedEdge[46, 49], 
        DirectedEdge[47, 49], 
        DirectedEdge[38, 49], 
        DirectedEdge[34, 49], 
        DirectedEdge[17, 50], 
        DirectedEdge[51, 52], 
        DirectedEdge[40, 52], 
        DirectedEdge[29, 52], 
        DirectedEdge[16, 54], 
        DirectedEdge[17, 54]}|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.804493073761051*^9, 3.8044930917875853`*^9}, 
   3.8230215402497263`*^9},
 CellID->698752409]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   InterpretationBox[
    TagBox[
     DynamicModuleBox[{Typeset`open = False}, 
      FrameBox[
       PaneSelectorBox[{False->GridBox[{
          {
           PaneBox[GridBox[{
              {
               StyleBox[
                StyleBox[
                 AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                  BoxBaselineShift->-0.25,
                  BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                 
                 FontColor->RGBColor[
                  0.8745098039215686, 0.2784313725490196, 
                   0.03137254901960784]],
                ShowStringCharacters->False,
                FontFamily->"Source Sans Pro Black",
                FontSize->0.6538461538461539 Inherited,
                FontWeight->"Heavy",
                PrivateFontOptions->{"OperatorSubstitution"->False}], 
               StyleBox[
                RowBox[{
                 StyleBox["PersistentHomology", "ResourceFunctionLabel"], 
                 " "}],
                ShowAutoStyles->False,
                ShowStringCharacters->False,
                FontSize->Rational[12, 13] Inherited,
                FontColor->GrayLevel[0.1]]}
             },
             GridBoxSpacings->{"Columns" -> {{0.25}}}],
            Alignment->Left,
            BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
            BaselinePosition->Baseline,
            FrameMargins->{{3, 0}, {0, 0}}], 
           ItemBox[
            PaneBox[
             TogglerBox[Dynamic[Typeset`open], {True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "IconizeCloser"],
               ImageSizeCache->{11., {1., 10.}}], False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "IconizeOpener"],
               ImageSizeCache->{11., {1., 10.}}]},
              Appearance->None,
              BaselinePosition->Baseline,
              ContentPadding->False,
              FrameMargins->0],
             Alignment->Left,
             BaselinePosition->Baseline,
             FrameMargins->{{1, 1}, {0, 0}}],
            Frame->{{
               RGBColor[
               0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                0.5], False}, {False, False}}]}
         },
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
        GridBox[{
          {GridBox[{
             {
              PaneBox[GridBox[{
                 {
                  StyleBox[
                   StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                   ShowStringCharacters->False,
                   FontFamily->"Source Sans Pro Black",
                   FontSize->0.6538461538461539 Inherited,
                   FontWeight->"Heavy",
                   PrivateFontOptions->{"OperatorSubstitution"->False}], 
                  StyleBox[
                   RowBox[{
                    StyleBox["PersistentHomology", "ResourceFunctionLabel"], 
                    " "}],
                   ShowAutoStyles->False,
                   ShowStringCharacters->False,
                   FontSize->Rational[12, 13] Inherited,
                   FontColor->GrayLevel[0.1]]}
                },
                GridBoxSpacings->{"Columns" -> {{0.25}}}],
               Alignment->Left,
               BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
               BaselinePosition->Baseline,
               FrameMargins->{{3, 0}, {0, 0}}], 
              ItemBox[
               PaneBox[
                TogglerBox[Dynamic[Typeset`open], {True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "IconizeCloser"]], False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "IconizeOpener"]]},
                 Appearance->None,
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0],
                Alignment->Left,
                BaselinePosition->Baseline,
                FrameMargins->{{1, 1}, {0, 0}}],
               Frame->{{
                  RGBColor[
                  0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                   0.5], False}, {False, False}}]}
            },
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
          {
           StyleBox[
            PaneBox[GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Version (latest): \"\>",
                  "IconizedLabel"], " ", 
                 TagBox["\<\"1.0.1\"\>",
                  "IconizedItem"]}]},
               {
                TagBox[
                 
                 TemplateBox[{
                  "\"Documentation \[RightGuillemet]\"", 
                   "https://resources.wolframcloud.com/FunctionRepository/\
resources/PersistentHomology"},
                  "HyperlinkURL"],
                 "IconizedItem"]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             Alignment->Left,
             BaselinePosition->Baseline,
             FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
            FontFamily->"Roboto",
            FontSize->11]}
         },
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
              GrayLevel[0.8]}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open],
        BaselinePosition->Baseline,
        ImageSize->Automatic],
       Background->RGBColor[
        0.9686274509803922, 0.9764705882352941, 0.984313725490196],
       BaselinePosition->Baseline,
       DefaultBaseStyle->{},
       FrameMargins->{{0, 0}, {1, 0}},
       FrameStyle->RGBColor[
        0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
       RoundingRadius->4]],
     {"FunctionResourceBox", 
      RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
      "PersistentHomology"},
     TagBoxNote->"FunctionResourceBox"],
    ResourceFunction["PersistentHomology"],
    BoxID -> "PersistentHomology",
    Selectable->False], "[", "data", "]"}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{3.823021369509537*^9},
 CellID->362745272],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7.5251215`", ",", 
   InterpretationBox[
    RowBox[{
     TagBox["PersistentHomologyObject",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               GraphicsComplexBox[CompressedData["
1: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
DD7UNnFU6mGhG2+T145RH+SY9ZrzutlY7vy4V2ngKex2UAy4ntEDQ02/GiX9
uKDJkxbtMe2FnIE50gkPudC2yslK4U8vuN6sNTtygQs/bOInhsL7oH7xMpH5
+7lwbMI9rWBHP9j/elIzto4Ll5b2/DvS2g+9zSapiqJcyHELv6J/bQB6/5yh
fejhwNU9a713TQzAq5uXer3SOCCd1ZT4e5IEwwV3F73RYsFbYtPio/vJMLLR
fO8MwblvmZvRMhMfMhyJ/r1/YTsT+vpG+7sayVDt3Z3WHckE0a8R/0rmUaA7
Oumf62UmxF97+LHnEAVWe4QHrlVlQqhcYuJcdwoo+ob4MzkMMFzx1E+lmAJP
OM5No4Lzu/PamhCp6m4ItV2u09LCgSGFhxdOa/XAj6p/Tv2CcyO6d17KS+yB
343jjjHHOSBRFJTLV+yFXRmsOQdlOHA6amCsMKYXjOuKzbkDbBg02+Jet7EP
ajPeVeQlsqEjeJP/18w+UFDZ9aXyPhuIPzddcNbrh/Xha36rG7Khdd7JEBkF
EnhTNTbtaWZACvvN+uBrJNAx116zIZYBpxTHLBbkCtrPDc7GPmLA4CbFZ+Zi
ZEg4K6XXZMaAV38W9+07LpgfvcezC3cwYNUq5eQ4Qf0YSm1IfyjHAG5Oj7nh
TzJYO778IT+DAVfutr2eEtQb29zf6xTx6FCrrrpJn9gHZZcC51i3cUBWN/n9
tiUDsENcpnOpHwcub7w5sn7XINSfJDzw0ufA/Tei9ReshuDYjxADBpcNexLt
Y1fvIkCLiXjhlSA20C6/qPKuIoCLYp+97hY2KPgFPl9tSARH20Huu3oWyJR1
/A6oJoJVGdO/zpIFJZe/kOXfMcDN/l5Y3xoKUHYVqm+QZoLCTHkbqTQyPHE+
mejkzQSKpTbtvRYZhtXvz20ZZcKPubvnlgvmRaPGMpgneE7RxhzWF01BHi35
rhNayoIfzPK0yUQinPb9Xum7jA3K3j3HC+SIQH/aRv9wnQ2h/PYHh3wIsEp/
nVdGUA/0nv31bsZrNuipMFratXvhwOfvn4P/sUBSnkn4zBXk/wWJK8Z3WPAq
b7H60vQ+yFu7TNWLwYR59EEDk8f98ETfb56vDRN4xuvERc0F+c0L2JxOZcD6
BvM/sXsGweRgaubOmwxwcNLzz9AYAn6/6eM7Y4J6keK/lWZHg8W+RI/npYLx
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
                "], {{
                  Directive[
                   Opacity[0.7], 
                   Hue[0.6, 0.7, 0.5]], 
                  Arrowheads[0.], {
                   ArrowBox[{1, 2}, 0.02254220222992223], 
                   ArrowBox[{1, 5}, 0.02254220222992223], 
                   ArrowBox[{1, 7}, 0.02254220222992223], 
                   ArrowBox[{1, 9}, 0.02254220222992223], 
                   ArrowBox[{1, 11}, 0.02254220222992223], 
                   ArrowBox[{1, 13}, 0.02254220222992223], 
                   ArrowBox[{1, 15}, 0.02254220222992223], 
                   ArrowBox[{1, 17}, 0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-2.1409496216940123`*^-16, -1.0434049156924905`}, 5}],
                     0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {1.0704748108470062`*^-15, -0.9225412836753133}, 5}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.19317181243605622`, -1.0333779239158283`}, 7}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.1495108326247347, -0.7998123114976872}, 7}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.3696769958201283, -0.9542463251548349}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.24459071364353785`, -0.6313614109083246}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.5056775470872312, -0.8166972803055038}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.272398578269021, -0.43993880945047653`}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.582805838183662, -0.6393075500603161}, 13}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.229178820294798, -0.251397190160288}, 13}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.590645266014236, -0.4460346004393019}, 15}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.12076850752425144`, -0.09120014346806327}, 15}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {-0.04103500681170743, -0.01167546606958506}, 4}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.5674671696890601, 0.16145833033997112`}, 4}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.15069014333422975`, 0.013963498134084052`}, 6}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.7369836857302795, 0.06829159554065786}, 6}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.33873038367193714`, -0.031387992444006356`}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.8613974228519735, -0.07982022606495483}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.49768983777687453`, -0.14160496769998895`}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.9239056164555438, -0.26287381225308243`}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.6061001505474233, -0.3018020143922123}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.9160661886249679, -0.45614676187410347`}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    BezierCurveBox[{
                    3, {0.6493199085216432, -0.4903436336824059}, 14}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.8389378975285393, -0.633536492119288}, 14}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.6215120438961692, -0.6817662351402451}, 16}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.7029373462614268, -0.7710855369686257}, 16}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.19172515014593514`, 1.0256389642036672`}, 6}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.16951651604121815`, 0.9068332652006886}, 6}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.37976539048364444`, 0.9802874736255784}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.2939302531629152, 0.7587214435950802}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.5387248445885809, 0.8700704983695936}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.35643844676648223`, 0.5756678574069446}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.6471351573591255, 0.7098734516773724}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.34859901893590606`, 0.3823949077859304}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.6903549153333459, 0.5213318323871787}, 14}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.27147072783947207`, 0.20500517754074105`}, 14}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.3769213302526145, -0.9729461079072422}, 7}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.33326035044130586`, -0.8602441275062771}, 7}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.5534265136367049, -0.8938145091462413}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.4283402314601095, -0.6917932269169124}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.6894270649037971, -0.7562654642969203}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.4561480960855884, -0.500370625459065}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.7665553560002341, -0.5788757340517223}, 13}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.41292833811137236`, -0.31182900616887055`}, 13}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5492819065248636, 0.887120738826274}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.4856554033088557, 0.7843604077987405}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.7082413606297987, 0.7769037635702826}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5481635969124143, 0.6013068216106137}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.8166516734003458, 0.616706716878059}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5403241690818401, 0.4080338719895959}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.7029373462614349, -0.7710855369686219}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.6215120438961611, -0.6817662351402489}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.8389378975285295, -0.6335364921192947}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.6493199085216452, -0.4903436336824001}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    8, {0.83265509775149, 0.6287919419646689}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    8, {0.7362038372501287, 0.5559553310325218}, 10}], 
                    0.02254220222992223]}}, {
                  Directive[
                   Hue[0.6, 0.2, 0.8], 
                   EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                  DiskBox[1, 0.02254220222992223], 
                  DiskBox[2, 0.02254220222992223], 
                  DiskBox[3, 0.02254220222992223], 
                  DiskBox[4, 0.02254220222992223], 
                  DiskBox[5, 0.02254220222992223], 
                  DiskBox[6, 0.02254220222992223], 
                  DiskBox[7, 0.02254220222992223], 
                  DiskBox[8, 0.02254220222992223], 
                  DiskBox[9, 0.02254220222992223], 
                  DiskBox[10, 0.02254220222992223], 
                  DiskBox[11, 0.02254220222992223], 
                  DiskBox[12, 0.02254220222992223], 
                  DiskBox[13, 0.02254220222992223], 
                  DiskBox[14, 0.02254220222992223], 
                  DiskBox[15, 0.02254220222992223], 
                  DiskBox[16, 0.02254220222992223], 
                  DiskBox[17, 0.02254220222992223]}}], {
               Background -> GrayLevel[0, 0], FormatType -> TraditionalForm, 
                FrameTicks -> None, ImageSize -> 32}], 
              GridBox[{{
                 TagBox[
                  TemplateBox[{
                    StyleBox["\"Points: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox[
                    "\"\\!\\(\\*RowBox[{\\\"10\\\"}]\\)\"", 
                    StringForm["``", 10], Editable -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 TagBox[
                  TemplateBox[{
                    StyleBox["\"Dimensions: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox["\"\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\"", 
                    StringForm["``", 3], Editable -> False]}, "RowDefault"], 
                  "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               GraphicsComplexBox[CompressedData["
1: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
DD7UNnFU6mGhG2+T145RH+SY9ZrzutlY7vy4V2ngKex2UAy4ntEDQ02/GiX9
uKDJkxbtMe2FnIE50gkPudC2yslK4U8vuN6sNTtygQs/bOInhsL7oH7xMpH5
+7lwbMI9rWBHP9j/elIzto4Ll5b2/DvS2g+9zSapiqJcyHELv6J/bQB6/5yh
fejhwNU9a713TQzAq5uXer3SOCCd1ZT4e5IEwwV3F73RYsFbYtPio/vJMLLR
fO8MwblvmZvRMhMfMhyJ/r1/YTsT+vpG+7sayVDt3Z3WHckE0a8R/0rmUaA7
Oumf62UmxF97+LHnEAVWe4QHrlVlQqhcYuJcdwoo+ob4MzkMMFzx1E+lmAJP
OM5No4Lzu/PamhCp6m4ItV2u09LCgSGFhxdOa/XAj6p/Tv2CcyO6d17KS+yB
343jjjHHOSBRFJTLV+yFXRmsOQdlOHA6amCsMKYXjOuKzbkDbBg02+Jet7EP
ajPeVeQlsqEjeJP/18w+UFDZ9aXyPhuIPzddcNbrh/Xha36rG7Khdd7JEBkF
EnhTNTbtaWZACvvN+uBrJNAx116zIZYBpxTHLBbkCtrPDc7GPmLA4CbFZ+Zi
ZEg4K6XXZMaAV38W9+07LpgfvcezC3cwYNUq5eQ4Qf0YSm1IfyjHAG5Oj7nh
TzJYO778IT+DAVfutr2eEtQb29zf6xTx6FCrrrpJn9gHZZcC51i3cUBWN/n9
tiUDsENcpnOpHwcub7w5sn7XINSfJDzw0ufA/Tei9ReshuDYjxADBpcNexLt
Y1fvIkCLiXjhlSA20C6/qPKuIoCLYp+97hY2KPgFPl9tSARH20Huu3oWyJR1
/A6oJoJVGdO/zpIFJZe/kOXfMcDN/l5Y3xoKUHYVqm+QZoLCTHkbqTQyPHE+
mejkzQSKpTbtvRYZhtXvz20ZZcKPubvnlgvmRaPGMpgneE7RxhzWF01BHi35
rhNayoIfzPK0yUQinPb9Xum7jA3K3j3HC+SIQH/aRv9wnQ2h/PYHh3wIsEp/
nVdGUA/0nv31bsZrNuipMFratXvhwOfvn4P/sUBSnkn4zBXk/wWJK8Z3WPAq
b7H60vQ+yFu7TNWLwYR59EEDk8f98ETfb56vDRN4xuvERc0F+c0L2JxOZcD6
BvM/sXsGweRgaubOmwxwcNLzz9AYAn6/6eM7Y4J6keK/lWZHg8W+RI/npYLx
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
                "], {{
                  Directive[
                   Opacity[0.7], 
                   Hue[0.6, 0.7, 0.5]], 
                  Arrowheads[0.], {
                   ArrowBox[{1, 2}, 0.02254220222992223], 
                   ArrowBox[{1, 5}, 0.02254220222992223], 
                   ArrowBox[{1, 7}, 0.02254220222992223], 
                   ArrowBox[{1, 9}, 0.02254220222992223], 
                   ArrowBox[{1, 11}, 0.02254220222992223], 
                   ArrowBox[{1, 13}, 0.02254220222992223], 
                   ArrowBox[{1, 15}, 0.02254220222992223], 
                   ArrowBox[{1, 17}, 0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-2.1409496216940123`*^-16, -1.0434049156924905`}, 5}],
                     0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {1.0704748108470062`*^-15, -0.9225412836753133}, 5}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.19317181243605622`, -1.0333779239158283`}, 7}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.1495108326247347, -0.7998123114976872}, 7}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.3696769958201283, -0.9542463251548349}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.24459071364353785`, -0.6313614109083246}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.5056775470872312, -0.8166972803055038}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.272398578269021, -0.43993880945047653`}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.582805838183662, -0.6393075500603161}, 13}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.229178820294798, -0.251397190160288}, 13}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.590645266014236, -0.4460346004393019}, 15}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.12076850752425144`, -0.09120014346806327}, 15}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {-0.04103500681170743, -0.01167546606958506}, 4}], 
                    0.02254220222992223], 
                   ArrowBox[
                    BezierCurveBox[{
                    3, {0.5674671696890601, 0.16145833033997112`}, 4}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.15069014333422975`, 0.013963498134084052`}, 6}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.7369836857302795, 0.06829159554065786}, 6}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.33873038367193714`, -0.031387992444006356`}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.8613974228519735, -0.07982022606495483}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.49768983777687453`, -0.14160496769998895`}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.9239056164555438, -0.26287381225308243`}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.6061001505474233, -0.3018020143922123}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.9160661886249679, -0.45614676187410347`}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.6493199085216432, -0.4903436336824059}, 14}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.8389378975285393, -0.633536492119288}, 14}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.6215120438961692, -0.6817662351402451}, 16}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.7029373462614268, -0.7710855369686257}, 16}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.19172515014593514`, 1.0256389642036672`}, 6}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.16951651604121815`, 0.9068332652006886}, 6}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.37976539048364444`, 0.9802874736255784}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.2939302531629152, 0.7587214435950802}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.5387248445885809, 0.8700704983695936}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.35643844676648223`, 0.5756678574069446}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.6471351573591255, 0.7098734516773724}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.34859901893590606`, 0.3823949077859304}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.6903549153333459, 0.5213318323871787}, 14}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.27147072783947207`, 0.20500517754074105`}, 14}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.3769213302526145, -0.9729461079072422}, 7}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.33326035044130586`, -0.8602441275062771}, 7}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.5534265136367049, -0.8938145091462413}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.4283402314601095, -0.6917932269169124}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.6894270649037971, -0.7562654642969203}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.4561480960855884, -0.500370625459065}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.7665553560002341, -0.5788757340517223}, 13}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.41292833811137236`, -0.31182900616887055`}, 13}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5492819065248636, 0.887120738826274}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.4856554033088557, 0.7843604077987405}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.7082413606297987, 0.7769037635702826}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5481635969124143, 0.6013068216106137}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.8166516734003458, 0.616706716878059}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5403241690818401, 0.4080338719895959}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.7029373462614349, -0.7710855369686219}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.6215120438961611, -0.6817662351402489}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.8389378975285295, -0.6335364921192947}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.6493199085216452, -0.4903436336824001}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    8, {0.83265509775149, 0.6287919419646689}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    8, {0.7362038372501287, 0.5559553310325218}, 10}], 
                    0.02254220222992223]}}, {
                  Directive[
                   Hue[0.6, 0.2, 0.8], 
                   EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                  DiskBox[1, 0.02254220222992223], 
                  DiskBox[2, 0.02254220222992223], 
                  DiskBox[3, 0.02254220222992223], 
                  DiskBox[4, 0.02254220222992223], 
                  DiskBox[5, 0.02254220222992223], 
                  DiskBox[6, 0.02254220222992223], 
                  DiskBox[7, 0.02254220222992223], 
                  DiskBox[8, 0.02254220222992223], 
                  DiskBox[9, 0.02254220222992223], 
                  DiskBox[10, 0.02254220222992223], 
                  DiskBox[11, 0.02254220222992223], 
                  DiskBox[12, 0.02254220222992223], 
                  DiskBox[13, 0.02254220222992223], 
                  DiskBox[14, 0.02254220222992223], 
                  DiskBox[15, 0.02254220222992223], 
                  DiskBox[16, 0.02254220222992223], 
                  DiskBox[17, 0.02254220222992223]}}], {
               Background -> GrayLevel[0, 0], FormatType -> TraditionalForm, 
                FrameTicks -> None, ImageSize -> 32}], 
              GridBox[{{
                 TagBox[
                  TemplateBox[{
                    StyleBox["\"Points: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox[
                    "\"\\!\\(\\*RowBox[{\\\"10\\\"}]\\)\"", 
                    StringForm["``", 10], Editable -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 TagBox[
                  TemplateBox[{
                    StyleBox["\"Dimensions: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox["\"\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\"", 
                    StringForm["``", 3], Editable -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 TagBox[
                  TemplateBox[{
                    StyleBox["\"Simplex Count: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox["\"\\!\\(\\*RowBox[{\\\"385\\\"}]\\)\"", 
                    StringForm["``", 385], Editable -> False]}, "RowDefault"],
                   "SummaryItem"]}, {
                 TagBox[
                  TemplateBox[{
                    StyleBox["\"Filtration Length: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox[
                    "\"\\!\\(\\*RowBox[{\\\"45\\\"}]\\)\"", 
                    StringForm["``", 45], Editable -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 TagBox[
                  TemplateBox[{
                    StyleBox["\"Generators: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox[
                    "\"\\!\\(\\*RowBox[{\\\"11\\\"}]\\)\"", 
                    StringForm["``", 11], Editable -> False]}, "RowDefault"], 
                  "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    $CellContext`PersistentHomologyObject[<|
     "Points" -> {{0.04701440397588197, 0.08713244155308142, 
       0.11279730904849528`}, {0.7962060148406873, 0.016707235565696088`, 
       0.8344157102868399}, {0.6557665320827006, 0.4733405592285196, 
       0.05777309011275977}, {0.01583956879915971, 0.7931066455479991, 
       0.3102027000616021}, {0.5210620136940183, 0.14752176746672063`, 
       0.5887472149300073}, {0.460660412670413, 0.8898702211234495, 
       0.36419314750028775`}, {0.6085996572759031, 0.9032442339571805, 
       0.07418559106019917}, {0.9845790531070306, 0.8043379764741339, 
       0.9835618545445848}, {0.12843455087928324`, 0.3749969232020778, 
       0.16051817312960615`}, {0.2068323116355082, 0.8396782879222273, 
       0.5541871851741516}}, "Dimension" -> 3, "MaximumDistance" -> 
      1.466847689542039, 
      "Simplices" -> {{1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {10}, {1, 
        9}, {4, 10}, {6, 10}, {6, 7}, {2, 5}, {3, 7}, {4, 9}, {4, 6}, {4, 6, 
        10}, {3, 9}, {3, 6}, {3, 6, 7}, {9, 10}, {4, 9, 10}, {5, 9}, {7, 
        10}, {6, 7, 10}, {3, 5}, {3, 5, 9}, {6, 9}, {3, 6, 9}, {4, 6, 9}, {6, 
        9, 10}, {4, 6, 9, 10}, {4, 7}, {4, 6, 7}, {4, 7, 10}, {4, 6, 7, 10}, {
        1, 5}, {1, 5, 9}, {7, 9}, {3, 7, 9}, {4, 7, 9}, {6, 7, 9}, {7, 9, 
        10}, {3, 6, 7, 9}, {4, 6, 7, 9}, {4, 7, 9, 10}, {6, 7, 9, 10}, {1, 
        3}, {1, 3, 5}, {1, 3, 9}, {1, 3, 5, 9}, {1, 4}, {1, 4, 9}, {3, 4}, {1,
         3, 4}, {3, 4, 6}, {3, 4, 7}, {3, 4, 9}, {1, 3, 4, 9}, {3, 4, 6, 7}, {
        3, 4, 6, 9}, {3, 4, 7, 9}, {5, 10}, {5, 9, 10}, {3, 10}, {3, 4, 10}, {
        3, 5, 10}, {3, 6, 10}, {3, 7, 10}, {3, 9, 10}, {3, 4, 6, 10}, {3, 4, 
        7, 10}, {3, 4, 9, 10}, {3, 5, 9, 10}, {3, 6, 7, 10}, {3, 6, 9, 10}, {
        3, 7, 9, 10}, {5, 6}, {3, 5, 6}, {5, 6, 9}, {5, 6, 10}, {3, 5, 6, 
        9}, {3, 5, 6, 10}, {5, 6, 9, 10}, {6, 8}, {2, 8}, {4, 5}, {1, 4, 5}, {
        3, 4, 5}, {4, 5, 6}, {4, 5, 9}, {4, 5, 10}, {1, 3, 4, 5}, {1, 4, 5, 
        9}, {3, 4, 5, 6}, {3, 4, 5, 9}, {3, 4, 5, 10}, {4, 5, 6, 9}, {4, 5, 6,
         10}, {4, 5, 9, 10}, {1, 10}, {1, 3, 10}, {1, 4, 10}, {1, 5, 10}, {1, 
        9, 10}, {1, 3, 4, 10}, {1, 3, 5, 10}, {1, 3, 9, 10}, {1, 4, 5, 10}, {
        1, 4, 9, 10}, {1, 5, 9, 10}, {8, 10}, {6, 8, 10}, {5, 8}, {2, 5, 8}, {
        5, 6, 8}, {5, 8, 10}, {5, 6, 8, 10}, {2, 3}, {2, 3, 5}, {5, 7}, {3, 5,
         7}, {4, 5, 7}, {5, 6, 7}, {5, 7, 9}, {5, 7, 10}, {3, 4, 5, 7}, {3, 5,
         6, 7}, {3, 5, 7, 9}, {3, 5, 7, 10}, {4, 5, 6, 7}, {4, 5, 7, 9}, {4, 
        5, 7, 10}, {5, 6, 7, 9}, {5, 6, 7, 10}, {5, 7, 9, 10}, {1, 6}, {1, 3, 
        6}, {1, 4, 6}, {1, 5, 6}, {1, 6, 9}, {1, 6, 10}, {1, 3, 4, 6}, {1, 3, 
        5, 6}, {1, 3, 6, 9}, {1, 3, 6, 10}, {1, 4, 5, 6}, {1, 4, 6, 9}, {1, 4,
         6, 10}, {1, 5, 6, 9}, {1, 5, 6, 10}, {1, 6, 9, 10}, {7, 8}, {5, 7, 
        8}, {6, 7, 8}, {7, 8, 10}, {5, 6, 7, 8}, {5, 7, 8, 10}, {6, 7, 8, 
        10}, {1, 7}, {1, 3, 7}, {1, 4, 7}, {1, 5, 7}, {1, 6, 7}, {1, 7, 9}, {
        1, 7, 10}, {1, 3, 4, 7}, {1, 3, 5, 7}, {1, 3, 6, 7}, {1, 3, 7, 9}, {1,
         3, 7, 10}, {1, 4, 5, 7}, {1, 4, 6, 7}, {1, 4, 7, 9}, {1, 4, 7, 10}, {
        1, 5, 6, 7}, {1, 5, 7, 9}, {1, 5, 7, 10}, {1, 6, 7, 9}, {1, 6, 7, 
        10}, {1, 7, 9, 10}, {2, 9}, {2, 3, 9}, {2, 5, 9}, {2, 3, 5, 9}, {3, 
        8}, {2, 3, 8}, {3, 5, 8}, {3, 6, 8}, {3, 7, 8}, {3, 8, 10}, {2, 3, 5, 
        8}, {3, 5, 6, 8}, {3, 5, 7, 8}, {3, 5, 8, 10}, {3, 6, 7, 8}, {3, 6, 8,
         10}, {3, 7, 8, 10}, {1, 2}, {1, 2, 3}, {1, 2, 5}, {1, 2, 9}, {1, 2, 
        3, 5}, {1, 2, 3, 9}, {1, 2, 5, 9}, {2, 6}, {1, 2, 6}, {2, 3, 6}, {2, 
        5, 6}, {2, 6, 8}, {2, 6, 9}, {1, 2, 3, 6}, {1, 2, 5, 6}, {1, 2, 6, 
        9}, {2, 3, 5, 6}, {2, 3, 6, 8}, {2, 3, 6, 9}, {2, 5, 6, 8}, {2, 5, 6, 
        9}, {2, 10}, {1, 2, 10}, {2, 3, 10}, {2, 5, 10}, {2, 6, 10}, {2, 8, 
        10}, {2, 9, 10}, {1, 2, 3, 10}, {1, 2, 5, 10}, {1, 2, 6, 10}, {1, 2, 
        9, 10}, {2, 3, 5, 10}, {2, 3, 6, 10}, {2, 3, 8, 10}, {2, 3, 9, 10}, {
        2, 5, 6, 10}, {2, 5, 8, 10}, {2, 5, 9, 10}, {2, 6, 8, 10}, {2, 6, 9, 
        10}, {4, 8}, {3, 4, 8}, {4, 5, 8}, {4, 6, 8}, {4, 7, 8}, {4, 8, 10}, {
        3, 4, 5, 8}, {3, 4, 6, 8}, {3, 4, 7, 8}, {3, 4, 8, 10}, {4, 5, 6, 
        8}, {4, 5, 7, 8}, {4, 5, 8, 10}, {4, 6, 7, 8}, {4, 6, 8, 10}, {4, 7, 
        8, 10}, {2, 7}, {1, 2, 7}, {2, 3, 7}, {2, 5, 7}, {2, 6, 7}, {2, 7, 
        8}, {2, 7, 9}, {2, 7, 10}, {1, 2, 3, 7}, {1, 2, 5, 7}, {1, 2, 6, 7}, {
        1, 2, 7, 9}, {1, 2, 7, 10}, {2, 3, 5, 7}, {2, 3, 6, 7}, {2, 3, 7, 
        8}, {2, 3, 7, 9}, {2, 3, 7, 10}, {2, 5, 6, 7}, {2, 5, 7, 8}, {2, 5, 7,
         9}, {2, 5, 7, 10}, {2, 6, 7, 8}, {2, 6, 7, 9}, {2, 6, 7, 10}, {2, 7, 
        8, 10}, {2, 7, 9, 10}, {2, 4}, {1, 2, 4}, {2, 3, 4}, {2, 4, 5}, {2, 4,
         6}, {2, 4, 7}, {2, 4, 8}, {2, 4, 9}, {2, 4, 10}, {1, 2, 3, 4}, {1, 2,
         4, 5}, {1, 2, 4, 6}, {1, 2, 4, 7}, {1, 2, 4, 9}, {1, 2, 4, 10}, {2, 
        3, 4, 5}, {2, 3, 4, 6}, {2, 3, 4, 7}, {2, 3, 4, 8}, {2, 3, 4, 9}, {2, 
        3, 4, 10}, {2, 4, 5, 6}, {2, 4, 5, 7}, {2, 4, 5, 8}, {2, 4, 5, 9}, {2,
         4, 5, 10}, {2, 4, 6, 7}, {2, 4, 6, 8}, {2, 4, 6, 9}, {2, 4, 6, 10}, {
        2, 4, 7, 8}, {2, 4, 7, 9}, {2, 4, 7, 10}, {2, 4, 8, 10}, {2, 4, 9, 
        10}, {8, 9}, {2, 8, 9}, {3, 8, 9}, {4, 8, 9}, {5, 8, 9}, {6, 8, 9}, {
        7, 8, 9}, {8, 9, 10}, {2, 3, 8, 9}, {2, 4, 8, 9}, {2, 5, 8, 9}, {2, 6,
         8, 9}, {2, 7, 8, 9}, {2, 8, 9, 10}, {3, 4, 8, 9}, {3, 5, 8, 9}, {3, 
        6, 8, 9}, {3, 7, 8, 9}, {3, 8, 9, 10}, {4, 5, 8, 9}, {4, 6, 8, 9}, {4,
         7, 8, 9}, {4, 8, 9, 10}, {5, 6, 8, 9}, {5, 7, 8, 9}, {5, 8, 9, 10}, {
        6, 7, 8, 9}, {6, 8, 9, 10}, {7, 8, 9, 10}, {1, 8}, {1, 2, 8}, {1, 3, 
        8}, {1, 4, 8}, {1, 5, 8}, {1, 6, 8}, {1, 7, 8}, {1, 8, 9}, {1, 8, 
        10}, {1, 2, 3, 8}, {1, 2, 4, 8}, {1, 2, 5, 8}, {1, 2, 6, 8}, {1, 2, 7,
         8}, {1, 2, 8, 9}, {1, 2, 8, 10}, {1, 3, 4, 8}, {1, 3, 5, 8}, {1, 3, 
        6, 8}, {1, 3, 7, 8}, {1, 3, 8, 9}, {1, 3, 8, 10}, {1, 4, 5, 8}, {1, 4,
         6, 8}, {1, 4, 7, 8}, {1, 4, 8, 9}, {1, 4, 8, 10}, {1, 5, 6, 8}, {1, 
        5, 7, 8}, {1, 5, 8, 9}, {1, 5, 8, 10}, {1, 6, 7, 8}, {1, 6, 8, 9}, {1,
         6, 8, 10}, {1, 7, 8, 9}, {1, 7, 8, 10}, {1, 8, 9, 10}}, 
      "SimplexWeights" -> CompressedData["
1:eJxTTMoPSmVkYGBoBBFUBm+YfgXHJl+2V7j5q3EG7xX7GQkfxJK6r9gfXi0X
1HDriv1717YiA56b9qtNM3tebLptv4fjVL1H0F17NatUx5VhCHoPb+4l56qH
9iUZsWsmrEfQFn1HGR2WPYbTVxa9uq7//bE9U/kLWwOlJ3BaKTGm2T8VQUcc
b3fbuZIw3XankPXrdtz0/4h+Pd2pT+F0TdfqxBlMzymml/le/cGkjJv2r/y8
ZHYVgma5WN1Y4faCYtp1WaR4dySCXibSmdacRXt68dFJehufkE7viT71sUHq
lb3w1NKH5yJf2bM/WbBw1ZbXdKM9Tj+/9inxDdXpRau6+VuLEfQJwU6JVysI
00v7N2yfrfsWTu/V3a35JXng6NszGLn5/w8cfcFbddPVpe9Jpov6e46t3zl0
aH73P0IXLD/gpDfPWOIeNY32dNEaJv+cdaTTuy0nRAUfoB+9+bv5Kulzg5dW
LhNaPfnBpwGjK/yZnR+9GX40c7XMOa6mz6M0Gt2sNdG9xeTLsKcD9uZ4mFZ8
H6UJ0ACEUec1
       "], 
      "IntervalIndices" -> {{9, 11}, {10, 12}, {6, 13}, {7, 14}, {5, 15}, {4, 
       16}, {3, 17}, {2, 25}, {20, 32}, {8, 87}, {88, 118}}, 
      "Intervals" -> {{0., 0.30293973160591636`}, {0., 0.3133298177084658}, {
       0., 0.3210072731030862}, {0., 0.32583625812065636`}, {0., 
       0.39136897262605336`}, {0., 0.43279470169076245`}, {0., 
       0.45814716796315813`}, {0., 0.6239241807098446}, {0.5461749181635507, 
       0.645718229059848}, {0., 0.8157353136510817}, {0.8234629062177724, 
       0.8956194380958147}}, "FiltrationRadii" -> CompressedData["
1:eJwBfQGC/iFib1JlAQAAAC4AAAAAAAAAAAAAAOwC+lNdY9M/INn6gZgN1D+Y
YPAWYovUP8OrHlKA2tQ/70WGcjAM2T+rNWmM6LLbP7wIyn9IUt0/JjplQalW
3T+8DW3SQ3rhP3RoXayQr+E/OI7FAUCm4z/UourXL/fjPwJ36D0wIuQ/ImFc
g09l5D9Yx4dGuankP4bccQX1t+Q//1iPLi2V5T98iqthmALnP6ZN1fgCI+c/
T3nzpJt65z8E0XuBeEboP0WmWReLWeg/phSJZoNq6D+jxZIuseToP7xbyvGA
Guo/E5V14c5Z6j8H5KChqrTrP0jL59byYew/oqqLD4Vz7D/IEYkY6qjsP6WP
sLebLe0/vS27KfRj7T/bmAELD//tP9BLJbLVpe8/co+Mxq+57z8PR/wS0Dnw
P7OYpEdalvA/cqwCT2yu8D+7OZBaU8DwP7P3N6obzvA/I3YSq5Pg8j94TwND
4uzyPwN7HM4KgvM/gyqRR4Q09D9QvWxINXj3P0XPugM=
       "], "Edges" -> {
        DirectedEdge[12, 13], 
        DirectedEdge[14, 16], 
        DirectedEdge[13, 16], 
        DirectedEdge[11, 17], 
        DirectedEdge[16, 17], 
        DirectedEdge[13, 18], 
        DirectedEdge[11, 20], 
        DirectedEdge[17, 20], 
        DirectedEdge[13, 21], 
        DirectedEdge[16, 21], 
        DirectedEdge[12, 23], 
        DirectedEdge[11, 23], 
        DirectedEdge[16, 23], 
        DirectedEdge[17, 23], 
        DirectedEdge[11, 25], 
        DirectedEdge[15, 25], 
        DirectedEdge[12, 26], 
        DirectedEdge[14, 26], 
        DirectedEdge[13, 26], 
        DirectedEdge[15, 28], 
        DirectedEdge[17, 28], 
        DirectedEdge[25, 28], 
        DirectedEdge[11, 30], 
        DirectedEdge[13, 30], 
        DirectedEdge[16, 30], 
        DirectedEdge[17, 30], 
        DirectedEdge[31, 32], 
        DirectedEdge[22, 32], 
        DirectedEdge[31, 33], 
        DirectedEdge[24, 33], 
        DirectedEdge[22, 33], 
        DirectedEdge[32, 33], 
        DirectedEdge[19, 33], 
        DirectedEdge[14, 35], 
        DirectedEdge[13, 35], 
        DirectedEdge[36, 37], 
        DirectedEdge[27, 37], 
        DirectedEdge[19, 37], 
        DirectedEdge[15, 39], 
        DirectedEdge[25, 39], 
        DirectedEdge[11, 41], 
        DirectedEdge[14, 41], 
        DirectedEdge[13, 41], 
        DirectedEdge[16, 41], 
        DirectedEdge[17, 41], 
        DirectedEdge[42, 43], 
        DirectedEdge[36, 43], 
        DirectedEdge[32, 43], 
        DirectedEdge[42, 44], 
        DirectedEdge[31, 44], 
        DirectedEdge[22, 44], 
        DirectedEdge[42, 45], 
        DirectedEdge[27, 45], 
        DirectedEdge[24, 45], 
        DirectedEdge[32, 45], 
        DirectedEdge[19, 45], 
        DirectedEdge[46, 47], 
        DirectedEdge[48, 49], 
        DirectedEdge[46, 49], 
        DirectedEdge[47, 49], 
        DirectedEdge[38, 49], 
        DirectedEdge[34, 49], 
        DirectedEdge[17, 50], 
        DirectedEdge[51, 52], 
        DirectedEdge[40, 52], 
        DirectedEdge[29, 52], 
        DirectedEdge[16, 54], 
        DirectedEdge[17, 54], 
        DirectedEdge[16, 56], 
        DirectedEdge[57, 58], 
        DirectedEdge[55, 58], 
        DirectedEdge[51, 58], 
        DirectedEdge[40, 58], 
        DirectedEdge[29, 58], 
        DirectedEdge[22, 58], 
        DirectedEdge[32, 58], 
        DirectedEdge[57, 59], 
        DirectedEdge[55, 59], 
        DirectedEdge[51, 59], 
        DirectedEdge[40, 59], 
        DirectedEdge[36, 59], 
        DirectedEdge[29, 59], 
        DirectedEdge[32, 59], 
        DirectedEdge[57, 60], 
        DirectedEdge[55, 60], 
        DirectedEdge[51, 60], 
        DirectedEdge[40, 60], 
        DirectedEdge[29, 60], 
        DirectedEdge[61, 63], 
        DirectedEdge[61, 64], 
        DirectedEdge[62, 64], 
        DirectedEdge[63, 64], 
        DirectedEdge[47, 64], 
        DirectedEdge[12, 65], 
        DirectedEdge[15, 65], 
        DirectedEdge[16, 65], 
        DirectedEdge[17, 65], 
        DirectedEdge[25, 65], 
        DirectedEdge[12, 67], 
        DirectedEdge[16, 67], 
        DirectedEdge[68, 69], 
        DirectedEdge[66, 69], 
        DirectedEdge[57, 69], 
        DirectedEdge[55, 69], 
        DirectedEdge[51, 69], 
        DirectedEdge[40, 69], 
        DirectedEdge[24, 69], 
        DirectedEdge[68, 70], 
        DirectedEdge[57, 70], 
        DirectedEdge[55, 70], 
        DirectedEdge[51, 70], 
        DirectedEdge[40, 70], 
        DirectedEdge[29, 70], 
        DirectedEdge[22, 70], 
        DirectedEdge[32, 70], 
        DirectedEdge[19, 70], 
        DirectedEdge[68, 71], 
        DirectedEdge[57, 71], 
        DirectedEdge[55, 71], 
        DirectedEdge[51, 71], 
        DirectedEdge[40, 71], 
        DirectedEdge[29, 71], 
        DirectedEdge[27, 71], 
        DirectedEdge[32, 71], 
        DirectedEdge[19, 71], 
        DirectedEdge[68, 72], 
        DirectedEdge[57, 72], 
        DirectedEdge[55, 72], 
        DirectedEdge[51, 72], 
        DirectedEdge[40, 72], 
        DirectedEdge[29, 72], 
        DirectedEdge[24, 72], 
        DirectedEdge[75, 76], 
        DirectedEdge[74, 77], 
        DirectedEdge[73, 77], 
        DirectedEdge[62, 77], 
        DirectedEdge[38, 77], 
        DirectedEdge[75, 78], 
        DirectedEdge[73, 78], 
        DirectedEdge[61, 78], 
        DirectedEdge[63, 78], 
        DirectedEdge[34, 78], 
        DirectedEdge[75, 79], 
        DirectedEdge[74, 79], 
        DirectedEdge[61, 79], 
        DirectedEdge[62, 79], 
        DirectedEdge[63, 79], 
        DirectedEdge[48, 79], 
        DirectedEdge[47, 79], 
        DirectedEdge[13, 80], 
        DirectedEdge[15, 80], 
        DirectedEdge[16, 80], 
        DirectedEdge[17, 80], 
        DirectedEdge[25, 80], 
        DirectedEdge[81, 82], 
        DirectedEdge[31, 82], 
        DirectedEdge[29, 82], 
        DirectedEdge[81, 83], 
        DirectedEdge[66, 83], 
        DirectedEdge[29, 83], 
        DirectedEdge[24, 83], 
        DirectedEdge[22, 83], 
        DirectedEdge[32, 83], 
        DirectedEdge[19, 83], 
        DirectedEdge[85, 86], 
        DirectedEdge[84, 86], 
        DirectedEdge[73, 86], 
        DirectedEdge[76, 86], 
        DirectedEdge[61, 86], 
        DirectedEdge[63, 86], 
        DirectedEdge[34, 86], 
        DirectedEdge[87, 88], 
        DirectedEdge[13, 88], 
        DirectedEdge[16, 88], 
        DirectedEdge[17, 88], 
        DirectedEdge[25, 88], 
        DirectedEdge[15, 89], 
        DirectedEdge[16, 89], 
        DirectedEdge[17, 89], 
        DirectedEdge[25, 89], 
        DirectedEdge[90, 91], 
        DirectedEdge[57, 91], 
        DirectedEdge[51, 91], 
        DirectedEdge[90, 92], 
        DirectedEdge[81, 92], 
        DirectedEdge[55, 92], 
        DirectedEdge[40, 92], 
        DirectedEdge[29, 92], 
        DirectedEdge[22, 92], 
        DirectedEdge[32, 92], 
        DirectedEdge[90, 93], 
        DirectedEdge[55, 93], 
        DirectedEdge[40, 93], 
        DirectedEdge[90, 94], 
        DirectedEdge[66, 94], 
        DirectedEdge[55, 94], 
        DirectedEdge[40, 94], 
        DirectedEdge[24, 94], 
        DirectedEdge[96, 98], 
        DirectedEdge[95, 98], 
        DirectedEdge[61, 98], 
        DirectedEdge[53, 98], 
        DirectedEdge[96, 100], 
        DirectedEdge[97, 100], 
        DirectedEdge[95, 100], 
        DirectedEdge[84, 100], 
        DirectedEdge[63, 100], 
        DirectedEdge[53, 100], 
        DirectedEdge[99, 101], 
        DirectedEdge[97, 101], 
        DirectedEdge[85, 101], 
        DirectedEdge[73, 101], 
        DirectedEdge[99, 102], 
        DirectedEdge[96, 102], 
        DirectedEdge[95, 102], 
        DirectedEdge[76, 102], 
        DirectedEdge[61, 102], 
        DirectedEdge[53, 102], 
        DirectedEdge[12, 103], 
        DirectedEdge[16, 103], 
        DirectedEdge[17, 103], 
        DirectedEdge[104, 105], 
        DirectedEdge[68, 105], 
        DirectedEdge[57, 105], 
        DirectedEdge[104, 106], 
        DirectedEdge[68, 106], 
        DirectedEdge[66, 106], 
        DirectedEdge[57, 106], 
        DirectedEdge[55, 106], 
        DirectedEdge[40, 106], 
        DirectedEdge[24, 106], 
        DirectedEdge[104, 107], 
        DirectedEdge[68, 107], 
        DirectedEdge[57, 107], 
        DirectedEdge[55, 107], 
        DirectedEdge[24, 107], 
        DirectedEdge[109, 111], 
        DirectedEdge[108, 111], 
        DirectedEdge[99, 111], 
        DirectedEdge[95, 111], 
        DirectedEdge[110, 112], 
        DirectedEdge[108, 112], 
        DirectedEdge[75, 112], 
        DirectedEdge[61, 112], 
        DirectedEdge[110, 113], 
        DirectedEdge[109, 113], 
        DirectedEdge[75, 113], 
        DirectedEdge[76, 113], 
        DirectedEdge[53, 113], 
        DirectedEdge[12, 114], 
        DirectedEdge[87, 114], 
        DirectedEdge[13, 114], 
        DirectedEdge[87, 116], 
        DirectedEdge[13, 116], 
        DirectedEdge[15, 116], 
        DirectedEdge[16, 116], 
        DirectedEdge[17, 116], 
        DirectedEdge[25, 116], 
        DirectedEdge[117, 118], 
        DirectedEdge[117, 119], 
        DirectedEdge[115, 119], 
        DirectedEdge[118, 119], 
        DirectedEdge[81, 119], 
        DirectedEdge[66, 119], 
        DirectedEdge[29, 119], 
        DirectedEdge[24, 119], 
        DirectedEdge[22, 119], 
        DirectedEdge[32, 119], 
        DirectedEdge[19, 119], 
        DirectedEdge[17, 121], 
        DirectedEdge[25, 121], 
        DirectedEdge[14, 123], 
        DirectedEdge[13, 123], 
        DirectedEdge[15, 123], 
        DirectedEdge[16, 123], 
        DirectedEdge[17, 123], 
        DirectedEdge[25, 123], 
        DirectedEdge[124, 125], 
        DirectedEdge[90, 125], 
        DirectedEdge[55, 125], 
        DirectedEdge[40, 125], 
        DirectedEdge[36, 125], 
        DirectedEdge[29, 125], 
        DirectedEdge[32, 125], 
        DirectedEdge[124, 126], 
        DirectedEdge[81, 126], 
        DirectedEdge[22, 126], 
        DirectedEdge[124, 127], 
        DirectedEdge[42, 127], 
        DirectedEdge[29, 127], 
        DirectedEdge[124, 128], 
        DirectedEdge[66, 128], 
        DirectedEdge[29, 128], 
        DirectedEdge[27, 128], 
        DirectedEdge[24, 128], 
        DirectedEdge[32, 128], 
        DirectedEdge[19, 128], 
        DirectedEdge[130, 133], 
        DirectedEdge[129, 133], 
        DirectedEdge[97, 133], 
        DirectedEdge[62, 133], 
        DirectedEdge[131, 134], 
        DirectedEdge[129, 134], 
        DirectedEdge[96, 134], 
        DirectedEdge[95, 134], 
        DirectedEdge[62, 134], 
        DirectedEdge[63, 134], 
        DirectedEdge[53, 134], 
        DirectedEdge[47, 134], 
        DirectedEdge[132, 135], 
        DirectedEdge[129, 135], 
        DirectedEdge[99, 135], 
        DirectedEdge[74, 135], 
        DirectedEdge[131, 136], 
        DirectedEdge[130, 136], 
        DirectedEdge[84, 136], 
        DirectedEdge[46, 136], 
        DirectedEdge[132, 137], 
        DirectedEdge[130, 137], 
        DirectedEdge[85, 137], 
        DirectedEdge[74, 137], 
        DirectedEdge[73, 137], 
        DirectedEdge[62, 137], 
        DirectedEdge[38, 137], 
        DirectedEdge[132, 138], 
        DirectedEdge[131, 138], 
        DirectedEdge[74, 138], 
        DirectedEdge[76, 138], 
        DirectedEdge[61, 138], 
        DirectedEdge[62, 138], 
        DirectedEdge[63, 138], 
        DirectedEdge[48, 138], 
        DirectedEdge[47, 138], 
        DirectedEdge[13, 139], 
        DirectedEdge[16, 139], 
        DirectedEdge[17, 139], 
        DirectedEdge[140, 141], 
        DirectedEdge[55, 141], 
        DirectedEdge[51, 141], 
        DirectedEdge[40, 141], 
        DirectedEdge[29, 141], 
        DirectedEdge[22, 141], 
        DirectedEdge[32, 141], 
        DirectedEdge[140, 142], 
        DirectedEdge[81, 142], 
        DirectedEdge[51, 142], 
        DirectedEdge[140, 143], 
        DirectedEdge[51, 143], 
        DirectedEdge[40, 143], 
        DirectedEdge[31, 143], 
        DirectedEdge[29, 143], 
        DirectedEdge[140, 144], 
        DirectedEdge[104, 144], 
        DirectedEdge[68, 144], 
        DirectedEdge[57, 144], 
        DirectedEdge[55, 144], 
        DirectedEdge[51, 144], 
        DirectedEdge[40, 144], 
        DirectedEdge[29, 144], 
        DirectedEdge[22, 144], 
        DirectedEdge[32, 144], 
        DirectedEdge[19, 144], 
        DirectedEdge[146, 149], 
        DirectedEdge[145, 149], 
        DirectedEdge[97, 149], 
        DirectedEdge[95, 149], 
        DirectedEdge[147, 150], 
        DirectedEdge[145, 150], 
        DirectedEdge[63, 150], 
        DirectedEdge[148, 151], 
        DirectedEdge[145, 151], 
        DirectedEdge[108, 151], 
        DirectedEdge[73, 151], 
        DirectedEdge[147, 152], 
        DirectedEdge[146, 152], 
        DirectedEdge[84, 152], 
        DirectedEdge[53, 152], 
        DirectedEdge[148, 153], 
        DirectedEdge[146, 153], 
        DirectedEdge[109, 153], 
        DirectedEdge[85, 153], 
        DirectedEdge[148, 154], 
        DirectedEdge[147, 154], 
        DirectedEdge[110, 154], 
        DirectedEdge[75, 154], 
        DirectedEdge[73, 154], 
        DirectedEdge[61, 154], 
        DirectedEdge[63, 154], 
        DirectedEdge[34, 154], 
        DirectedEdge[87, 155], 
        DirectedEdge[14, 155], 
        DirectedEdge[156, 157], 
        DirectedEdge[124, 157], 
        DirectedEdge[117, 157], 
        DirectedEdge[118, 157], 
        DirectedEdge[81, 157], 
        DirectedEdge[22, 157], 
        DirectedEdge[156, 158], 
        DirectedEdge[124, 158], 
        DirectedEdge[117, 158], 
        DirectedEdge[115, 158], 
        DirectedEdge[118, 158], 
        DirectedEdge[81, 158], 
        DirectedEdge[27, 158], 
        DirectedEdge[22, 158], 
        DirectedEdge[160, 161], 
        DirectedEdge[159, 161], 
        DirectedEdge[132, 161], 
        DirectedEdge[130, 161], 
        DirectedEdge[120, 161], 
        DirectedEdge[85, 161], 
        DirectedEdge[74, 161], 
        DirectedEdge[73, 161], 
        DirectedEdge[62, 161], 
        DirectedEdge[38, 161], 
        DirectedEdge[14, 162], 
        DirectedEdge[13, 162], 
        DirectedEdge[16, 162], 
        DirectedEdge[17, 162], 
        DirectedEdge[163, 164], 
        DirectedEdge[55, 164], 
        DirectedEdge[51, 164], 
        DirectedEdge[40, 164], 
        DirectedEdge[36, 164], 
        DirectedEdge[29, 164], 
        DirectedEdge[32, 164], 
        DirectedEdge[163, 165], 
        DirectedEdge[124, 165], 
        DirectedEdge[51, 165], 
        DirectedEdge[163, 166], 
        DirectedEdge[140, 166], 
        DirectedEdge[22, 166], 
        DirectedEdge[163, 167], 
        DirectedEdge[51, 167], 
        DirectedEdge[42, 167], 
        DirectedEdge[40, 167], 
        DirectedEdge[29, 167], 
        DirectedEdge[163, 168], 
        DirectedEdge[104, 168], 
        DirectedEdge[68, 168], 
        DirectedEdge[57, 168], 
        DirectedEdge[55, 168], 
        DirectedEdge[51, 168], 
        DirectedEdge[40, 168], 
        DirectedEdge[29, 168], 
        DirectedEdge[27, 168], 
        DirectedEdge[32, 168], 
        DirectedEdge[19, 168], 
        DirectedEdge[170, 174], 
        DirectedEdge[169, 174], 
        DirectedEdge[129, 174], 
        DirectedEdge[95, 174], 
        DirectedEdge[171, 175], 
        DirectedEdge[169, 175], 
        DirectedEdge[145, 175], 
        DirectedEdge[62, 175], 
        DirectedEdge[172, 176], 
        DirectedEdge[169, 176], 
        DirectedEdge[62, 176], 
        DirectedEdge[63, 176], 
        DirectedEdge[47, 176], 
        DirectedEdge[173, 177], 
        DirectedEdge[169, 177], 
        DirectedEdge[108, 177], 
        DirectedEdge[74, 177], 
        DirectedEdge[171, 178], 
        DirectedEdge[170, 178], 
        DirectedEdge[146, 178], 
        DirectedEdge[130, 178], 
        DirectedEdge[172, 179], 
        DirectedEdge[170, 179], 
        DirectedEdge[131, 179], 
        DirectedEdge[53, 179], 
        DirectedEdge[173, 180], 
        DirectedEdge[170, 180], 
        DirectedEdge[132, 180], 
        DirectedEdge[109, 180], 
        DirectedEdge[172, 181], 
        DirectedEdge[171, 181], 
        DirectedEdge[147, 181], 
        DirectedEdge[46, 181], 
        DirectedEdge[173, 182], 
        DirectedEdge[171, 182], 
        DirectedEdge[148, 182], 
        DirectedEdge[74, 182], 
        DirectedEdge[73, 182], 
        DirectedEdge[62, 182], 
        DirectedEdge[38, 182], 
        DirectedEdge[173, 183], 
        DirectedEdge[172, 183], 
        DirectedEdge[110, 183], 
        DirectedEdge[75, 183], 
        DirectedEdge[74, 183], 
        DirectedEdge[61, 183], 
        DirectedEdge[62, 183], 
        DirectedEdge[63, 183], 
        DirectedEdge[48, 183], 
        DirectedEdge[47, 183], 
        DirectedEdge[11, 184], 
        DirectedEdge[25, 184], 
        DirectedEdge[185, 186], 
        DirectedEdge[122, 186], 
        DirectedEdge[29, 186], 
        DirectedEdge[87, 188], 
        DirectedEdge[13, 188], 
        DirectedEdge[16, 188], 
        DirectedEdge[189, 190], 
        DirectedEdge[122, 190], 
        DirectedEdge[117, 190], 
        DirectedEdge[189, 191], 
        DirectedEdge[122, 191], 
        DirectedEdge[118, 191], 
        DirectedEdge[81, 191], 
        DirectedEdge[189, 192], 
        DirectedEdge[156, 192], 
        DirectedEdge[124, 192], 
        DirectedEdge[122, 192], 
        DirectedEdge[117, 192], 
        DirectedEdge[189, 193], 
        DirectedEdge[122, 193], 
        DirectedEdge[115, 193], 
        DirectedEdge[118, 193], 
        DirectedEdge[81, 193], 
        DirectedEdge[68, 193], 
        DirectedEdge[57, 193], 
        DirectedEdge[55, 193], 
        DirectedEdge[51, 193], 
        DirectedEdge[40, 193], 
        DirectedEdge[29, 193], 
        DirectedEdge[22, 193], 
        DirectedEdge[32, 193], 
        DirectedEdge[19, 193], 
        DirectedEdge[196, 198], 
        DirectedEdge[195, 198], 
        DirectedEdge[159, 198], 
        DirectedEdge[130, 198], 
        DirectedEdge[197, 199], 
        DirectedEdge[195, 199], 
        DirectedEdge[120, 199], 
        DirectedEdge[85, 199], 
        DirectedEdge[197, 200], 
        DirectedEdge[196, 200], 
        DirectedEdge[160, 200], 
        DirectedEdge[132, 200], 
        DirectedEdge[25, 201], 
        DirectedEdge[202, 203], 
        DirectedEdge[122, 203], 
        DirectedEdge[51, 203], 
        DirectedEdge[202, 204], 
        DirectedEdge[185, 204], 
        DirectedEdge[51, 204], 
        DirectedEdge[40, 204], 
        DirectedEdge[29, 204], 
        DirectedEdge[206, 207], 
        DirectedEdge[205, 207], 
        DirectedEdge[187, 207], 
        DirectedEdge[53, 207], 
        DirectedEdge[13, 208], 
        DirectedEdge[16, 208], 
        DirectedEdge[17, 208], 
        DirectedEdge[25, 208], 
        DirectedEdge[209, 210], 
        DirectedEdge[202, 210], 
        DirectedEdge[140, 210], 
        DirectedEdge[209, 211], 
        DirectedEdge[202, 211], 
        DirectedEdge[140, 211], 
        DirectedEdge[122, 211], 
        DirectedEdge[81, 211], 
        DirectedEdge[209, 212], 
        DirectedEdge[202, 212], 
        DirectedEdge[140, 212], 
        DirectedEdge[122, 212], 
        DirectedEdge[118, 212], 
        DirectedEdge[81, 212], 
        DirectedEdge[209, 213], 
        DirectedEdge[202, 213], 
        DirectedEdge[185, 213], 
        DirectedEdge[140, 213], 
        DirectedEdge[31, 213], 
        DirectedEdge[215, 217], 
        DirectedEdge[214, 217], 
        DirectedEdge[205, 217], 
        DirectedEdge[146, 217], 
        DirectedEdge[216, 219], 
        DirectedEdge[214, 219], 
        DirectedEdge[206, 219], 
        DirectedEdge[147, 219], 
        DirectedEdge[218, 220], 
        DirectedEdge[215, 220], 
        DirectedEdge[214, 220], 
        DirectedEdge[205, 220], 
        DirectedEdge[195, 220], 
        DirectedEdge[194, 220], 
        DirectedEdge[146, 220], 
        DirectedEdge[216, 221], 
        DirectedEdge[215, 221], 
        DirectedEdge[206, 221], 
        DirectedEdge[205, 221], 
        DirectedEdge[187, 221], 
        DirectedEdge[147, 221], 
        DirectedEdge[146, 221], 
        DirectedEdge[84, 221], 
        DirectedEdge[12, 222], 
        DirectedEdge[16, 222], 
        DirectedEdge[17, 222], 
        DirectedEdge[25, 222], 
        DirectedEdge[223, 224], 
        DirectedEdge[202, 224], 
        DirectedEdge[104, 224], 
        DirectedEdge[223, 225], 
        DirectedEdge[202, 225], 
        DirectedEdge[122, 225], 
        DirectedEdge[104, 225], 
        DirectedEdge[68, 225], 
        DirectedEdge[66, 225], 
        DirectedEdge[57, 225], 
        DirectedEdge[55, 225], 
        DirectedEdge[51, 225], 
        DirectedEdge[40, 225], 
        DirectedEdge[24, 225], 
        DirectedEdge[223, 226], 
        DirectedEdge[209, 226], 
        DirectedEdge[140, 226], 
        DirectedEdge[104, 226], 
        DirectedEdge[68, 226], 
        DirectedEdge[57, 226], 
        DirectedEdge[55, 226], 
        DirectedEdge[51, 226], 
        DirectedEdge[40, 226], 
        DirectedEdge[29, 226], 
        DirectedEdge[22, 226], 
        DirectedEdge[32, 226], 
        DirectedEdge[19, 226], 
        DirectedEdge[223, 227], 
        DirectedEdge[202, 227], 
        DirectedEdge[122, 227], 
        DirectedEdge[115, 227], 
        DirectedEdge[104, 227], 
        DirectedEdge[118, 227], 
        DirectedEdge[81, 227], 
        DirectedEdge[68, 227], 
        DirectedEdge[57, 227], 
        DirectedEdge[55, 227], 
        DirectedEdge[51, 227], 
        DirectedEdge[40, 227], 
        DirectedEdge[29, 227], 
        DirectedEdge[22, 227], 
        DirectedEdge[32, 227], 
        DirectedEdge[19, 227], 
        DirectedEdge[223, 228], 
        DirectedEdge[202, 228], 
        DirectedEdge[185, 228], 
        DirectedEdge[104, 228], 
        DirectedEdge[68, 228], 
        DirectedEdge[57, 228], 
        DirectedEdge[55, 228], 
        DirectedEdge[51, 228], 
        DirectedEdge[40, 228], 
        DirectedEdge[29, 228], 
        DirectedEdge[24, 228], 
        DirectedEdge[230, 233], 
        DirectedEdge[229, 233], 
        DirectedEdge[205, 233], 
        DirectedEdge[109, 233], 
        DirectedEdge[231, 234], 
        DirectedEdge[229, 234], 
        DirectedEdge[214, 234], 
        DirectedEdge[148, 234], 
        DirectedEdge[232, 236], 
        DirectedEdge[229, 236], 
        DirectedEdge[206, 236], 
        DirectedEdge[110, 236], 
        DirectedEdge[231, 237], 
        DirectedEdge[230, 237], 
        DirectedEdge[215, 237], 
        DirectedEdge[148, 237], 
        DirectedEdge[146, 237], 
        DirectedEdge[109, 237], 
        DirectedEdge[85, 237], 
        DirectedEdge[235, 238], 
        DirectedEdge[230, 238], 
        DirectedEdge[229, 238], 
        DirectedEdge[205, 238], 
        DirectedEdge[197, 238], 
        DirectedEdge[194, 238], 
        DirectedEdge[109, 238], 
        DirectedEdge[232, 239], 
        DirectedEdge[230, 239], 
        DirectedEdge[206, 239], 
        DirectedEdge[205, 239], 
        DirectedEdge[187, 239], 
        DirectedEdge[110, 239], 
        DirectedEdge[109, 239], 
        DirectedEdge[75, 239], 
        DirectedEdge[76, 239], 
        DirectedEdge[235, 240], 
        DirectedEdge[231, 240], 
        DirectedEdge[229, 240], 
        DirectedEdge[218, 240], 
        DirectedEdge[214, 240], 
        DirectedEdge[197, 240], 
        DirectedEdge[195, 240], 
        DirectedEdge[148, 240], 
        DirectedEdge[120, 240], 
        DirectedEdge[85, 240], 
        DirectedEdge[232, 241], 
        DirectedEdge[231, 241], 
        DirectedEdge[216, 241], 
        DirectedEdge[148, 241], 
        DirectedEdge[147, 241], 
        DirectedEdge[110, 241], 
        DirectedEdge[75, 241], 
        DirectedEdge[73, 241], 
        DirectedEdge[61, 241], 
        DirectedEdge[63, 241], 
        DirectedEdge[34, 241], 
        DirectedEdge[87, 242], 
        DirectedEdge[13, 242], 
        DirectedEdge[243, 244], 
        DirectedEdge[189, 244], 
        DirectedEdge[122, 244], 
        DirectedEdge[117, 244], 
        DirectedEdge[90, 244], 
        DirectedEdge[57, 244], 
        DirectedEdge[51, 244], 
        DirectedEdge[243, 245], 
        DirectedEdge[189, 245], 
        DirectedEdge[122, 245], 
        DirectedEdge[118, 245], 
        DirectedEdge[81, 245], 
        DirectedEdge[57, 245], 
        DirectedEdge[55, 245], 
        DirectedEdge[51, 245], 
        DirectedEdge[40, 245], 
        DirectedEdge[29, 245], 
        DirectedEdge[22, 245], 
        DirectedEdge[32, 245], 
        DirectedEdge[243, 246], 
        DirectedEdge[189, 246], 
        DirectedEdge[156, 246], 
        DirectedEdge[124, 246], 
        DirectedEdge[122, 246], 
        DirectedEdge[117, 246], 
        DirectedEdge[57, 246], 
        DirectedEdge[55, 246], 
        DirectedEdge[51, 246], 
        DirectedEdge[40, 246], 
        DirectedEdge[36, 246], 
        DirectedEdge[29, 246], 
        DirectedEdge[32, 246], 
        DirectedEdge[243, 247], 
        DirectedEdge[189, 247], 
        DirectedEdge[122, 247], 
        DirectedEdge[115, 247], 
        DirectedEdge[118, 247], 
        DirectedEdge[81, 247], 
        DirectedEdge[57, 247], 
        DirectedEdge[55, 247], 
        DirectedEdge[51, 247], 
        DirectedEdge[40, 247], 
        DirectedEdge[29, 247], 
        DirectedEdge[22, 247], 
        DirectedEdge[32, 247], 
        DirectedEdge[19, 247], 
        DirectedEdge[249, 252], 
        DirectedEdge[248, 252], 
        DirectedEdge[195, 252], 
        DirectedEdge[97, 252], 
        DirectedEdge[250, 253], 
        DirectedEdge[248, 253], 
        DirectedEdge[196, 253], 
        DirectedEdge[129, 253], 
        DirectedEdge[251, 254], 
        DirectedEdge[248, 254], 
        DirectedEdge[197, 254], 
        DirectedEdge[99, 254], 
        DirectedEdge[250, 255], 
        DirectedEdge[249, 255], 
        DirectedEdge[196, 255], 
        DirectedEdge[195, 255], 
        DirectedEdge[159, 255], 
        DirectedEdge[130, 255], 
        DirectedEdge[62, 255], 
        DirectedEdge[251, 256], 
        DirectedEdge[249, 256], 
        DirectedEdge[197, 256], 
        DirectedEdge[195, 256], 
        DirectedEdge[120, 256], 
        DirectedEdge[85, 256], 
        DirectedEdge[73, 256], 
        DirectedEdge[251, 257], 
        DirectedEdge[250, 257], 
        DirectedEdge[197, 257], 
        DirectedEdge[196, 257], 
        DirectedEdge[160, 257], 
        DirectedEdge[132, 257], 
        DirectedEdge[74, 257], 
        DirectedEdge[14, 258], 
        DirectedEdge[13, 258], 
        DirectedEdge[16, 258], 
        DirectedEdge[17, 258], 
        DirectedEdge[25, 258], 
        DirectedEdge[259, 260], 
        DirectedEdge[202, 260], 
        DirectedEdge[163, 260], 
        DirectedEdge[259, 261], 
        DirectedEdge[202, 261], 
        DirectedEdge[163, 261], 
        DirectedEdge[124, 261], 
        DirectedEdge[122, 261], 
        DirectedEdge[259, 262], 
        DirectedEdge[209, 262], 
        DirectedEdge[163, 262], 
        DirectedEdge[140, 262], 
        DirectedEdge[22, 262], 
        DirectedEdge[259, 263], 
        DirectedEdge[202, 263], 
        DirectedEdge[163, 263], 
        DirectedEdge[156, 263], 
        DirectedEdge[124, 263], 
        DirectedEdge[122, 263], 
        DirectedEdge[117, 263], 
        DirectedEdge[259, 264], 
        DirectedEdge[202, 264], 
        DirectedEdge[185, 264], 
        DirectedEdge[163, 264], 
        DirectedEdge[42, 264], 
        DirectedEdge[259, 265], 
        DirectedEdge[223, 265], 
        DirectedEdge[163, 265], 
        DirectedEdge[104, 265], 
        DirectedEdge[68, 265], 
        DirectedEdge[57, 265], 
        DirectedEdge[55, 265], 
        DirectedEdge[51, 265], 
        DirectedEdge[40, 265], 
        DirectedEdge[29, 265], 
        DirectedEdge[27, 265], 
        DirectedEdge[32, 265], 
        DirectedEdge[19, 265], 
        DirectedEdge[267, 271], 
        DirectedEdge[266, 271], 
        DirectedEdge[205, 271], 
        DirectedEdge[170, 271], 
        DirectedEdge[268, 272], 
        DirectedEdge[266, 272], 
        DirectedEdge[214, 272], 
        DirectedEdge[171, 272], 
        DirectedEdge[269, 274], 
        DirectedEdge[266, 274], 
        DirectedEdge[206, 274], 
        DirectedEdge[172, 274], 
        DirectedEdge[270, 275], 
        DirectedEdge[266, 275], 
        DirectedEdge[229, 275], 
        DirectedEdge[173, 275], 
        DirectedEdge[268, 276], 
        DirectedEdge[267, 276], 
        DirectedEdge[215, 276], 
        DirectedEdge[171, 276], 
        DirectedEdge[170, 276], 
        DirectedEdge[146, 276], 
        DirectedEdge[130, 276], 
        DirectedEdge[273, 277], 
        DirectedEdge[267, 277], 
        DirectedEdge[266, 277], 
        DirectedEdge[205, 277], 
        DirectedEdge[196, 277], 
        DirectedEdge[194, 277], 
        DirectedEdge[170, 277], 
        DirectedEdge[269, 278], 
        DirectedEdge[267, 278], 
        DirectedEdge[206, 278], 
        DirectedEdge[205, 278], 
        DirectedEdge[187, 278], 
        DirectedEdge[172, 278], 
        DirectedEdge[170, 278], 
        DirectedEdge[131, 278], 
        DirectedEdge[270, 279], 
        DirectedEdge[267, 279], 
        DirectedEdge[230, 279], 
        DirectedEdge[173, 279], 
        DirectedEdge[170, 279], 
        DirectedEdge[132, 279], 
        DirectedEdge[109, 279], 
        DirectedEdge[273, 280], 
        DirectedEdge[268, 280], 
        DirectedEdge[266, 280], 
        DirectedEdge[218, 280], 
        DirectedEdge[214, 280], 
        DirectedEdge[196, 280], 
        DirectedEdge[195, 280], 
        DirectedEdge[171, 280], 
        DirectedEdge[159, 280], 
        DirectedEdge[130, 280], 
        DirectedEdge[269, 281], 
        DirectedEdge[268, 281], 
        DirectedEdge[216, 281], 
        DirectedEdge[172, 281], 
        DirectedEdge[171, 281], 
        DirectedEdge[147, 281], 
        DirectedEdge[46, 281], 
        DirectedEdge[270, 282], 
        DirectedEdge[268, 282], 
        DirectedEdge[231, 282], 
        DirectedEdge[173, 282], 
        DirectedEdge[171, 282], 
        DirectedEdge[148, 282], 
        DirectedEdge[74, 282], 
        DirectedEdge[73, 282], 
        DirectedEdge[62, 282], 
        DirectedEdge[38, 282], 
        DirectedEdge[270, 283], 
        DirectedEdge[273, 283], 
        DirectedEdge[266, 283], 
        DirectedEdge[235, 283], 
        DirectedEdge[229, 283], 
        DirectedEdge[197, 283], 
        DirectedEdge[196, 283], 
        DirectedEdge[173, 283], 
        DirectedEdge[160, 283], 
        DirectedEdge[132, 283], 
        DirectedEdge[270, 284], 
        DirectedEdge[269, 284], 
        DirectedEdge[232, 284], 
        DirectedEdge[173, 284], 
        DirectedEdge[172, 284], 
        DirectedEdge[110, 284], 
        DirectedEdge[75, 284], 
        DirectedEdge[74, 284], 
        DirectedEdge[61, 284], 
        DirectedEdge[62, 284], 
        DirectedEdge[63, 284], 
        DirectedEdge[48, 284], 
        DirectedEdge[47, 284], 
        DirectedEdge[16, 285], 
        DirectedEdge[17, 285], 
        DirectedEdge[25, 285], 
        DirectedEdge[286, 287], 
        DirectedEdge[202, 287], 
        DirectedEdge[57, 287], 
        DirectedEdge[286, 288], 
        DirectedEdge[202, 288], 
        DirectedEdge[122, 288], 
        DirectedEdge[90, 288], 
        DirectedEdge[51, 288], 
        DirectedEdge[286, 289], 
        DirectedEdge[209, 289], 
        DirectedEdge[140, 289], 
        DirectedEdge[55, 289], 
        DirectedEdge[51, 289], 
        DirectedEdge[40, 289], 
        DirectedEdge[29, 289], 
        DirectedEdge[22, 289], 
        DirectedEdge[32, 289], 
        DirectedEdge[286, 290], 
        DirectedEdge[259, 290], 
        DirectedEdge[163, 290], 
        DirectedEdge[55, 290], 
        DirectedEdge[51, 290], 
        DirectedEdge[40, 290], 
        DirectedEdge[36, 290], 
        DirectedEdge[29, 290], 
        DirectedEdge[32, 290], 
        DirectedEdge[286, 291], 
        DirectedEdge[243, 291], 
        DirectedEdge[202, 291], 
        DirectedEdge[189, 291], 
        DirectedEdge[57, 291], 
        DirectedEdge[286, 292], 
        DirectedEdge[202, 292], 
        DirectedEdge[185, 292], 
        DirectedEdge[55, 292], 
        DirectedEdge[51, 292], 
        DirectedEdge[40, 292], 
        DirectedEdge[29, 292], 
        DirectedEdge[286, 293], 
        DirectedEdge[223, 293], 
        DirectedEdge[104, 293], 
        DirectedEdge[68, 293], 
        DirectedEdge[57, 293], 
        DirectedEdge[295, 300], 
        DirectedEdge[294, 300], 
        DirectedEdge[205, 300], 
        DirectedEdge[95, 300], 
        DirectedEdge[296, 301], 
        DirectedEdge[294, 301], 
        DirectedEdge[214, 301], 
        DirectedEdge[145, 301], 
        DirectedEdge[297, 302], 
        DirectedEdge[294, 302], 
        DirectedEdge[266, 302], 
        DirectedEdge[169, 302], 
        DirectedEdge[298, 304], 
        DirectedEdge[294, 304], 
        DirectedEdge[206, 304], 
        DirectedEdge[61, 304], 
        DirectedEdge[299, 305], 
        DirectedEdge[294, 305], 
        DirectedEdge[229, 305], 
        DirectedEdge[108, 305], 
        DirectedEdge[296, 306], 
        DirectedEdge[295, 306], 
        DirectedEdge[215, 306], 
        DirectedEdge[146, 306], 
        DirectedEdge[145, 306], 
        DirectedEdge[97, 306], 
        DirectedEdge[95, 306], 
        DirectedEdge[297, 307], 
        DirectedEdge[295, 307], 
        DirectedEdge[267, 307], 
        DirectedEdge[170, 307], 
        DirectedEdge[169, 307], 
        DirectedEdge[129, 307], 
        DirectedEdge[95, 307], 
        DirectedEdge[303, 308], 
        DirectedEdge[295, 308], 
        DirectedEdge[294, 308], 
        DirectedEdge[248, 308], 
        DirectedEdge[205, 308], 
        DirectedEdge[194, 308], 
        DirectedEdge[95, 308], 
        DirectedEdge[298, 309], 
        DirectedEdge[295, 309], 
        DirectedEdge[206, 309], 
        DirectedEdge[205, 309], 
        DirectedEdge[187, 309], 
        DirectedEdge[96, 309], 
        DirectedEdge[53, 309], 
        DirectedEdge[299, 310], 
        DirectedEdge[295, 310], 
        DirectedEdge[230, 310], 
        DirectedEdge[109, 310], 
        DirectedEdge[108, 310], 
        DirectedEdge[99, 310], 
        DirectedEdge[95, 310], 
        DirectedEdge[297, 311], 
        DirectedEdge[296, 311], 
        DirectedEdge[268, 311], 
        DirectedEdge[171, 311], 
        DirectedEdge[169, 311], 
        DirectedEdge[145, 311], 
        DirectedEdge[62, 311], 
        DirectedEdge[303, 312], 
        DirectedEdge[296, 312], 
        DirectedEdge[294, 312], 
        DirectedEdge[249, 312], 
        DirectedEdge[218, 312], 
        DirectedEdge[214, 312], 
        DirectedEdge[145, 312], 
        DirectedEdge[298, 313], 
        DirectedEdge[296, 313], 
        DirectedEdge[216, 313], 
        DirectedEdge[147, 313], 
        DirectedEdge[145, 313], 
        DirectedEdge[63, 313], 
        DirectedEdge[299, 314], 
        DirectedEdge[296, 314], 
        DirectedEdge[231, 314], 
        DirectedEdge[148, 314], 
        DirectedEdge[145, 314], 
        DirectedEdge[108, 314], 
        DirectedEdge[73, 314], 
        DirectedEdge[303, 315], 
        DirectedEdge[297, 315], 
        DirectedEdge[294, 315], 
        DirectedEdge[273, 315], 
        DirectedEdge[266, 315], 
        DirectedEdge[250, 315], 
        DirectedEdge[169, 315], 
        DirectedEdge[298, 316], 
        DirectedEdge[297, 316], 
        DirectedEdge[269, 316], 
        DirectedEdge[172, 316], 
        DirectedEdge[169, 316], 
        DirectedEdge[62, 316], 
        DirectedEdge[63, 316], 
        DirectedEdge[47, 316], 
        DirectedEdge[299, 317], 
        DirectedEdge[297, 317], 
        DirectedEdge[270, 317], 
        DirectedEdge[173, 317], 
        DirectedEdge[169, 317], 
        DirectedEdge[108, 317], 
        DirectedEdge[74, 317], 
        DirectedEdge[299, 318], 
        DirectedEdge[303, 318], 
        DirectedEdge[294, 318], 
        DirectedEdge[251, 318], 
        DirectedEdge[235, 318], 
        DirectedEdge[229, 318], 
        DirectedEdge[108, 318], 
        DirectedEdge[299, 319], 
        DirectedEdge[298, 319], 
        DirectedEdge[232, 319], 
        DirectedEdge[110, 319], 
        DirectedEdge[108, 319], 
        DirectedEdge[75, 319], 
        DirectedEdge[61, 319], 
        DirectedEdge[11, 320], 
        DirectedEdge[87, 320], 
        DirectedEdge[13, 320], 
        DirectedEdge[16, 320], 
        DirectedEdge[17, 320], 
        DirectedEdge[321, 322], 
        DirectedEdge[189, 322], 
        DirectedEdge[185, 322], 
        DirectedEdge[321, 323], 
        DirectedEdge[243, 323], 
        DirectedEdge[189, 323], 
        DirectedEdge[185, 323], 
        DirectedEdge[57, 323], 
        DirectedEdge[55, 323], 
        DirectedEdge[51, 323], 
        DirectedEdge[40, 323], 
        DirectedEdge[29, 323], 
        DirectedEdge[321, 324], 
        DirectedEdge[185, 324], 
        DirectedEdge[122, 324], 
        DirectedEdge[117, 324], 
        DirectedEdge[29, 324], 
        DirectedEdge[321, 325], 
        DirectedEdge[185, 325], 
        DirectedEdge[122, 325], 
        DirectedEdge[118, 325], 
        DirectedEdge[81, 325], 
        DirectedEdge[31, 325], 
        DirectedEdge[321, 326], 
        DirectedEdge[185, 326], 
        DirectedEdge[156, 326], 
        DirectedEdge[124, 326], 
        DirectedEdge[122, 326], 
        DirectedEdge[117, 326], 
        DirectedEdge[42, 326], 
        DirectedEdge[321, 327], 
        DirectedEdge[185, 327], 
        DirectedEdge[122, 327], 
        DirectedEdge[115, 327], 
        DirectedEdge[118, 327], 
        DirectedEdge[81, 327], 
        DirectedEdge[24, 327], 
        DirectedEdge[22, 327], 
        DirectedEdge[32, 327], 
        DirectedEdge[19, 327], 
        DirectedEdge[329, 334], 
        DirectedEdge[328, 334], 
        DirectedEdge[298, 334], 
        DirectedEdge[303, 334], 
        DirectedEdge[294, 334], 
        DirectedEdge[206, 334], 
        DirectedEdge[61, 334], 
        DirectedEdge[330, 335], 
        DirectedEdge[328, 335], 
        DirectedEdge[194, 335], 
        DirectedEdge[187, 335], 
        DirectedEdge[331, 336], 
        DirectedEdge[328, 336], 
        DirectedEdge[216, 336], 
        DirectedEdge[218, 336], 
        DirectedEdge[214, 336], 
        DirectedEdge[206, 336], 
        DirectedEdge[147, 336], 
        DirectedEdge[332, 337], 
        DirectedEdge[328, 337], 
        DirectedEdge[269, 337], 
        DirectedEdge[273, 337], 
        DirectedEdge[266, 337], 
        DirectedEdge[206, 337], 
        DirectedEdge[172, 337], 
        DirectedEdge[333, 338], 
        DirectedEdge[328, 338], 
        DirectedEdge[232, 338], 
        DirectedEdge[235, 338], 
        DirectedEdge[229, 338], 
        DirectedEdge[206, 338], 
        DirectedEdge[110, 338], 
        DirectedEdge[330, 339], 
        DirectedEdge[329, 339], 
        DirectedEdge[298, 339], 
        DirectedEdge[303, 339], 
        DirectedEdge[294, 339], 
        DirectedEdge[248, 339], 
        DirectedEdge[206, 339], 
        DirectedEdge[194, 339], 
        DirectedEdge[187, 339], 
        DirectedEdge[96, 339], 
        DirectedEdge[95, 339], 
        DirectedEdge[53, 339], 
        DirectedEdge[331, 340], 
        DirectedEdge[329, 340], 
        DirectedEdge[298, 340], 
        DirectedEdge[303, 340], 
        DirectedEdge[294, 340], 
        DirectedEdge[249, 340], 
        DirectedEdge[216, 340], 
        DirectedEdge[218, 340], 
        DirectedEdge[214, 340], 
        DirectedEdge[147, 340], 
        DirectedEdge[63, 340], 
        DirectedEdge[332, 341], 
        DirectedEdge[329, 341], 
        DirectedEdge[298, 341], 
        DirectedEdge[303, 341], 
        DirectedEdge[294, 341], 
        DirectedEdge[269, 341], 
        DirectedEdge[273, 341], 
        DirectedEdge[266, 341], 
        DirectedEdge[250, 341], 
        DirectedEdge[172, 341], 
        DirectedEdge[62, 341], 
        DirectedEdge[63, 341], 
        DirectedEdge[47, 341], 
        DirectedEdge[333, 342], 
        DirectedEdge[329, 342], 
        DirectedEdge[298, 342], 
        DirectedEdge[303, 342], 
        DirectedEdge[294, 342], 
        DirectedEdge[251, 342], 
        DirectedEdge[232, 342], 
        DirectedEdge[235, 342], 
        DirectedEdge[229, 342], 
        DirectedEdge[110, 342], 
        DirectedEdge[75, 342], 
        DirectedEdge[61, 342], 
        DirectedEdge[331, 343], 
        DirectedEdge[330, 343], 
        DirectedEdge[216, 343], 
        DirectedEdge[218, 343], 
        DirectedEdge[214, 343], 
        DirectedEdge[206, 343], 
        DirectedEdge[195, 343], 
        DirectedEdge[194, 343], 
        DirectedEdge[187, 343], 
        DirectedEdge[147, 343], 
        DirectedEdge[84, 343], 
        DirectedEdge[332, 344], 
        DirectedEdge[330, 344], 
        DirectedEdge[269, 344], 
        DirectedEdge[273, 344], 
        DirectedEdge[266, 344], 
        DirectedEdge[206, 344], 
        DirectedEdge[196, 344], 
        DirectedEdge[194, 344], 
        DirectedEdge[187, 344], 
        DirectedEdge[172, 344], 
        DirectedEdge[131, 344], 
        DirectedEdge[333, 345], 
        DirectedEdge[330, 345], 
        DirectedEdge[232, 345], 
        DirectedEdge[235, 345], 
        DirectedEdge[229, 345], 
        DirectedEdge[206, 345], 
        DirectedEdge[197, 345], 
        DirectedEdge[194, 345], 
        DirectedEdge[187, 345], 
        DirectedEdge[110, 345], 
        DirectedEdge[75, 345], 
        DirectedEdge[76, 345], 
        DirectedEdge[332, 346], 
        DirectedEdge[331, 346], 
        DirectedEdge[269, 346], 
        DirectedEdge[273, 346], 
        DirectedEdge[266, 346], 
        DirectedEdge[216, 346], 
        DirectedEdge[218, 346], 
        DirectedEdge[214, 346], 
        DirectedEdge[196, 346], 
        DirectedEdge[195, 346], 
        DirectedEdge[172, 346], 
        DirectedEdge[159, 346], 
        DirectedEdge[147, 346], 
        DirectedEdge[130, 346], 
        DirectedEdge[46, 346], 
        DirectedEdge[333, 347], 
        DirectedEdge[331, 347], 
        DirectedEdge[232, 347], 
        DirectedEdge[235, 347], 
        DirectedEdge[229, 347], 
        DirectedEdge[216, 347], 
        DirectedEdge[218, 347], 
        DirectedEdge[214, 347], 
        DirectedEdge[197, 347], 
        DirectedEdge[195, 347], 
        DirectedEdge[147, 347], 
        DirectedEdge[120, 347], 
        DirectedEdge[110, 347], 
        DirectedEdge[85, 347], 
        DirectedEdge[75, 347], 
        DirectedEdge[73, 347], 
        DirectedEdge[61, 347], 
        DirectedEdge[63, 347], 
        DirectedEdge[34, 347], 
        DirectedEdge[333, 348], 
        DirectedEdge[332, 348], 
        DirectedEdge[269, 348], 
        DirectedEdge[273, 348], 
        DirectedEdge[266, 348], 
        DirectedEdge[232, 348], 
        DirectedEdge[235, 348], 
        DirectedEdge[229, 348], 
        DirectedEdge[197, 348], 
        DirectedEdge[196, 348], 
        DirectedEdge[172, 348], 
        DirectedEdge[160, 348], 
        DirectedEdge[132, 348], 
        DirectedEdge[110, 348], 
        DirectedEdge[75, 348], 
        DirectedEdge[74, 348], 
        DirectedEdge[61, 348], 
        DirectedEdge[62, 348], 
        DirectedEdge[63, 348], 
        DirectedEdge[48, 348], 
        DirectedEdge[47, 348], 
        DirectedEdge[87, 349], 
        DirectedEdge[13, 349], 
        DirectedEdge[16, 349], 
        DirectedEdge[17, 349], 
        DirectedEdge[350, 351], 
        DirectedEdge[202, 351], 
        DirectedEdge[189, 351], 
        DirectedEdge[350, 352], 
        DirectedEdge[243, 352], 
        DirectedEdge[202, 352], 
        DirectedEdge[189, 352], 
        DirectedEdge[57, 352], 
        DirectedEdge[350, 353], 
        DirectedEdge[202, 353], 
        DirectedEdge[122, 353], 
        DirectedEdge[117, 353], 
        DirectedEdge[51, 353], 
        DirectedEdge[350, 354], 
        DirectedEdge[202, 354], 
        DirectedEdge[140, 354], 
        DirectedEdge[122, 354], 
        DirectedEdge[118, 354], 
        DirectedEdge[81, 354], 
        DirectedEdge[350, 355], 
        DirectedEdge[202, 355], 
        DirectedEdge[163, 355], 
        DirectedEdge[156, 355], 
        DirectedEdge[124, 355], 
        DirectedEdge[122, 355], 
        DirectedEdge[117, 355], 
        DirectedEdge[350, 356], 
        DirectedEdge[321, 356], 
        DirectedEdge[202, 356], 
        DirectedEdge[185, 356], 
        DirectedEdge[51, 356], 
        DirectedEdge[40, 356], 
        DirectedEdge[29, 356], 
        DirectedEdge[350, 357], 
        DirectedEdge[202, 357], 
        DirectedEdge[122, 357], 
        DirectedEdge[115, 357], 
        DirectedEdge[104, 357], 
        DirectedEdge[118, 357], 
        DirectedEdge[81, 357], 
        DirectedEdge[68, 357], 
        DirectedEdge[57, 357], 
        DirectedEdge[55, 357], 
        DirectedEdge[51, 357], 
        DirectedEdge[40, 357], 
        DirectedEdge[29, 357], 
        DirectedEdge[22, 357], 
        DirectedEdge[32, 357], 
        DirectedEdge[19, 357], 
        DirectedEdge[359, 365], 
        DirectedEdge[358, 365], 
        DirectedEdge[303, 365], 
        DirectedEdge[294, 365], 
        DirectedEdge[360, 366], 
        DirectedEdge[358, 366], 
        DirectedEdge[205, 366], 
        DirectedEdge[194, 366], 
        DirectedEdge[361, 367], 
        DirectedEdge[358, 367], 
        DirectedEdge[218, 367], 
        DirectedEdge[214, 367], 
        DirectedEdge[362, 368], 
        DirectedEdge[358, 368], 
        DirectedEdge[273, 368], 
        DirectedEdge[266, 368], 
        DirectedEdge[363, 369], 
        DirectedEdge[358, 369], 
        DirectedEdge[328, 369], 
        DirectedEdge[206, 369], 
        DirectedEdge[364, 370], 
        DirectedEdge[358, 370], 
        DirectedEdge[235, 370], 
        DirectedEdge[229, 370], 
        DirectedEdge[360, 371], 
        DirectedEdge[359, 371], 
        DirectedEdge[303, 371], 
        DirectedEdge[294, 371], 
        DirectedEdge[248, 371], 
        DirectedEdge[205, 371], 
        DirectedEdge[194, 371], 
        DirectedEdge[95, 371], 
        DirectedEdge[361, 372], 
        DirectedEdge[359, 372], 
        DirectedEdge[303, 372], 
        DirectedEdge[294, 372], 
        DirectedEdge[249, 372], 
        DirectedEdge[218, 372], 
        DirectedEdge[214, 372], 
        DirectedEdge[145, 372], 
        DirectedEdge[362, 373], 
        DirectedEdge[359, 373], 
        DirectedEdge[303, 373], 
        DirectedEdge[294, 373], 
        DirectedEdge[273, 373], 
        DirectedEdge[266, 373], 
        DirectedEdge[250, 373], 
        DirectedEdge[169, 373], 
        DirectedEdge[363, 374], 
        DirectedEdge[359, 374], 
        DirectedEdge[329, 374], 
        DirectedEdge[298, 374], 
        DirectedEdge[364, 375], 
        DirectedEdge[359, 375], 
        DirectedEdge[303, 375], 
        DirectedEdge[294, 375], 
        DirectedEdge[251, 375], 
        DirectedEdge[235, 375], 
        DirectedEdge[229, 375], 
        DirectedEdge[108, 375], 
        DirectedEdge[361, 376], 
        DirectedEdge[360, 376], 
        DirectedEdge[218, 376], 
        DirectedEdge[214, 376], 
        DirectedEdge[205, 376], 
        DirectedEdge[195, 376], 
        DirectedEdge[194, 376], 
        DirectedEdge[146, 376], 
        DirectedEdge[362, 377], 
        DirectedEdge[360, 377], 
        DirectedEdge[273, 377], 
        DirectedEdge[266, 377], 
        DirectedEdge[205, 377], 
        DirectedEdge[196, 377], 
        DirectedEdge[194, 377], 
        DirectedEdge[170, 377], 
        DirectedEdge[363, 378], 
        DirectedEdge[360, 378], 
        DirectedEdge[330, 378], 
        DirectedEdge[206, 378], 
        DirectedEdge[205, 378], 
        DirectedEdge[187, 378], 
        DirectedEdge[53, 378], 
        DirectedEdge[364, 379], 
        DirectedEdge[360, 379], 
        DirectedEdge[235, 379], 
        DirectedEdge[229, 379], 
        DirectedEdge[205, 379], 
        DirectedEdge[197, 379], 
        DirectedEdge[194, 379], 
        DirectedEdge[109, 379], 
        DirectedEdge[362, 380], 
        DirectedEdge[361, 380], 
        DirectedEdge[273, 380], 
        DirectedEdge[266, 380], 
        DirectedEdge[218, 380], 
        DirectedEdge[214, 380], 
        DirectedEdge[196, 380], 
        DirectedEdge[195, 380], 
        DirectedEdge[171, 380], 
        DirectedEdge[159, 380], 
        DirectedEdge[130, 380], 
        DirectedEdge[363, 381], 
        DirectedEdge[361, 381], 
        DirectedEdge[331, 381], 
        DirectedEdge[216, 381], 
        DirectedEdge[364, 382], 
        DirectedEdge[361, 382], 
        DirectedEdge[235, 382], 
        DirectedEdge[229, 382], 
        DirectedEdge[218, 382], 
        DirectedEdge[214, 382], 
        DirectedEdge[197, 382], 
        DirectedEdge[195, 382], 
        DirectedEdge[148, 382], 
        DirectedEdge[120, 382], 
        DirectedEdge[85, 382], 
        DirectedEdge[363, 383], 
        DirectedEdge[362, 383], 
        DirectedEdge[332, 383], 
        DirectedEdge[269, 383], 
        DirectedEdge[364, 384], 
        DirectedEdge[362, 384], 
        DirectedEdge[273, 384], 
        DirectedEdge[266, 384], 
        DirectedEdge[235, 384], 
        DirectedEdge[229, 384], 
        DirectedEdge[197, 384], 
        DirectedEdge[196, 384], 
        DirectedEdge[173, 384], 
        DirectedEdge[160, 384], 
        DirectedEdge[132, 384], 
        DirectedEdge[364, 385], 
        DirectedEdge[363, 385], 
        DirectedEdge[333, 385], 
        DirectedEdge[232, 385]}|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.804493073761051*^9, 3.80449309489122*^9}, 
   3.8230215487774343`*^9},
 CellID->623458033]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Modulus",
 "\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"],
 "\[NonBreakingSpace]"
}], "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{{3.804492628471273*^9, 3.804492630494429*^9}, {
  3.80449282272925*^9, 3.804492830152156*^9}},
 CellID->938320731],

Cell["The finite field chosen for computations can be specified:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8044925075778637`*^9, 3.804492523120275*^9}, {
  3.8044925901585293`*^9, 3.804492595861801*^9}, {3.804492759251581*^9, 
  3.804492761618194*^9}, {3.804492850841065*^9, 3.804492885822322*^9}},
 CellID->539258826],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "3"}], "}"}]}], "]"}]}], ";"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.804492836929914*^9, 3.804492837423998*^9}, {
   3.8044928875345507`*^9, 3.804492896974312*^9}, 3.8230213581459064`*^9},
 CellLabel->"In[60]:=",
 CellID->151121168],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   TagBox[
    DynamicModuleBox[{Typeset`open = False}, 
     FrameBox[
      PaneSelectorBox[{False->GridBox[{
         {
          PaneBox[GridBox[{
             {
              StyleBox[
               StyleBox[
                AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                 BoxBaselineShift->-0.25,
                 BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                
                FontColor->RGBColor[
                 0.8745098039215686, 0.2784313725490196, 0.03137254901960784]],
               
               ShowStringCharacters->False,
               FontFamily->"Source Sans Pro Black",
               FontSize->0.6538461538461539 Inherited,
               FontWeight->"Heavy",
               PrivateFontOptions->{"OperatorSubstitution"->False}], 
              StyleBox[
               RowBox[{
                StyleBox["PersistentHomology", "ResourceFunctionLabel"], " "}],
               ShowAutoStyles->False,
               ShowStringCharacters->False,
               FontSize->Rational[12, 13] Inherited,
               FontColor->GrayLevel[0.1]]}
            },
            GridBoxSpacings->{"Columns" -> {{0.25}}}],
           Alignment->Left,
           BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
           BaselinePosition->Baseline,
           FrameMargins->{{3, 0}, {0, 0}}], 
          ItemBox[
           PaneBox[
            TogglerBox[Dynamic[Typeset`open], {True->
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "IconizeCloser"],
              ImageSizeCache->{11., {1., 10.}}], False->
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "IconizeOpener"],
              ImageSizeCache->{11., {1., 10.}}]},
             Appearance->None,
             BaselinePosition->Baseline,
             ContentPadding->False,
             FrameMargins->0],
            Alignment->Left,
            BaselinePosition->Baseline,
            FrameMargins->{{1, 1}, {0, 0}}],
           Frame->{{
              RGBColor[
              0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
               0.5], False}, {False, False}}]}
        },
        BaselinePosition->{1, 1},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
       GridBox[{
         {GridBox[{
            {
             PaneBox[GridBox[{
                {
                 StyleBox[
                  StyleBox[
                   AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                   
                   FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                  ShowStringCharacters->False,
                  FontFamily->"Source Sans Pro Black",
                  FontSize->0.6538461538461539 Inherited,
                  FontWeight->"Heavy",
                  PrivateFontOptions->{"OperatorSubstitution"->False}], 
                 StyleBox[
                  RowBox[{
                   StyleBox["PersistentHomology", "ResourceFunctionLabel"], 
                   " "}],
                  ShowAutoStyles->False,
                  ShowStringCharacters->False,
                  FontSize->Rational[12, 13] Inherited,
                  FontColor->GrayLevel[0.1]]}
               },
               GridBoxSpacings->{"Columns" -> {{0.25}}}],
              Alignment->Left,
              BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
              BaselinePosition->Baseline,
              FrameMargins->{{3, 0}, {0, 0}}], 
             ItemBox[
              PaneBox[
               TogglerBox[Dynamic[Typeset`open], {True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "IconizeCloser"]], False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "IconizeOpener"]]},
                Appearance->None,
                BaselinePosition->Baseline,
                ContentPadding->False,
                FrameMargins->0],
               Alignment->Left,
               BaselinePosition->Baseline,
               FrameMargins->{{1, 1}, {0, 0}}],
              Frame->{{
                 RGBColor[
                 0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                  0.5], False}, {False, False}}]}
           },
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
         {
          StyleBox[
           PaneBox[GridBox[{
              {
               RowBox[{
                TagBox["\<\"Version (latest): \"\>",
                 "IconizedLabel"], " ", 
                TagBox["\<\"1.0.1\"\>",
                 "IconizedItem"]}]},
              {
               TagBox[
                
                TemplateBox[{
                 "\"Documentation \[RightGuillemet]\"", 
                  "https://resources.wolframcloud.com/FunctionRepository/\
resources/PersistentHomology"},
                 "HyperlinkURL"],
                "IconizedItem"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            Alignment->Left,
            BaselinePosition->Baseline,
            FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
           FontFamily->"Roboto",
           FontSize->11]}
        },
        BaselinePosition->{1, 1},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
             GrayLevel[0.8]}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
       Typeset`open],
       BaselinePosition->Baseline,
       ImageSize->Automatic],
      Background->RGBColor[
       0.9686274509803922, 0.9764705882352941, 0.984313725490196],
      BaselinePosition->Baseline,
      DefaultBaseStyle->{},
      FrameMargins->{{0, 0}, {1, 0}},
      FrameStyle->RGBColor[
       0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
      RoundingRadius->4]],
    {"FunctionResourceBox", 
     RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
     "PersistentHomology"},
    TagBoxNote->"FunctionResourceBox"],
   ResourceFunction["PersistentHomology"],
   BoxID -> "PersistentHomology",
   Selectable->False], "[", 
  RowBox[{"data", ",", 
   RowBox[{"\"\<Modulus\>\"", "\[Rule]", "7"}]}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.804492901704577*^9, 3.804492912621777*^9}, 
   3.8230213595348873`*^9},
 CellID->127582908],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["PersistentHomologyObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[
                  GraphicsComplexBox[CompressedData["
1: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
DD7UNnFU6mGhG2+T145RH+SY9ZrzutlY7vy4V2ngKex2UAy4ntEDQ02/GiX9
uKDJkxbtMe2FnIE50gkPudC2yslK4U8vuN6sNTtygQs/bOInhsL7oH7xMpH5
+7lwbMI9rWBHP9j/elIzto4Ll5b2/DvS2g+9zSapiqJcyHELv6J/bQB6/5yh
fejhwNU9a713TQzAq5uXer3SOCCd1ZT4e5IEwwV3F73RYsFbYtPio/vJMLLR
fO8MwblvmZvRMhMfMhyJ/r1/YTsT+vpG+7sayVDt3Z3WHckE0a8R/0rmUaA7
Oumf62UmxF97+LHnEAVWe4QHrlVlQqhcYuJcdwoo+ob4MzkMMFzx1E+lmAJP
OM5No4Lzu/PamhCp6m4ItV2u09LCgSGFhxdOa/XAj6p/Tv2CcyO6d17KS+yB
343jjjHHOSBRFJTLV+yFXRmsOQdlOHA6amCsMKYXjOuKzbkDbBg02+Jet7EP
ajPeVeQlsqEjeJP/18w+UFDZ9aXyPhuIPzddcNbrh/Xha36rG7Khdd7JEBkF
EnhTNTbtaWZACvvN+uBrJNAx116zIZYBpxTHLBbkCtrPDc7GPmLA4CbFZ+Zi
ZEg4K6XXZMaAV38W9+07LpgfvcezC3cwYNUq5eQ4Qf0YSm1IfyjHAG5Oj7nh
TzJYO778IT+DAVfutr2eEtQb29zf6xTx6FCrrrpJn9gHZZcC51i3cUBWN/n9
tiUDsENcpnOpHwcub7w5sn7XINSfJDzw0ufA/Tei9ReshuDYjxADBpcNexLt
Y1fvIkCLiXjhlSA20C6/qPKuIoCLYp+97hY2KPgFPl9tSARH20Huu3oWyJR1
/A6oJoJVGdO/zpIFJZe/kOXfMcDN/l5Y3xoKUHYVqm+QZoLCTHkbqTQyPHE+
mejkzQSKpTbtvRYZhtXvz20ZZcKPubvnlgvmRaPGMpgneE7RxhzWF01BHi35
rhNayoIfzPK0yUQinPb9Xum7jA3K3j3HC+SIQH/aRv9wnQ2h/PYHh3wIsEp/
nVdGUA/0nv31bsZrNuipMFratXvhwOfvn4P/sUBSnkn4zBXk/wWJK8Z3WPAq
b7H60vQ+yFu7TNWLwYR59EEDk8f98ETfb56vDRN4xuvERc0F+c0L2JxOZcD6
BvM/sXsGweRgaubOmwxwcNLzz9AYAn6/6eM7Y4J6keK/lWZHg8W+RI/npYLx
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
                   
                   "], {{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    Arrowheads[0.], {
                    ArrowBox[{1, 2}, 0.02254220222992223], 
                    ArrowBox[{1, 5}, 0.02254220222992223], 
                    ArrowBox[{1, 7}, 0.02254220222992223], 
                    ArrowBox[{1, 9}, 0.02254220222992223], 
                    ArrowBox[{1, 11}, 0.02254220222992223], 
                    ArrowBox[{1, 13}, 0.02254220222992223], 
                    ArrowBox[{1, 15}, 0.02254220222992223], 
                    ArrowBox[{1, 17}, 0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-2.1409496216940123`*^-16, -1.0434049156924905`}, 5}],
                     0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {1.0704748108470062`*^-15, -0.9225412836753133}, 5}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.19317181243605622`, -1.0333779239158283`}, 7}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.1495108326247347, -0.7998123114976872}, 7}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.3696769958201283, -0.9542463251548349}, 9}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.24459071364353785`, -0.6313614109083246}, 9}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.5056775470872312, -0.8166972803055038}, 11}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.272398578269021, -0.43993880945047653`}, 11}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.582805838183662, -0.6393075500603161}, 13}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.229178820294798, -0.251397190160288}, 13}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.590645266014236, -0.4460346004393019}, 15}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.12076850752425144`, -0.09120014346806327}, 15}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {-0.04103500681170743, -0.01167546606958506}, 4}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.5674671696890601, 0.16145833033997112`}, 4}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.15069014333422975`, 0.013963498134084052`}, 6}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.7369836857302795, 0.06829159554065786}, 6}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.33873038367193714`, -0.031387992444006356`}, 8}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.8613974228519735, -0.07982022606495483}, 8}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.49768983777687453`, -0.14160496769998895`}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.9239056164555438, -0.26287381225308243`}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.6061001505474233, -0.3018020143922123}, 12}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.9160661886249679, -0.45614676187410347`}, 12}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.6493199085216432, -0.4903436336824059}, 14}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.8389378975285393, -0.633536492119288}, 14}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.6215120438961692, -0.6817662351402451}, 16}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.7029373462614268, -0.7710855369686257}, 16}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.19172515014593514`, 1.0256389642036672`}, 6}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.16951651604121815`, 0.9068332652006886}, 6}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.37976539048364444`, 0.9802874736255784}, 8}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.2939302531629152, 0.7587214435950802}, 8}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.5387248445885809, 0.8700704983695936}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.35643844676648223`, 0.5756678574069446}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.6471351573591255, 0.7098734516773724}, 12}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.34859901893590606`, 0.3823949077859304}, 12}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.6903549153333459, 0.5213318323871787}, 14}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.27147072783947207`, 0.20500517754074105`}, 14}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.3769213302526145, -0.9729461079072422}, 7}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.33326035044130586`, -0.8602441275062771}, 7}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.5534265136367049, -0.8938145091462413}, 9}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.4283402314601095, -0.6917932269169124}, 9}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.6894270649037971, -0.7562654642969203}, 11}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.4561480960855884, -0.500370625459065}, 11}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.7665553560002341, -0.5788757340517223}, 13}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.41292833811137236`, -0.31182900616887055`}, 13}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5492819065248636, 0.887120738826274}, 8}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.4856554033088557, 0.7843604077987405}, 8}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.7082413606297987, 0.7769037635702826}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5481635969124143, 0.6013068216106137}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.8166516734003458, 0.616706716878059}, 12}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5403241690818401, 0.4080338719895959}, 12}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.7029373462614349, -0.7710855369686219}, 9}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.6215120438961611, -0.6817662351402489}, 9}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.8389378975285295, -0.6335364921192947}, 11}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.6493199085216452, -0.4903436336824001}, 11}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    8, {0.83265509775149, 0.6287919419646689}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    8, {0.7362038372501287, 0.5559553310325218}, 10}], 
                    0.02254220222992223]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    DiskBox[1, 0.02254220222992223], 
                    DiskBox[2, 0.02254220222992223], 
                    DiskBox[3, 0.02254220222992223], 
                    DiskBox[4, 0.02254220222992223], 
                    DiskBox[5, 0.02254220222992223], 
                    DiskBox[6, 0.02254220222992223], 
                    DiskBox[7, 0.02254220222992223], 
                    DiskBox[8, 0.02254220222992223], 
                    DiskBox[9, 0.02254220222992223], 
                    DiskBox[10, 0.02254220222992223], 
                    DiskBox[11, 0.02254220222992223], 
                    DiskBox[12, 0.02254220222992223], 
                    DiskBox[13, 0.02254220222992223], 
                    DiskBox[14, 0.02254220222992223], 
                    DiskBox[15, 0.02254220222992223], 
                    DiskBox[16, 0.02254220222992223], 
                    DiskBox[17, 0.02254220222992223]}}], {
                  Background -> GrayLevel[0, 0], FormatType -> 
                   TraditionalForm, FrameTicks -> None, ImageSize -> 32}], 
                 GridBox[{{
                    TagBox[
                    TemplateBox[{
                    StyleBox["\"Points: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox[
                    "\"\\!\\(\\*RowBox[{\\\"10\\\"}]\\)\"", 
                    StringForm["``", 10], Editable -> False]}, "RowDefault"], 
                    "SummaryItem"]}, {
                    TagBox[
                    TemplateBox[{
                    StyleBox["\"Dimensions: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox["\"\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\"", 
                    StringForm["``", 3], Editable -> False]}, "RowDefault"], 
                    "SummaryItem"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[
                  GraphicsComplexBox[CompressedData["
1:eJw12Xc8lt/7AHBUKtohpSItK1EaqC7SUCoaQkkq2jQoJUllpZAZKtlZ2Xtd
SDbJ3p69h4qSyO/5fT0f/3id133u+z7Xea5z7nO93msu3jphKyYiIhIwQ0Tk
//+zXPzOhazuwqC5O0RaOrnQXN2ZusKjBkbSnoi4O/LRfeCSgXc3AcpiFwSM
a7Hx8bnu1MwLdSUi//sbhqDp/vhD2L95+nngJ3zeo+n7sUB4/zu79yosPyp4
GJ6b/SueDj9mRdw8+4KJed877GsNyShhE+myKZ4Dlc+VVMc9++G91q7AAzU8
/D5Pvjrz+TdUNDrNnj/Ahz95FltokfmwdrqNQfnT7ejp/iA+f7r/gunnYafw
eX+n3weVwvclTo8HXwjH8+l99OcDvpVQbprzvZHMR4cnF+VmHaqAy2vuJIv8
42P3vpgHy0XKwcJmvsNaiWEsEg/a5nu5FLSb9XQOLR3G7A2Va2Kri8Ct44je
zRXDOB5Z/0JMsQBsjO8aecsPo+JukXm7nHMh5Iy2aYTiMPrOGlpLasmCMLbu
q6i1guvTbfyvnb/rf/3xv/7+08/D/55nOP0+/O99xtPjwf/GEzs9XjQXjnf3
dDz4Xzz3p+PF/+L9L36lOUYLdWfx8Z4w/me7/E7PZvOwVxj/jhDKiop2HpYI
479f8fjVvUoe5grjZ2TZum3O4eGEMH4FXHH9dxIP1wnjx8RXp9tieegvjL/A
04tRHc1DBWH8/7VzhfH/199XGP9/zzsgjP+/9x0Vxv/feKKF8f83Xl1h/P/F
81/8/8Wbzk6ZsTCkCErK3q7M6+ajW4Od/QqbXJg69Xt0IY+Pe6xf/X2glgHW
WTPpl//yMdCpZPgZKR6e5rHdLUSG8WbnpoNbO0MhX95V9/uk4H4tbs7CVefB
onVg1dqffDR8bXWqsi8Qj7wqkjEm8HGlRmTpis+xmBXLNXL7wsfyG39dYhLa
UeRmuYfLEh4qk9toJ3kdmPc1srOSz8Vjw4XPjm4RrFetoNYtX7jI2dfv+vVO
N5rnfU+lBnLxFdcrbWVqDz5aM0/9jzkXYb7KuDOhF08V+0f7L+PiwfOuTVsX
9OPrP9srvzZzEPYmPQ/WGkB/9b4YiisHPyVvPbpfthRWrcvmhavwsHG1t2Ol
awGssjD7mtbLxfTO7RuHarLB/M0/Pi+Ai5Xplt8bOJ9gi+azSx4mXCy8PuVw
cUUcmL57RwmT4WLyy5718buCQW713zIjCgdFRLbrVMXRy8ae8YuKCzmoV7pg
u6RrMKbRmiTF3nAwICCxW/5+G06kRe3/R2bha3sZyZrydrxY3ea8uY6F9fsW
60XN70RTtwyHs3ks/Kv11YZ2tgt/b1l02jeFhd40B7+25G5MpeZ5NSSyMP4W
3Ir+04PHol4kL0tj4b363w0vDvZhxmToW/tiFj49cfB7dVA/jgT9cKxtYSFH
mmzwhJoBDJsP9LJTfJR9+MpB8XUM/CXqi/UcEPyelEB2w9pHsPRJqaTeJj6G
xR1oFbV6gxcfjKrOmMPH4PcKUeejk/Hlxw23dnbxUClz8DUlJwefJ/cUTETw
cNYz3vmyqWK8vaY2y+EkD0mqaSP3Qivw+DrMrxHhobi9kULKLwLq3E3LcFFk
ImO+i8nSbiJGlTlnD1Yx8NcHOZ+CHBLW3+eu8bRkoCvdWFn2FRkTIiSqMph0
/N5zPCnrHAVvJjm+iblJx9QJLl9SmYpTS1U/xlNpWDT8LzSFK2ibZg/NNaXh
hpS8ratSaGidXD20rpiK6/IDAw1kC8Dol5//RjHB70tuT81Ty4LUwzH+e69y
MNUzgnF3YSKkvlKpTehiIyM3Y7IkOxT2/CZ0JZmwUaTqplTYxA2cJW6U8raN
hQ9eyDA9b0QiUfnq0WprFsbZui9YJvIJJUm9xXZjTCRp1sw5+jIXb6t/LPsa
wcTAwDvePPdBPOMSmu9eQkFR98ujK5UIgnXrW9J9jYIrXQ03P1hMxI2/HuUZ
K1Lw6uGLNf8mibjmj7qIFI2Mq+Rbs9ZxSWikZG1wKFfwPXHWtbAcJGP4mrBL
816TsV3uPUPmGwUzy5baOdwno0g+IamqioqfdfO8fK8K2jdCz7nmxsAWhyJe
4TUeith0L5W2AYwP0lH4vpqHJmVOyuyfMWhVmzmQJFh/Us6x3jfSs9Cy9ciM
5VZcnHO/cs2JomIk6rWQHjE4uGGvyMWPhytxvcxheVlbDs7W7g8LeF+N5NzO
57rtbFTI3XHSvK0er3oFdOhuF8wf+cKmRCsq3ki2ufR7DQmT1e44atrQ0Cr7
g/oWJyI+26DuvOMCHct2ufnPKyeg/eTyW+tMGegesZdD/TOEvPEc2hVgonNn
WWOm5SD+ANFNTvIs7DxBv3wnqR8VbWLCmkZYKPd33q0NxF78a3Gth1PGRi2P
+gVDM3vwQYFM0JWaPGj+oWzJzWZjwdyhV3b3M2Agf05q3RcWmreknHd8Ewv/
XsppxBGZ6CYSyZ6y8AS1+s2TM+YwcTj99aS9XCAqM+y417QZmFjt0eR5JBE/
jS04ZXKfjrJZycEOC3Jw3jN+jgrS8ObUuqZSnRKc8lFxs5WiYVzIzlZlTRKK
W/6V2yvSi8mOX93e7iHjoqnbuLeqG23uei44fZKCPnt8vF/EdKGqVnNMrj0V
lzAfi1a+7cTkpT/uLXlNQ8Vq93KvjA6cO/uWVkUeHVf3FkleJrYjcbaNzVIS
A/0Mkjy71NvxPXOo0WyxIE/dk5j7w9uQ4OHXZEALgjyptmabHVzU00mb5akV
ivlb5oobR3LQ5PHfgaSUdDxVsL1ea1SQ/26W/nd7C/GzW7aO8y42pors+OVR
X4Gqppb5rxxZ6GnwVJP/pBpbC1s+kN4zkVbwe3+KRAOW5lvO/1vAwDMXwqvm
Xv2KSxULvM5V0/F+adXS7z9oOM9Ca/ds8Xa8VGbANPpHx8Khk2+eiLeihPFg
ouQkAzsLG67l9H3FA8MvH4fzmBiz9HN8knMD6hTtu3i5lYWO22Ri7nOq8aF+
+n32RzZqGDF7m7ZW4vbNE8eS7TlYIHKSMJpQhMMG5Xs2bRDE6Zj+t+JdBg6f
nBzZfLIQ7r8oG19gx0KFtP77sm+ygbZMxbVWlYm33VhXDSqTQXO98+fsn3Qk
yLrvo7RFQDQrLeDFFxqKnDmh7HH2DMpkf26ZiKai3tFDjLtdH9D7RYV80QsK
imQ22eV2peMabx/7K4/JyBgavJh5oAAfGkW8jX1MwpX6481VgrzPMftet4FZ
iTopMfYrtckoK1Z2+cLuMgwwLHdoOEvB299Xta2TyUfDnsDK9S+omChTIdNu
nYHmc7fxHpTTkOCwcOzr3jiMIurFzBNlIGE0f+qofQDGbvy5cO1hJorkFbU3
fLSDmPm+Vn8iWFge2haU1RUKCu+15j2zDYANO2eUrqazUa8r2aVLOhwtNu2U
pY6x0LCEQvH0yECZcJnFb8eZmPiLTim3LsKo4p/buzgMXEc7NJrAqMBDTQN7
tVvouNJ3W0jD1WqUNJcovBZPQ2/OO6V1afWol73QY7kdFV0G+abKec0okrsu
QFSJgiYiM6fYLoJ5o/xzf0D7hE+196VN2dPQ7fv4n7lJARhjt9Eu1EQw71qh
Zq2kcPjW6p2ssoaBwzPuDG5Pz4RVTi50PQIDd/7k10RtKQX5fjuRq75MnHdR
7+0i1yrY+nnlbW0lFs7xu1Zj9awemt1MXllksFBC99890+Mt4O2wpyvkEoKX
Dys+04KJ5Z5Ro8GKxeDe8uVd5DfB+j2m/GDukTzw9Che/NKEhnM2RGa0kDLg
2g3mjLNdFNSYLRa4uz0envkWVnMvkzHqapfTz5AASF6d+HiVCAlFdqyuq9X2
wAchcm/LYgnYomC04dOtOHSb3P5lT/wgutzr+V2gNogEqNfsyM8HHSf9mnOy
BByWDbh6eLgclhnLcbKVibgy9dHOl9++QMdOGanSQySUeVp3vs6lHl5kN+Q0
O5Hxps4aDX1+M3SuaBzZlk1BRfPTR5SCvkHc2efSO/8K8sUt/EyJfxsYmtUT
lxjTcW/o5rjNNzvAOqi6K7iiB96dmPAID6IKxncr2+1bFzi6wyfRNRT0vpRD
jp7VCSS/+xmsGBK+mns3Y875dvA4sbh++woijoSvMEkfbAVelsH4u4VDgrwN
PPnQ4xucSb20TK+nD0U+35bfeqoFjK5cbNsd1I0KklNUxTfN8PdhjGAX7UC3
JePXP8m+h39zttMXrO4FN7GzK4/s94MPy0OOPn88ACIKtPrMg/YgYb8+64wD
AUQypzIS8hzwapqRdIsqCdxUZHrWjHmgs3W6+Co6Gdy4PxVOlr7CQebEfN04
KohsV5+ibPDDI2bPPihepIPIhbfnRbV8UKpYu6BBngkzjEiG5vpEaLQyPFR9
ioKmodZda48TQfzva41Vb0io9Ynu/9iICKG+kh+29RBQeXtt/VUNItjMcdm8
eecgDvZ/eT06RQCDuJwjIRW9aPk7LECviADua696Jpt0ocOdH0sczhNg4YWs
Ww/obdi6XDbDY2gI7E1Ozp3p3YKXt9UufWLbCj5bPHYEdAzC2O/TVwYsvwHX
P8Y8TooIgwXbtr5RbQHHLbHO8fkkmLn3jF1lXBOUbVvKaTtBgZaLKakL4+qh
MU1MexeVCu1pGw4MnK4BJfYV+WE7OhhqZSbI42coImisnM1hgEnkzBJeKQIl
jTsSacWC7tOJwa/P9sNZm2iTGGsqVpFsEx5J9UHLMkstdTIZg+9+OnvvRw+o
9DuqHrMiYXeq+U3lX91QVN3uyGglYG1QgfYmhW44XzBq1vx8EHe9Wnt/6nYX
PHFGl1vmfUgJ+94zm9kJR9dVlQav78bhrUtpod6dsJ+4iq/IbUe9YxO6U0cF
8fcv96DmdgNnt4nEMelWCOkX0xP/0Qda79pVXWe2gifDJYS9eQjCZGqCw+Va
QZrPXdqxnQgjyuWhgWdawfzuVvOUdhJwuhoZBhWtoGO4MuD5bQoMz31Wetu4
DeLfbqFdm0uDOa8naFUz2+Fwx7ndNyPpwGpLdb1tS4J7t7Y1h05Q8JfM9aAV
5ST4tk3CKfgKGcfSqyY1ZpPBhvRzTVozEX+INyS80CHDs3mSzI4tBIx+XbNR
/Iwg75a8PDSlPIDtTXr9QbZk6F+plq/H6cFfE2Jc1XNkYC/KunA2rRMbR9RO
temRYWhRXYLO3TYcfbrmiddaIgyn2jc1afTCI+Mts4x/EmCML/UOrg1As+ny
HSfTCSC91nvT/GMEmNN6zLTEjACz9q59W0ImgsjLSSeXniHwU5sklzqSQe9L
orfGwCD8038fsVaECktMh3erFA9A/GP32BkeNJggfDKWduwHjfo6dBJjwIGj
u2ptuYMgEUV8fjmJioqnuIfQaBBSDHzkzfUoGLo01FKkaQB0HpLbvrWR8Ffw
LUnHOwPwpGzEMcWGiAeWpvuYaA/Ah8FLdS70IWxWtF+Wv24AmPyX6+pnDGDl
uwly9tYByDdw+T4i34ueox8X7bk8AIZyX3Syd3dhU8TMsNQQAhzTDYh3uPMN
NlaqX00qJ4D18v1VN03a4Yu/veu+ScG6l/2ncF2lC0qVAscsBOvxbf9qj+LJ
HgiK3/q2OJkI+6SPfMqp7Yetb2S5GnIkCPKaPJD2YgjWk6LNnd6RQFs+4N5z
eSJQ1u48uVedDLoF0RKBDiSAjXUrNLTJcGvpyeBQMRr+u3pe+m89Geyc9055
pVFwOJvhpn+EAv9Wa3zqO0nG1/FNrXklFOi0NSNY/SSijeKte7IrqfC0Tu8I
yZeAlsWB/E3XqXC12VrLwXAQ/3q3zqpLoELd149d9+z78FTGRMeXb1TI+/6z
wMW/G8+ZfLI9mUMHgs3FjcnyLVA2IeYS1kSHY77LB9mibVCkfZgk00EHN23l
xRXUDnCtSFKqr6fDDiXRPIe6boh1O3S1II0OodWenUdT+uCkfh78cKOD5C6b
4IgXgzA/WqIuUJ8O9xndISczCfB4HfkFDtOgc5/G+IUVJLjqrrhltT8BVCUO
GC4RnLs9W/R+zncngLLcYyuWKhVD/Pb/EfMmAD+gISv0JxnLyLac8QgCjA/c
02wpJmFR9vMAVongerCqg7EHESN4bS2lXAKcjCs2bjQh4MaVVRVmm4jw7OY9
0vjuQYxdLlsS+IgISU4FXzcT+9DBeKK1fSsNcsLPdP7YnAu3Vq3wePaaBtQD
RvK7npWBus/9hTf/0uDi6hmfF3R9htZHS9afcKQDqfSrg5RZLVS+H9XgjtNh
3t5KCY+yRnDVe+3G9WPAzuNHnlz0aAHqSfbdv5uZ4KaVfCvuXSs8f+mTmj/A
hJj7v280xLbDojynpf8+kEF11X3NSwZ0/MSVOVp0lALLXYyzvwINpUTvQi2P
Avd9FIrVtaj4LXaef+0zKlj+UClbLfg+ln3hR1wS7CvHj9uH7Z1Nxov5LzMO
PaPBHWVdNX06ERXXMXS2cmmQV39pqqqCgKt/zOISDtFB/vrL1N/qQ8jdyJqx
VowDJqD76ij5A1xbv+ffORMO7I0VS5u6kQm/T6jzf/tzoHqpRMz98SLo8nVV
byjnwMnGqsGDxpXQeu5dWxGJA0+HuV2HlWtgPKukOmuUA+bl+wZs5jSC5J2K
xo9/OBB5d1Z1j2MLKJUO+b7hcSDO5E24MrUVziZe56kIvneyc1e8v+VEx3Cj
5c8f3yOCz0UiSHnS8MSiku/n44kQoeljg6FULPAyJeQSiKBxThf/JVHQ8vHO
TZYbSeBetO2xVTkZjUbaZyg/JIHmwo7vV3tJaOnqMsruIAEvMWlfwhgRQw0W
ytjvJoPfnD6Fd3JEbO+Yu2E3MIGgkvR72aYqvHv8kZp+JhMS7h+eN9BUjp+e
y715vokFi+YvLFslWYyHV/q3FWWzYOf7HN7u1BwM+ml1/Y0BGwpMX/qWz/qE
R2fPUq/qZ0PUFrWrpuujkSZ/1o7mygGFnqKrEn88kaB/VDlSmQtRO2IVBmPc
oZ52c9bYSzKU/NlvkBTEwKo55yvSt1PA+alCtDaVjufX5Iq0dlMgJ0nPsVZd
cB7cdrbq3x0qPMtnVVTcpqH1PNWzfaI02N7DmReaQsXJuMg3S7xpoPtSdGnR
EAW1u/aImc6kg9bXDK+E+RRBXZoxx+I+HdYr9jR2bSOjFDVZVukBF3QCoj+K
hzbiseTd2slDXChaeEV2cE0dWmtRVex28eDT/cJLbRFf8FjKU1EdPx7Y1m3f
PilWid+jbI4R2nlg9VjPcqygBE/L/tu1fREf5vXWaf48kYuLBqJSZPX4sDJe
IS0sIwWPuRnr3bDhw+0HarlftoVj/aOP47ExRLh71+Pf0TIGKolYEAJ7iIJz
WLmdtAIDTf8ak+bJkuBKmOq3dHc6umo0iHHPkaB4V4nKQw4N0yxek+amkCCE
PxTeYEbDI+I3erZNkeCUq+KGqWoqBv7RWgyC72NHzIKX13So6DXbPJZfTIYl
hjdmWWVR0FrFUDnmGBMC9ndl6cT0Im1F4p7yPCY0F9LY3W978NknouaC9Sy4
4nHgc82HbtziVJ99OJwFqfXOTu/SupAzKfdDYykbjPdqtVFrO7FIbWv5g0A2
iBOrulX5Hags0ljRKcOBPP+wO/w1HUhYFfVm4gMHpOOIa5IvtOPhkandrYLx
bjffdOnfF0GdtKR96Zg3GS6Tjhf32QrqP+pN6dPzKVBaWOy1e4qBelLu5Pev
BPvDXHcf60AGjkV0rHEXpwK7ynqnhzwDP9qUxZY7U+EV3TmQnyA4Z//+HbqA
SQWLJpV/NCU61tHNUtWO0+CBV9aKPEF9FC1huGWIzAbLKtsBlvcghsneqPLf
z4HuBfKtbQ8GsF9y20RYFAf6zH6/TTzfj84FC39WjXDA4p5LzsI9fZhMbG8l
6nNBou9zYI5UL7bLmPys8OJC9lrq/oOUbhRdcnBUt5oLz4xL5rl86sJzoWO9
KpNceH9Lky1xpxN//c139n5ABO49lqb3PBbS9p0pqRPkw7EQi+N+lUwcXljx
51WLYC8I17mW5czEVsVXK/JFSdB4zW6W/DYmjugViKluJ8Gd+aVmk98ZqG7V
F1tnRwLv9Efy9zIZmMz0Wng3kQTtYuMBqQ4M7D7a6CNKE+wXbLpB7U4GzrYy
fMs/TwP5OzNnPJ1PRVCBbP0oGkRY1rbGdlBwT2HsCQ0yDUKW97bxoih419eq
O0iJDpxrm3Sf3hLkz9wJdYPbdLhIyz/yQF+wH3+YoiwtosP89asO82UoqCA1
60DvLAZU2by8OMUn4wF2lOO1kwwIMmqNxUYy7hqz1HVeQAL+oSWWMzJZePHr
2LW5liQo07B4/9mXhZ8N/tV//UgCx9s1uW2XWajYK/o06jsJFNLVsg/vYuGi
0x+6jAXnhxDV/Cr9BSw0UDlzLtuVDJxHEmrt/UzcW1g2EV1BBsbOlZvkE5no
7JErNSJKgYvrCBP6t5mYFKK5nvSIDpNJE8Xj+2jY9ede1J1COqQFsuxkJAT7
r4fivBUjdPhDvUo42kjFVzH7PxWoMmCR98bELy+pmFZ+J0TNmgE5qk7jsYZU
fN22K+90AAPsJpJCF82gYkRk7M/lyICtIi/TtIop6EPfv+0skwHB8uNNOnco
aCu3gD7wNQ7WOH2KeLR8GNYuzHvTtSwZTuTdKWGuHoYZD2rx7eV0sOxx23tM
cRjGXkXwn1lmAW1/pMrHtcOwhO6U8HtWLsS5BiX+FFw3VzrgI5uWD07zkjZo
KQyDqdkM1omTRVD++sr+63LDcKDwWKP0SAmob4juDZMahvmfjtg6urRALfP7
MbYRHxpt7ZLWrv0GLsTtD/V1+ED5uqeWV/MNdMTDZd+u48Mx6ZebHa+3Qppe
zL+ZknzQ6/OOPynRBoTF7sf9uDw45tT+VP1jG1hayT83bORB0KNH1I967XBm
X8aBgx95IH7jz3ebznbYuWKdR5QrD/i+iZbP9WPAnL/k0WZzPnjODSu/wU+A
7V88C7038yFVtWVge3EKbE1Z9thLgg+LPGUI4sczION3Vpo+kwe97+cXuLdk
AbE2WLShgQdu2XtMI87kwukZkXStLB6Qzrq3VHPzQUpJxMvvnaD/ntnE595F
UCu/P5PiwwPqu9F2+c9fQat05HDkJy7wEubHlr9ogUWMK/f+fuBC2o8JnYVb
v0HMMCXrSigXRJ4POywb+AYH5y1KZ7zmgmfPx2hHr1aoejye/NSfC1V2IdQK
zTZBXbft0dZALgwVvbke0dcG7HcnvSbCuGBemBoV7t4OR+X667tjuXCd3llh
kJ4DwVkrxLay+LCiacxinFEI9Xq5vkkEPiwu9yQ/XIWQKB3UL/uVD5Uyf3M7
11XC7OCVpi9z+eD9Q+ne3twqUGLdkl0UzAdT/QKvR3tqQGfwxp+i63y4n73s
hSjWQePin7fjtPnQPmSia7GtEc6k2/szRfhwNdjCotliCFTCN53PSmLDitOl
O4IPEoA0ZVbseI0N0UmxjRODBPj93sKqd43gutLI/pq7RMHJzODT/DYWaP97
o/hOjARKyb+Mdz9mAfXyO+0NfoI6sOep9DsFFoxFRHKWSJOBV7Og07qUCZcC
8syXvCGD0uSVE9UnmbDvs93qx48F+W00mrP5BA/+Bf/iFzZnQ7jbMc0QBhdC
t83xlhcvgDD7vu8WHlwYcVbVu32xBM5FXs4vUOLCb+n4wJe3yyHKe/kZRqtg
n15Id8rFSvBLnpEk586B8XNuDWarvkCc4awjT3dxwN+38rekdw2cS9+caDDB
hn03AvM3zhiATeE8p3nxDHAQTX99cs8glGy/Hnr8JgM8i6wCQl2H4Mj17/N1
dRnwS+Okb/gFAlhZcXnUxQygf1z9OGeW4Hydo5d1fVhQB4So8XRSiDC0pV5l
oJMOIyethuqPC/az2YkPj3yhQ8rri1mif0gwErJ31udiOgR2/NGMvFsKDoZ5
u70E+X5WZP3l7XaVcPRa5bFlozxQd/i0qlaqGn5OJE+eTOdB7aNsk95PdfDK
8W3YZSseUCJ64o22N4HPvl9zn4jxYHGf9DGx0y3Qr/mruO0tF/bfW2bjIt4K
to/vP4hW4ULqJ41ZwSltoCI6uk81XTBfrnFXFhpRofCYBv1XKBUuZCaesltG
gwX9qwc8FlNBIi7l3LoBGry2ePvv6jMKbH7keBff0mGxfuLsUSYZrv6yKGg6
wQAJDdFd7oZk0Fgk1UQSZQLuSdK8H0mC/HkM8TeJTBitPBG2mUMEsT9zsrwO
sABEKieXbyGCmnnKKfXRLIjRb112aTEXXIqyPmVT8oHrqv/4qBkHSiJPuJiu
KAXFGWyyeDwb3PIWL35yqAI6Fwf1jI2zwCb2o1LB+ipoEeHM97YQ5NtU/aN1
CjVwgjEmI1XBhLD6zg8iO+qh3fbezt+aTMgKpp98cLUJlH5eUvdMZcCW+eLO
l76SoEDvQ8vxYCLYJgUe5keTwbVq1fs+WSI8uR9kquZMAfFFkRZJHwlgPLkx
KMKMCuaT7yX/6RFAxuMOI0+bBmkR3/+o1Q/Brtlb7/2VF9STL1o3n1Aagu9r
pclDcxmglhnr2/BuEE4rn8/r+cUAwo/idPbGQQh1XiXxrKICPA6RGMoreZDM
8Ywf2VIN7DVWdtwILig4e03p+tTDwXMcI9V5gv1I8q5CdVUzmI52SOy8zYEc
69MSc29/g5HVnKlbNWy4TVuW032zDSaq+5fvWMKGNG3vhjizDijwmR0/ZsIC
P1H5wsObu+C21i/Jje5M0J2VVeR0WvA9ujC60rahDy5R506o7mTCkpT9an5y
veD93oSqu5AFKdaaas9Pd0OC3HcFpT4WkB8VW5g87oSdRz5/d3rLBrN2PmF+
QDtMdno7FxpzYCReZMdQYCsUdJuJPvvNgSjnXLsfz1vAOr1B3V6wL2ocXCs6
Vd8IYwOnKJOnsmCxrZj4qgo2aAT9ND6vlg9+D2/7kzMFdUf0Dc/Y6yVAJder
2CUzIeqvEc1MvAKyj7R1mKYwgFEarPxmdhVwH9iFa+XSwTpPRtZwRw288Nyi
8baWBiOhmqVeQfVgekEpQ5pGheBlAZXmK5pB2rNlh8oCwbmwvtrv6n4KDM5M
drwx1AqH1AM9dDWpcMTca2/t/m/AMDscEL2BBt5YmBnq+RWqV6henrueDonn
XZZnZzbCtlrtS/2C84CSeAc3cEE9hN10ZLvqMMH68iPml8ga+O0/UmEimPf2
kzmXSi99ARdO89VPN9lwNTf2XoPVZzhVu0j38uzPoEa472XUwQFCmceKw58F
9z19AhwRDiht6Krgn2qER78OD+msZoOt2TrTb5Yt0CBt+qFUUJdZLhe/Z+PU
ChSmPllMgwn3JPad//GgHXrN/KlR6xmwTOOPmJF1J3x7HWO1bSEd7rzIaDuq
1g3cEduNtlwqVFsMl/bbMoBzkdpw80k1dKdtX5CymwkqFnN8DzZVgGWNjFu1
OAtknYsuSNIKwfe+mmhBuaD+q7Lnr2hOB//Tbg8X32CDSOPXX6J+oXBtIm+e
/SwOiBxhG8k7B+HfglrTu4L62foH0z1eMx2tXq5+3ziHC8NXTx0S9yjC4aDe
4x/oKRAiLker8RP83gNvydFlmRApC/f0Bes1qkJZrWpBHvS0GS8b66HDg+HB
L4nEIlj2V3t+/gsaGI7t2aezohy2+f6x269PhTm5IYYiYp9hu0phhq3gnLdy
mcwi+w3VsPlSmnZHPQlsbmw+/tGjDkoVfjONIolA5V9KlM8kQYthorn8vHgI
eoeL1gi+TyKnRjYMPXCCS5sjLjb5UEChsW+pNv8d8jcWmgW/pEKG+DLbklXp
yJmTTB8IE+QHad3SHJd8lL5RHS2RRYc5jLYlkSKI9KoIScdOBgyv2eUjJfkZ
X4g9mGE3iwW1EcuTAyyr8YZ9DK+nphE5y66o2l3j42FrsYAlK5vRhzTrSJAN
H036sj7+tv+K0WHXROPO8nF2aMF+wvkWfPakIyTuGB8DFl5jtYp/w6S1NsXv
dvOxfZUyczjlGz4nPfAKVeJj2NlM1+5jrSjlWXMzciEfs1gyO5T5rejwaHTr
5x88rJx/6/DvnD7BObvWDoGLB3aAzokT/ehWl6K2RJ6LoylZ289w+hH3qe9K
GOdg7OqueTnPBvBoUZdaQCsHDfz98sWlB3Fyq0QRK4GD2sf2Bf+NGcTw6JHi
RicO/ni2M3SP2hCu9tove3I/B792GjxwzRjCz14JmW8XcpDlN1i3x7MBGfX0
IVI4D2O2j/qW+TWiX4PhQ1UbHspEDQTsi27CpZnhHZmaPBRbfchIvbQZ01a7
dwWJ8XDvVH5UG/Erng/Ls+F2ctH4rluCgVcLcudbm3ancfEf7WeM0ZpvqPaC
ZHPTh4vPFlUFJpR9Q+aC6rV4jYuBW1cmOLr3onZX2LniPDamVj61+rKuD8Ma
q9cRwtl4W0RiJLWmD5VvS0sw3NiYvaD+R/3NfpyxWaWTeIONe7yd35QuHUCV
toK/PWfY+D7DYq5iyQBKFq173XuUjQq8zOBg20FUvO29n72PjQvpRGrGwiEs
19l4ebEeGxNuGtBbvrbgyrLrv+5ReUhamhIiKd2K3rdMzC1LebhBZwFZ4nQb
mtoqbnjsyxPM90j5osB2JPn8zB8x5WGyCGHJxdoOdE2ZxyfL8PBkvvSqg2Od
mFbkqHi7hYtSS698l1zTjTpyHXM+P+NilE5Rj8jeHpSaqP4goc5FcZjl1fGY
gpOH8sLQmIG/8jWdl0hQ8XqB11z1EUG9PLmMUhZAxRFP75d/Auh45tTR2z5S
NAyLHDawVKZjo0rHp42BNOQW310bXERDpVV/dx2RoKP+uH8FaT8N/cUs/2a4
0PEVuWKbbwMV7UZnqC9h0jFoRiCvz4iKWXM2fwTxZpR6/9nt9h0uKrU336nK
/4pypUHa+J2DJK2k3JTyFryc8OXTNUE+vV0+2jaS8Q1LKCSjAjEOulXPNN6c
2oqLxGxVh4PYGO1w60p1ZhvmLG8in1Blo+GUrq58RTvuYTTZrq5jodL34DXh
PR2YfPpD5ys7Fh6O+JEcXUfC4Di/r/r+VFykvlJ+5Rky2nu4XX6hQ8Xhvn0v
XHlkHKcSjvRzKLgv//yCO54UVBs1dLuaQMGxW6b54WuoWCt9Md/sCgW9IwwT
3iEVT+luPfR1MwWTNo0fWWlNQ0XNWcuGp8h4UFQ9rlCMjn4k1oPOLjKW27zg
uGW14qVGj8nb41xcGX6BybBvxy1rDt13DOHi08dsp2VrOjEqTWaMtp6LrjP+
eEjWduEA5bC/RCoHH/oc+Vh/sQfb9+Vd3KjEwZVqg0kXhnvRZAPV+2UEG5f5
96yn3urHtHRyj88MNu6e+jfnLmEA1c6Hl7peYqFIjlxwK5WBm5/dNNIxJmJB
54ZIjVAmqnxKdX+aQMDT7irtu/ewsD18+48p1hAevr4sL3SAhXYxCzi7Hg5i
ndFOdr8DG13/FlGCx/rR3nqBc74IB63kM9+yr/Xh2L2pidbnHNwpoyK3qbkH
DeLy2ogTHHy344La0Q3dKDGHm/AprRnfhlsd3b6Wg+EEipvjoRY8pjJuesCY
jemSNZ4pxt+wOD5P+spTFo5pOcRZX2vF5HzNO0uKmDj2O2cBN6QNt1G87Mr+
MJD42a81sr0dnzEcWP16DJSTD91TuK4T9b1JVn3+gjy0ST1xz6MLdbMVwxTp
NEy4/GPnqQIquqayjUri+7BotUdyxG0aOkuaLY2z7cWdLc+uWmrQcdvqU7kx
O3pwTnQDc+NvOqoRM0VvrOxGb5t7zl5VDFwd7Z0YJ9WF7htdnoqGMfHN/O+d
bIVOLFheUSt7h4V3lV71tuh3IG3rppojgrgWtS5p7HJqx8+HLj1qrG9Dll3k
gFwtB+M8nfaZ13fgvvJllq1SHDw/+ujYwoIuDI18S7ljysYt+z8ebArswX1B
mdU3fFh4xO738ocWfbjaYu+OnTlMbEiNDJglOYCTdTfmnm5joLjxlYk7CYPo
lXnt0mEGHT+xuqxtpQnY+QdvRf2koZOfq7OcMwuD5+yb72vdinev/llipMHG
Y212BqttW3AgtVdsSS8bvcd3LHqW2YiK515USQrW4d21Z+PNHtaitGTt5T5x
QV4+WdC6a10V/rpQ8ln1BRddav94u19DlNS3yE6f5KKaXc3rRWfzcIfffG1F
wb5e/kiKMrIvGQ2L/tyru9qEeho/2Wb9gt+XV/8qSOwrmvvIKe3PZWLitg/x
x6+3IG+PdNL9IAZeJ3ud/2H/DVd1Z8wKc6KjCcyKC/BrRcX0AZPjF2nY/+Hi
Ro/aNrR8uCHvwCnB/qK0fvbSlR142u+xrOwxCib0r9h517sT8xwCs61NyLhq
Sc42fiIVI8e+KctpVeNBU/MwuRs07F2uetbhQiXaJJQ0fdtJR5Hb+z1fXC/F
9Qdezw1bzMCxX6+XPbiUh1vPFPzgjjAwykh9Z/6ldJQTO8Y/QmJiWKivhWl2
DD7UNnFU6mGhG2+T145RH+SY9ZrzutlY7vy4V2ngKex2UAy4ntEDQ02/GiX9
uKDJkxbtMe2FnIE50gkPudC2yslK4U8vuN6sNTtygQs/bOInhsL7oH7xMpH5
+7lwbMI9rWBHP9j/elIzto4Ll5b2/DvS2g+9zSapiqJcyHELv6J/bQB6/5yh
fejhwNU9a713TQzAq5uXer3SOCCd1ZT4e5IEwwV3F73RYsFbYtPio/vJMLLR
fO8MwblvmZvRMhMfMhyJ/r1/YTsT+vpG+7sayVDt3Z3WHckE0a8R/0rmUaA7
Oumf62UmxF97+LHnEAVWe4QHrlVlQqhcYuJcdwoo+ob4MzkMMFzx1E+lmAJP
OM5No4Lzu/PamhCp6m4ItV2u09LCgSGFhxdOa/XAj6p/Tv2CcyO6d17KS+yB
343jjjHHOSBRFJTLV+yFXRmsOQdlOHA6amCsMKYXjOuKzbkDbBg02+Jet7EP
ajPeVeQlsqEjeJP/18w+UFDZ9aXyPhuIPzddcNbrh/Xha36rG7Khdd7JEBkF
EnhTNTbtaWZACvvN+uBrJNAx116zIZYBpxTHLBbkCtrPDc7GPmLA4CbFZ+Zi
ZEg4K6XXZMaAV38W9+07LpgfvcezC3cwYNUq5eQ4Qf0YSm1IfyjHAG5Oj7nh
TzJYO778IT+DAVfutr2eEtQb29zf6xTx6FCrrrpJn9gHZZcC51i3cUBWN/n9
tiUDsENcpnOpHwcub7w5sn7XINSfJDzw0ufA/Tei9ReshuDYjxADBpcNexLt
Y1fvIkCLiXjhlSA20C6/qPKuIoCLYp+97hY2KPgFPl9tSARH20Huu3oWyJR1
/A6oJoJVGdO/zpIFJZe/kOXfMcDN/l5Y3xoKUHYVqm+QZoLCTHkbqTQyPHE+
mejkzQSKpTbtvRYZhtXvz20ZZcKPubvnlgvmRaPGMpgneE7RxhzWF01BHi35
rhNayoIfzPK0yUQinPb9Xum7jA3K3j3HC+SIQH/aRv9wnQ2h/PYHh3wIsEp/
nVdGUA/0nv31bsZrNuipMFratXvhwOfvn4P/sUBSnkn4zBXk/wWJK8Z3WPAq
b7H60vQ+yFu7TNWLwYR59EEDk8f98ETfb56vDRN4xuvERc0F+c0L2JxOZcD6
BvM/sXsGweRgaubOmwxwcNLzz9AYAn6/6eM7Y4J6keK/lWZHg8W+RI/npYLx
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
                   
                   "], {{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    Arrowheads[0.], {
                    ArrowBox[{1, 2}, 0.02254220222992223], 
                    ArrowBox[{1, 5}, 0.02254220222992223], 
                    ArrowBox[{1, 7}, 0.02254220222992223], 
                    ArrowBox[{1, 9}, 0.02254220222992223], 
                    ArrowBox[{1, 11}, 0.02254220222992223], 
                    ArrowBox[{1, 13}, 0.02254220222992223], 
                    ArrowBox[{1, 15}, 0.02254220222992223], 
                    ArrowBox[{1, 17}, 0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-2.1409496216940123`*^-16, -1.0434049156924905`}, 5}],
                     0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {1.0704748108470062`*^-15, -0.9225412836753133}, 5}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.19317181243605622`, -1.0333779239158283`}, 7}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.1495108326247347, -0.7998123114976872}, 7}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.3696769958201283, -0.9542463251548349}, 9}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.24459071364353785`, -0.6313614109083246}, 9}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.5056775470872312, -0.8166972803055038}, 11}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.272398578269021, -0.43993880945047653`}, 11}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.582805838183662, -0.6393075500603161}, 13}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.229178820294798, -0.251397190160288}, 13}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.590645266014236, -0.4460346004393019}, 15}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.12076850752425144`, -0.09120014346806327}, 15}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {-0.04103500681170743, -0.01167546606958506}, 4}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.5674671696890601, 0.16145833033997112`}, 4}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.15069014333422975`, 0.013963498134084052`}, 6}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.7369836857302795, 0.06829159554065786}, 6}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.33873038367193714`, -0.031387992444006356`}, 8}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.8613974228519735, -0.07982022606495483}, 8}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.49768983777687453`, -0.14160496769998895`}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.9239056164555438, -0.26287381225308243`}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.6061001505474233, -0.3018020143922123}, 12}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.9160661886249679, -0.45614676187410347`}, 12}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.6493199085216432, -0.4903436336824059}, 14}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.8389378975285393, -0.633536492119288}, 14}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.6215120438961692, -0.6817662351402451}, 16}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.7029373462614268, -0.7710855369686257}, 16}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.19172515014593514`, 1.0256389642036672`}, 6}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.16951651604121815`, 0.9068332652006886}, 6}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.37976539048364444`, 0.9802874736255784}, 8}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.2939302531629152, 0.7587214435950802}, 8}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.5387248445885809, 0.8700704983695936}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.35643844676648223`, 0.5756678574069446}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.6471351573591255, 0.7098734516773724}, 12}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.34859901893590606`, 0.3823949077859304}, 12}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.6903549153333459, 0.5213318323871787}, 14}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.27147072783947207`, 0.20500517754074105`}, 14}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.3769213302526145, -0.9729461079072422}, 7}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.33326035044130586`, -0.8602441275062771}, 7}], 
                    0.02254220222992223], 
                    ArrowBox[
                    BezierCurveBox[{
                    5, {-0.5534265136367049, -0.8938145091462413}, 9}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.4283402314601095, -0.6917932269169124}, 9}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.6894270649037971, -0.7562654642969203}, 11}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.4561480960855884, -0.500370625459065}, 11}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.7665553560002341, -0.5788757340517223}, 13}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.41292833811137236`, -0.31182900616887055`}, 13}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5492819065248636, 0.887120738826274}, 8}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.4856554033088557, 0.7843604077987405}, 8}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.7082413606297987, 0.7769037635702826}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5481635969124143, 0.6013068216106137}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.8166516734003458, 0.616706716878059}, 12}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5403241690818401, 0.4080338719895959}, 12}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.7029373462614349, -0.7710855369686219}, 9}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.6215120438961611, -0.6817662351402489}, 9}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.8389378975285295, -0.6335364921192947}, 11}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.6493199085216452, -0.4903436336824001}, 11}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    8, {0.83265509775149, 0.6287919419646689}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    8, {0.7362038372501287, 0.5559553310325218}, 10}], 
                    0.02254220222992223]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    DiskBox[1, 0.02254220222992223], 
                    DiskBox[2, 0.02254220222992223], 
                    DiskBox[3, 0.02254220222992223], 
                    DiskBox[4, 0.02254220222992223], 
                    DiskBox[5, 0.02254220222992223], 
                    DiskBox[6, 0.02254220222992223], 
                    DiskBox[7, 0.02254220222992223], 
                    DiskBox[8, 0.02254220222992223], 
                    DiskBox[9, 0.02254220222992223], 
                    DiskBox[10, 0.02254220222992223], 
                    DiskBox[11, 0.02254220222992223], 
                    DiskBox[12, 0.02254220222992223], 
                    DiskBox[13, 0.02254220222992223], 
                    DiskBox[14, 0.02254220222992223], 
                    DiskBox[15, 0.02254220222992223], 
                    DiskBox[16, 0.02254220222992223], 
                    DiskBox[17, 0.02254220222992223]}}], {
                  Background -> GrayLevel[0, 0], FormatType -> 
                   TraditionalForm, FrameTicks -> None, ImageSize -> 32}], 
                 GridBox[{{
                    TagBox[
                    TemplateBox[{
                    StyleBox["\"Points: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox[
                    "\"\\!\\(\\*RowBox[{\\\"10\\\"}]\\)\"", 
                    StringForm["``", 10], Editable -> False]}, "RowDefault"], 
                    "SummaryItem"]}, {
                    TagBox[
                    TemplateBox[{
                    StyleBox["\"Dimensions: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox["\"\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\"", 
                    StringForm["``", 3], Editable -> False]}, "RowDefault"], 
                    "SummaryItem"]}, {
                    TagBox[
                    TemplateBox[{
                    StyleBox["\"Simplex Count: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox["\"\\!\\(\\*RowBox[{\\\"385\\\"}]\\)\"", 
                    StringForm["``", 385], Editable -> False]}, "RowDefault"],
                     "SummaryItem"]}, {
                    TagBox[
                    TemplateBox[{
                    StyleBox["\"Filtration Length: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox[
                    "\"\\!\\(\\*RowBox[{\\\"45\\\"}]\\)\"", 
                    StringForm["``", 45], Editable -> False]}, "RowDefault"], 
                    "SummaryItem"]}, {
                    TagBox[
                    TemplateBox[{
                    StyleBox["\"Generators: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox[
                    "\"\\!\\(\\*RowBox[{\\\"35\\\"}]\\)\"", 
                    StringForm["``", 35], Editable -> False]}, "RowDefault"], 
                    "SummaryItem"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel["PersistentHomologyObject", 1800656, 
              Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
          ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           "PersistentHomologyObject", 
            10740114598802730289645251208157634389208250217578689924768, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm, 
            ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
          "SummaryEmbedButton", ImageSize -> Inherited, 
          BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "PersistentHomologyObject[<|Points -> {{0.540558, 0.208324, 0.0814161}, \
{0.00129297, 0.446641, 0.894455}, {0.164448, 0.609031, 0.0627587}, {0.115234, \
0.441508, 0.799684}, {0.41501, 0.426921, 0.87408}, {0.471, 0.415582, \
0.295995}, {0.457074, 0.890579, 0.952611}, {0.552771, 0.653242, 0.356828}, \
{0.279893, 0.462175, 0.945655}, {0.990844, 0.0672289, 0.938108}}, <<7>>, \
Edges -> <<1>>|>]"& )],
  False,
  BoxID -> 10740114598802730289645251208157634389208250217578689924768,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellEditDuplicate->True,
 TaggingRules->{},
 CellChangeTimes->{3.80449292180836*^9, 3.8230215043361263`*^9},
 CellID->149730145]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Properties and Relations",
 "\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"],
 "\[NonBreakingSpace]"
}], "Subsection",
 TaggingRules->{},
 CellID->232113220],

Cell[TextData[{
 Cell[BoxData[
  StyleBox["PersistentHomology", "InlineResourceFunction"]], "InlineFormula",
  FontFamily->"Source Sans Pro"],
 " is invariant under isometries:"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8044925075778637`*^9, 3.804492523120275*^9}, {
   3.8044925901585293`*^9, 3.804492595861801*^9}, {3.804492759251581*^9, 
   3.804492761618194*^9}, {3.804492850841065*^9, 3.804492885822322*^9}, {
   3.8044929575559893`*^9, 3.80449299906669*^9}, {3.80449303149861*^9, 
   3.804493041962367*^9}, 3.804493101200829*^9, {3.804493223228202*^9, 
   3.8044932428541527`*^9}, 3.8230213938662577`*^9},
 CellID->525250214],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"SpherePoints", "[", "10", "]"}]}], ";"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.804493244418788*^9, 3.804493250986761*^9}, 
   3.8230215632150106`*^9},
 CellLabel->"In[61]:=",
 CellID->841205276],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   InterpretationBox[
    TagBox[
     DynamicModuleBox[{Typeset`open = False}, 
      FrameBox[
       PaneSelectorBox[{False->GridBox[{
          {
           PaneBox[GridBox[{
              {
               StyleBox[
                StyleBox[
                 AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                  BoxBaselineShift->-0.25,
                  BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                 
                 FontColor->RGBColor[
                  0.8745098039215686, 0.2784313725490196, 
                   0.03137254901960784]],
                ShowStringCharacters->False,
                FontFamily->"Source Sans Pro Black",
                FontSize->0.6538461538461539 Inherited,
                FontWeight->"Heavy",
                PrivateFontOptions->{"OperatorSubstitution"->False}], 
               StyleBox[
                RowBox[{
                 StyleBox["PersistentHomology", "ResourceFunctionLabel"], 
                 " "}],
                ShowAutoStyles->False,
                ShowStringCharacters->False,
                FontSize->Rational[12, 13] Inherited,
                FontColor->GrayLevel[0.1]]}
             },
             GridBoxSpacings->{"Columns" -> {{0.25}}}],
            Alignment->Left,
            BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
            BaselinePosition->Baseline,
            FrameMargins->{{3, 0}, {0, 0}}], 
           ItemBox[
            PaneBox[
             TogglerBox[Dynamic[Typeset`open], {True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "IconizeCloser"],
               ImageSizeCache->{11., {1., 10.}}], False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "IconizeOpener"],
               ImageSizeCache->{11., {1., 10.}}]},
              Appearance->None,
              BaselinePosition->Baseline,
              ContentPadding->False,
              FrameMargins->0],
             Alignment->Left,
             BaselinePosition->Baseline,
             FrameMargins->{{1, 1}, {0, 0}}],
            Frame->{{
               RGBColor[
               0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                0.5], False}, {False, False}}]}
         },
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
        GridBox[{
          {GridBox[{
             {
              PaneBox[GridBox[{
                 {
                  StyleBox[
                   StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                   ShowStringCharacters->False,
                   FontFamily->"Source Sans Pro Black",
                   FontSize->0.6538461538461539 Inherited,
                   FontWeight->"Heavy",
                   PrivateFontOptions->{"OperatorSubstitution"->False}], 
                  StyleBox[
                   RowBox[{
                    StyleBox["PersistentHomology", "ResourceFunctionLabel"], 
                    " "}],
                   ShowAutoStyles->False,
                   ShowStringCharacters->False,
                   FontSize->Rational[12, 13] Inherited,
                   FontColor->GrayLevel[0.1]]}
                },
                GridBoxSpacings->{"Columns" -> {{0.25}}}],
               Alignment->Left,
               BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
               BaselinePosition->Baseline,
               FrameMargins->{{3, 0}, {0, 0}}], 
              ItemBox[
               PaneBox[
                TogglerBox[Dynamic[Typeset`open], {True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "IconizeCloser"]], False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "IconizeOpener"]]},
                 Appearance->None,
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0],
                Alignment->Left,
                BaselinePosition->Baseline,
                FrameMargins->{{1, 1}, {0, 0}}],
               Frame->{{
                  RGBColor[
                  0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                   0.5], False}, {False, False}}]}
            },
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
          {
           StyleBox[
            PaneBox[GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Version (latest): \"\>",
                  "IconizedLabel"], " ", 
                 TagBox["\<\"1.0.1\"\>",
                  "IconizedItem"]}]},
               {
                TagBox[
                 
                 TemplateBox[{
                  "\"Documentation \[RightGuillemet]\"", 
                   "https://resources.wolframcloud.com/FunctionRepository/\
resources/PersistentHomology"},
                  "HyperlinkURL"],
                 "IconizedItem"]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             Alignment->Left,
             BaselinePosition->Baseline,
             FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
            FontFamily->"Roboto",
            FontSize->11]}
         },
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
              GrayLevel[0.8]}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open],
        BaselinePosition->Baseline,
        ImageSize->Automatic],
       Background->RGBColor[
        0.9686274509803922, 0.9764705882352941, 0.984313725490196],
       BaselinePosition->Baseline,
       DefaultBaseStyle->{},
       FrameMargins->{{0, 0}, {1, 0}},
       FrameStyle->RGBColor[
        0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
       RoundingRadius->4]],
     {"FunctionResourceBox", 
      RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
      "PersistentHomology"},
     TagBoxNote->"FunctionResourceBox"],
    ResourceFunction["PersistentHomology"],
    BoxID -> "PersistentHomology",
    Selectable->False], "[", "data", "]"}], "[", "\"\<Barcode\>\"", 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.804493255118435*^9, 3.8044933556321297`*^9}, {
   3.804493411586969*^9, 3.804493420817553*^9}, {3.8044934542166367`*^9, 
   3.8044934632416267`*^9}, {3.8044951554933367`*^9, 3.8044951578052607`*^9}, 
   3.8230215641399837`*^9},
 CellID->949887617],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{
     {RGBColor[0.90222, 0.101808, 0.198306], PointSize[Medium], 
      AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{-2.2250738585072014`*^-308, 1}], 
         PointBox[{1.0514622242382672`, 1}], 
         LineBox[{{-2.2250738585072014`*^-308, 1}, {1.0514622242382672`, 1}}]},
        "1"],
       Annotation[#, 1, "Tooltip"]& ]}, 
     {RGBColor[0.90222, 0.101808, 0.198306], PointSize[Medium], 
      AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{-2.2250738585072014`*^-308, 2}], 
         PointBox[{1.0514622242382672`, 2}], 
         LineBox[{{-2.2250738585072014`*^-308, 2}, {1.0514622242382672`, 2}}]},
        "2"],
       Annotation[#, 2, "Tooltip"]& ]}, 
     {RGBColor[0.90222, 0.101808, 0.198306], PointSize[Medium], 
      AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{-2.2250738585072014`*^-308, 3}], 
         PointBox[{1.0514622242382672`, 3}], 
         LineBox[{{-2.2250738585072014`*^-308, 3}, {1.0514622242382672`, 3}}]},
        "3"],
       Annotation[#, 3, "Tooltip"]& ]}, 
     {RGBColor[0.90222, 0.101808, 0.198306], PointSize[Medium], 
      AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{-2.2250738585072014`*^-308, 4}], 
         PointBox[{1.0514622242382672`, 4}], 
         LineBox[{{-2.2250738585072014`*^-308, 4}, {1.0514622242382672`, 4}}]},
        "4"],
       Annotation[#, 4, "Tooltip"]& ]}, 
     {RGBColor[0.90222, 0.101808, 0.198306], PointSize[Medium], 
      AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{-2.2250738585072014`*^-308, 5}], 
         PointBox[{1.0514622242382672`, 5}], 
         LineBox[{{-2.2250738585072014`*^-308, 5}, {1.0514622242382672`, 5}}]},
        "5"],
       Annotation[#, 5, "Tooltip"]& ]}, 
     {RGBColor[0.90222, 0.101808, 0.198306], PointSize[Medium], 
      AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{-2.2250738585072014`*^-308, 6}], 
         PointBox[{1.0514622242382672`, 6}], 
         LineBox[{{-2.2250738585072014`*^-308, 6}, {1.0514622242382672`, 6}}]},
        "6"],
       Annotation[#, 6, "Tooltip"]& ]}, 
     {RGBColor[0.90222, 0.101808, 0.198306], PointSize[Medium], 
      AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{-2.2250738585072014`*^-308, 7}], 
         PointBox[{1.0514622242382672`, 7}], 
         LineBox[{{-2.2250738585072014`*^-308, 7}, {1.0514622242382672`, 7}}]},
        "7"],
       Annotation[#, 7, "Tooltip"]& ]}, 
     {RGBColor[0.90222, 0.101808, 0.198306], PointSize[Medium], 
      AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{-2.2250738585072014`*^-308, 8}], 
         PointBox[{1.0514622242382672`, 8}], 
         LineBox[{{-2.2250738585072014`*^-308, 8}, {1.0514622242382672`, 8}}]},
        "8"],
       Annotation[#, 8, "Tooltip"]& ]}, 
     {RGBColor[0.90222, 0.101808, 0.198306], PointSize[Medium], 
      AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{-2.2250738585072014`*^-308, 9}], 
         PointBox[{1.0514622242382672`, 9}], 
         LineBox[{{-2.2250738585072014`*^-308, 9}, {1.0514622242382672`, 9}}]},
        "9"],
       Annotation[#, 9, "Tooltip"]& ]}, 
     {RGBColor[0.14287214708202123`, 0.7165497398815136, 1.], PointSize[
      Medium], AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{1.0514622242382667`, 10}], 
         PointBox[{1.70130161670408, 10}], 
         LineBox[{{1.0514622242382667`, 10}, {1.70130161670408, 10}}]},
        "10"],
       Annotation[#, 10, "Tooltip"]& ]}}, InsetBox[
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"H\"", 
         RGBColor[0.4, 0.4, 1.], StripOnInput -> False], 
        StyleBox["0", 
         RGBColor[0.4, 0.4, 1.], StripOnInput -> False]], 
       SubscriptBox[
        StyleBox["\"H\"", 
         RGBColor[0.4, 0.4, 1.], StripOnInput -> False], 
        StyleBox["1", 
         RGBColor[0.4, 0.4, 1.], StripOnInput -> False]], 
       SubscriptBox[
        StyleBox["\"H\"", 
         RGBColor[0.4, 0.4, 1.], StripOnInput -> False], 
        StyleBox["2", 
         RGBColor[0.4, 0.4, 1.], StripOnInput -> False]]},
      "LineLegend",
      DisplayFunction->(FormBox[
        PanelBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.90222, 0.101808, 0.198306], 
                    Thickness[0.27]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.90222, 0.101808, 0.198306], 
                    Thickness[0.27]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.14287214708202123`, 0.7165497398815136, 1.], 
                    Thickness[0.27]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.14287214708202123`, 0.7165497398815136, 1.], 
                    Thickness[0.27]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9729188047180777, 0.9391259962046635, 
                    0.201748879675973], 
                    Thickness[0.27]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9729188047180777, 0.9391259962046635, 
                    0.201748879675973], 
                    Thickness[0.27]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
           False], {FontFamily -> "Arial"}, StripOnInput -> False], 
         Background -> Automatic, ContentPadding -> True, 
         FrameMargins -> {{5, 5}, {5, 5}}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.90222, 0.101808, 0.198306], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.60148, 0.067872, 0.13220400000000002`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.90222`", ",", "0.101808`", ",", "0.198306`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.90222, 0.101808, 0.198306]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.90222, 0.101808, 0.198306], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "0.015`", "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.14287214708202123`, 0.7165497398815136, 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.09524809805468082, 0.47769982658767574`, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.14287214708202123`", ",", "0.7165497398815136`", ",", 
                    "1.`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14287214708202123`, 0.7165497398815136, 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.14287214708202123`, 0.7165497398815136, 1.], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "0.015`", "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9729188047180777, 0.9391259962046635, 
                    0.201748879675973], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6486125364787185, 0.6260839974697757, 
                    0.13449925311731534`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9729188047180777`", ",", "0.9391259962046635`", ",", 
                    "0.201748879675973`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9729188047180777, 0.9391259962046635, 
                    0.201748879675973]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9729188047180777, 0.9391259962046635, 
                    0.201748879675973], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.015`", "]"}]}], "}"}], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 0, 1], Editable -> False, Selectable -> False]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "Panel"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.9, 0.15}], ImageScaled[{0.9, 0.15}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, False},
   AxesLabel->{None},
   AxesOrigin->{Automatic, Automatic},
   DisplayFunction->Identity,
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   ImagePadding->All,
   ImageSize->{Automatic, 168.87420196121218`},
   PlotRange->{{-2.2250738585072014`*^-308, 1.70130161670408}, {0, 10}},
   PlotRangePadding->{{
      Scaled[0.1], 
      Scaled[0.1]}, {0, 1}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{
       RGBColor[0.24720000000000014`, 0.24, 0.6], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.90222, 0.101808, 0.198306]], {
        Tooltip[{{{
            Point[{-2.2250738585072014`*^-308, 1}]}, {
            Point[{1.0514622242382672`, 1}]}, 
           
           Line[{{-2.2250738585072014`*^-308, 1}, {
             1.0514622242382672`, 1}}]}}, 1]}}, {
       RGBColor[0.6, 0.24, 0.4428931686004542], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.90222, 0.101808, 0.198306]], {
        Tooltip[{{{
            Point[{-2.2250738585072014`*^-308, 2}]}, {
            Point[{1.0514622242382672`, 2}]}, 
           
           Line[{{-2.2250738585072014`*^-308, 2}, {
             1.0514622242382672`, 2}}]}}, 2]}}, {
       RGBColor[0.6, 0.5470136627990908, 0.24], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.90222, 0.101808, 0.198306]], {
        Tooltip[{{{
            Point[{-2.2250738585072014`*^-308, 3}]}, {
            Point[{1.0514622242382672`, 3}]}, 
           
           Line[{{-2.2250738585072014`*^-308, 3}, {
             1.0514622242382672`, 3}}]}}, 3]}}, {
       RGBColor[0.24, 0.6, 0.33692049419863584`], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.90222, 0.101808, 0.198306]], {
        Tooltip[{{{
            Point[{-2.2250738585072014`*^-308, 4}]}, {
            Point[{1.0514622242382672`, 4}]}, 
           
           Line[{{-2.2250738585072014`*^-308, 4}, {
             1.0514622242382672`, 4}}]}}, 4]}}, {
       RGBColor[0.24, 0.3531726744018182, 0.6], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.90222, 0.101808, 0.198306]], {
        Tooltip[{{{
            Point[{-2.2250738585072014`*^-308, 5}]}, {
            Point[{1.0514622242382672`, 5}]}, 
           
           Line[{{-2.2250738585072014`*^-308, 5}, {
             1.0514622242382672`, 5}}]}}, 5]}}, {
       RGBColor[0.6, 0.24, 0.5632658430022722], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.90222, 0.101808, 0.198306]], {
        Tooltip[{{{
            Point[{-2.2250738585072014`*^-308, 6}]}, {
            Point[{1.0514622242382672`, 6}]}, 
           
           Line[{{-2.2250738585072014`*^-308, 6}, {
             1.0514622242382672`, 6}}]}}, 6]}}, {
       RGBColor[0.6, 0.42664098839727194`, 0.24], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.90222, 0.101808, 0.198306]], {
        Tooltip[{{{
            Point[{-2.2250738585072014`*^-308, 7}]}, {
            Point[{1.0514622242382672`, 7}]}, 
           
           Line[{{-2.2250738585072014`*^-308, 7}, {
             1.0514622242382672`, 7}}]}}, 7]}}, {
       RGBColor[0.2634521802031821, 0.6, 0.24], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.90222, 0.101808, 0.198306]], {
        Tooltip[{{{
            Point[{-2.2250738585072014`*^-308, 8}]}, {
            Point[{1.0514622242382672`, 8}]}, 
           
           Line[{{-2.2250738585072014`*^-308, 8}, {
             1.0514622242382672`, 8}}]}}, 8]}}, {
       RGBColor[0.24, 0.47354534880363613`, 0.6], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.90222, 0.101808, 0.198306]], {
        Tooltip[{{{
            Point[{-2.2250738585072014`*^-308, 9}]}, {
            Point[{1.0514622242382672`, 9}]}, 
           
           Line[{{-2.2250738585072014`*^-308, 9}, {
             1.0514622242382672`, 9}}]}}, 9]}}, {
       RGBColor[0.5163614825959097, 0.24, 0.6], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.14287214708202123`, 0.7165497398815136, 1.]], {
        Tooltip[{{{
            Point[{1.0514622242382667`, 10}]}, {
            Point[{1.70130161670408, 10}]}, 
           Line[{{1.0514622242382667`, 10}, {1.70130161670408, 10}}]}}, 
         10]}}}, AxesLabel -> {None}, Ticks -> {Automatic, Automatic}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     PlotRange -> {{-2.2250738585072014`*^-308, 1.70130161670408}, {0, 10}}, 
     PlotRangePadding -> {{
        Scaled[0.1], 
        Scaled[0.1]}, {0, 1}}, AspectRatio -> GoldenRatio^(-1), 
     AxesOrigin -> {Automatic, Automatic}, Axes -> {True, False}, 
     ImagePadding -> All, {}], 
    Placed[
     Unevaluated[
      LineLegend[{{
         RGBColor[0.90222, 0.101808, 0.198306], 
         Thickness[0.015]}, {
         RGBColor[0.14287214708202123`, 0.7165497398815136, 1.], 
         Thickness[0.015]}, {
         RGBColor[0.9729188047180777, 0.9391259962046635, 0.201748879675973], 
         
         Thickness[0.015]}, 
        RGBColor[0, 0, 1]}, {
        Subscript[
         Style["H", 
          RGBColor[0.4, 0.4, 1.]], 
         Style[0, 
          RGBColor[0.4, 0.4, 1.]]], 
        Subscript[
         Style["H", 
          RGBColor[0.4, 0.4, 1.]], 
         Style[1, 
          RGBColor[0.4, 0.4, 1.]]], 
        Subscript[
         Style["H", 
          RGBColor[0.4, 0.4, 1.]], 
         Style[2, 
          RGBColor[0.4, 0.4, 1.]]]}, 
       Joined -> {True, True, True, True, True, True, True, True, True, True},
        LabelStyle -> {}, LegendFunction -> Panel, LegendLayout -> 
       "Column"]], {
      Scaled[{0.9, 0.15}], 
      Scaled[{0.9, 0.15}]}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8230215780298705`*^9},
 CellID->929953772]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   InterpretationBox[
    TagBox[
     DynamicModuleBox[{Typeset`open = False}, 
      FrameBox[
       PaneSelectorBox[{False->GridBox[{
          {
           PaneBox[GridBox[{
              {
               StyleBox[
                StyleBox[
                 AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                  BoxBaselineShift->-0.25,
                  BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                 
                 FontColor->RGBColor[
                  0.8745098039215686, 0.2784313725490196, 
                   0.03137254901960784]],
                ShowStringCharacters->False,
                FontFamily->"Source Sans Pro Black",
                FontSize->0.6538461538461539 Inherited,
                FontWeight->"Heavy",
                PrivateFontOptions->{"OperatorSubstitution"->False}], 
               StyleBox[
                RowBox[{
                 StyleBox["PersistentHomology", "ResourceFunctionLabel"], 
                 " "}],
                ShowAutoStyles->False,
                ShowStringCharacters->False,
                FontSize->Rational[12, 13] Inherited,
                FontColor->GrayLevel[0.1]]}
             },
             GridBoxSpacings->{"Columns" -> {{0.25}}}],
            Alignment->Left,
            BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
            BaselinePosition->Baseline,
            FrameMargins->{{3, 0}, {0, 0}}], 
           ItemBox[
            PaneBox[
             TogglerBox[Dynamic[Typeset`open], {True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "IconizeCloser"],
               ImageSizeCache->{11., {1., 10.}}], False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "IconizeOpener"],
               ImageSizeCache->{11., {1., 10.}}]},
              Appearance->None,
              BaselinePosition->Baseline,
              ContentPadding->False,
              FrameMargins->0],
             Alignment->Left,
             BaselinePosition->Baseline,
             FrameMargins->{{1, 1}, {0, 0}}],
            Frame->{{
               RGBColor[
               0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                0.5], False}, {False, False}}]}
         },
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
        GridBox[{
          {GridBox[{
             {
              PaneBox[GridBox[{
                 {
                  StyleBox[
                   StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                   ShowStringCharacters->False,
                   FontFamily->"Source Sans Pro Black",
                   FontSize->0.6538461538461539 Inherited,
                   FontWeight->"Heavy",
                   PrivateFontOptions->{"OperatorSubstitution"->False}], 
                  StyleBox[
                   RowBox[{
                    StyleBox["PersistentHomology", "ResourceFunctionLabel"], 
                    " "}],
                   ShowAutoStyles->False,
                   ShowStringCharacters->False,
                   FontSize->Rational[12, 13] Inherited,
                   FontColor->GrayLevel[0.1]]}
                },
                GridBoxSpacings->{"Columns" -> {{0.25}}}],
               Alignment->Left,
               BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
               BaselinePosition->Baseline,
               FrameMargins->{{3, 0}, {0, 0}}], 
              ItemBox[
               PaneBox[
                TogglerBox[Dynamic[Typeset`open], {True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "IconizeCloser"]], False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "IconizeOpener"]]},
                 Appearance->None,
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0],
                Alignment->Left,
                BaselinePosition->Baseline,
                FrameMargins->{{1, 1}, {0, 0}}],
               Frame->{{
                  RGBColor[
                  0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                   0.5], False}, {False, False}}]}
            },
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
          {
           StyleBox[
            PaneBox[GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Version (latest): \"\>",
                  "IconizedLabel"], " ", 
                 TagBox["\<\"1.0.1\"\>",
                  "IconizedItem"]}]},
               {
                TagBox[
                 
                 TemplateBox[{
                  "\"Documentation \[RightGuillemet]\"", 
                   "https://resources.wolframcloud.com/FunctionRepository/\
resources/PersistentHomology"},
                  "HyperlinkURL"],
                 "IconizedItem"]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             Alignment->Left,
             BaselinePosition->Baseline,
             FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
            FontFamily->"Roboto",
            FontSize->11]}
         },
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
              GrayLevel[0.8]}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open],
        BaselinePosition->Baseline,
        ImageSize->Automatic],
       Background->RGBColor[
        0.9686274509803922, 0.9764705882352941, 0.984313725490196],
       BaselinePosition->Baseline,
       DefaultBaseStyle->{},
       FrameMargins->{{0, 0}, {1, 0}},
       FrameStyle->RGBColor[
        0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
       RoundingRadius->4]],
     {"FunctionResourceBox", 
      RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
      "PersistentHomology"},
     TagBoxNote->"FunctionResourceBox"],
    ResourceFunction["PersistentHomology"],
    BoxID -> "PersistentHomology",
    Selectable->False], "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}], "+", "#1"}], "&"}], ")"}], "/@", 
    RowBox[{"SpherePoints", "[", "10", "]"}]}], "]"}], "[", "\"\<Barcode\>\"",
   "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.804495160113929*^9, 3.8044951606130543`*^9}, 
   3.823021565013959*^9},
 CellID->628606760],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{
     {RGBColor[0.90222, 0.101808, 0.198306], PointSize[Medium], 
      AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{-2.2250738585072014`*^-308, 1}], 
         PointBox[{1.0514622242382672`, 1}], 
         LineBox[{{-2.2250738585072014`*^-308, 1}, {1.0514622242382672`, 1}}]},
        "1"],
       Annotation[#, 1, "Tooltip"]& ]}, 
     {RGBColor[0.90222, 0.101808, 0.198306], PointSize[Medium], 
      AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{-2.2250738585072014`*^-308, 2}], 
         PointBox[{1.0514622242382672`, 2}], 
         LineBox[{{-2.2250738585072014`*^-308, 2}, {1.0514622242382672`, 2}}]},
        "2"],
       Annotation[#, 2, "Tooltip"]& ]}, 
     {RGBColor[0.90222, 0.101808, 0.198306], PointSize[Medium], 
      AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{-2.2250738585072014`*^-308, 3}], 
         PointBox[{1.0514622242382672`, 3}], 
         LineBox[{{-2.2250738585072014`*^-308, 3}, {1.0514622242382672`, 3}}]},
        "3"],
       Annotation[#, 3, "Tooltip"]& ]}, 
     {RGBColor[0.90222, 0.101808, 0.198306], PointSize[Medium], 
      AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{-2.2250738585072014`*^-308, 4}], 
         PointBox[{1.0514622242382672`, 4}], 
         LineBox[{{-2.2250738585072014`*^-308, 4}, {1.0514622242382672`, 4}}]},
        "4"],
       Annotation[#, 4, "Tooltip"]& ]}, 
     {RGBColor[0.90222, 0.101808, 0.198306], PointSize[Medium], 
      AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{-2.2250738585072014`*^-308, 5}], 
         PointBox[{1.0514622242382672`, 5}], 
         LineBox[{{-2.2250738585072014`*^-308, 5}, {1.0514622242382672`, 5}}]},
        "5"],
       Annotation[#, 5, "Tooltip"]& ]}, 
     {RGBColor[0.90222, 0.101808, 0.198306], PointSize[Medium], 
      AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{-2.2250738585072014`*^-308, 6}], 
         PointBox[{1.0514622242382672`, 6}], 
         LineBox[{{-2.2250738585072014`*^-308, 6}, {1.0514622242382672`, 6}}]},
        "6"],
       Annotation[#, 6, "Tooltip"]& ]}, 
     {RGBColor[0.90222, 0.101808, 0.198306], PointSize[Medium], 
      AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{-2.2250738585072014`*^-308, 7}], 
         PointBox[{1.0514622242382672`, 7}], 
         LineBox[{{-2.2250738585072014`*^-308, 7}, {1.0514622242382672`, 7}}]},
        "7"],
       Annotation[#, 7, "Tooltip"]& ]}, 
     {RGBColor[0.90222, 0.101808, 0.198306], PointSize[Medium], 
      AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{-2.2250738585072014`*^-308, 8}], 
         PointBox[{1.0514622242382672`, 8}], 
         LineBox[{{-2.2250738585072014`*^-308, 8}, {1.0514622242382672`, 8}}]},
        "8"],
       Annotation[#, 8, "Tooltip"]& ]}, 
     {RGBColor[0.90222, 0.101808, 0.198306], PointSize[Medium], 
      AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{-2.2250738585072014`*^-308, 9}], 
         PointBox[{1.0514622242382672`, 9}], 
         LineBox[{{-2.2250738585072014`*^-308, 9}, {1.0514622242382672`, 9}}]},
        "9"],
       Annotation[#, 9, "Tooltip"]& ]}, 
     {RGBColor[0.14287214708202123`, 0.7165497398815136, 1.], PointSize[
      Medium], AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{1.0514622242382667`, 10}], 
         PointBox[{1.70130161670408, 10}], 
         LineBox[{{1.0514622242382667`, 10}, {1.70130161670408, 10}}]},
        "10"],
       Annotation[#, 10, "Tooltip"]& ]}}, InsetBox[
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"H\"", 
         RGBColor[0.4, 0.4, 1.], StripOnInput -> False], 
        StyleBox["0", 
         RGBColor[0.4, 0.4, 1.], StripOnInput -> False]], 
       SubscriptBox[
        StyleBox["\"H\"", 
         RGBColor[0.4, 0.4, 1.], StripOnInput -> False], 
        StyleBox["1", 
         RGBColor[0.4, 0.4, 1.], StripOnInput -> False]], 
       SubscriptBox[
        StyleBox["\"H\"", 
         RGBColor[0.4, 0.4, 1.], StripOnInput -> False], 
        StyleBox["2", 
         RGBColor[0.4, 0.4, 1.], StripOnInput -> False]]},
      "LineLegend",
      DisplayFunction->(FormBox[
        PanelBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.90222, 0.101808, 0.198306], 
                    Thickness[0.27]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.90222, 0.101808, 0.198306], 
                    Thickness[0.27]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.14287214708202123`, 0.7165497398815136, 1.], 
                    Thickness[0.27]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.14287214708202123`, 0.7165497398815136, 1.], 
                    Thickness[0.27]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9729188047180777, 0.9391259962046635, 
                    0.201748879675973], 
                    Thickness[0.27]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9729188047180777, 0.9391259962046635, 
                    0.201748879675973], 
                    Thickness[0.27]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
           False], {FontFamily -> "Arial"}, StripOnInput -> False], 
         Background -> Automatic, ContentPadding -> True, 
         FrameMargins -> {{5, 5}, {5, 5}}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.90222, 0.101808, 0.198306], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.60148, 0.067872, 0.13220400000000002`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.90222`", ",", "0.101808`", ",", "0.198306`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.90222, 0.101808, 0.198306]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.90222, 0.101808, 0.198306], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "0.015`", "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.14287214708202123`, 0.7165497398815136, 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.09524809805468082, 0.47769982658767574`, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.14287214708202123`", ",", "0.7165497398815136`", ",", 
                    "1.`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14287214708202123`, 0.7165497398815136, 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.14287214708202123`, 0.7165497398815136, 1.], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "0.015`", "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9729188047180777, 0.9391259962046635, 
                    0.201748879675973], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6486125364787185, 0.6260839974697757, 
                    0.13449925311731534`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9729188047180777`", ",", "0.9391259962046635`", ",", 
                    "0.201748879675973`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9729188047180777, 0.9391259962046635, 
                    0.201748879675973]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9729188047180777, 0.9391259962046635, 
                    0.201748879675973], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.015`", "]"}]}], "}"}], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 0, 1], Editable -> False, Selectable -> False]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "Panel"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.9, 0.15}], ImageScaled[{0.9, 0.15}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, False},
   AxesLabel->{None},
   AxesOrigin->{Automatic, Automatic},
   DisplayFunction->Identity,
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   ImagePadding->All,
   ImageSize->{Automatic, 169.87420196121218`},
   PlotRange->{{-2.2250738585072014`*^-308, 1.70130161670408}, {0, 10}},
   PlotRangePadding->{{
      Scaled[0.1], 
      Scaled[0.1]}, {0, 1}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{
       RGBColor[0.24720000000000014`, 0.24, 0.6], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.90222, 0.101808, 0.198306]], {
        Tooltip[{{{
            Point[{-2.2250738585072014`*^-308, 1}]}, {
            Point[{1.0514622242382672`, 1}]}, 
           
           Line[{{-2.2250738585072014`*^-308, 1}, {
             1.0514622242382672`, 1}}]}}, 1]}}, {
       RGBColor[0.6, 0.24, 0.4428931686004542], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.90222, 0.101808, 0.198306]], {
        Tooltip[{{{
            Point[{-2.2250738585072014`*^-308, 2}]}, {
            Point[{1.0514622242382672`, 2}]}, 
           
           Line[{{-2.2250738585072014`*^-308, 2}, {
             1.0514622242382672`, 2}}]}}, 2]}}, {
       RGBColor[0.6, 0.5470136627990908, 0.24], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.90222, 0.101808, 0.198306]], {
        Tooltip[{{{
            Point[{-2.2250738585072014`*^-308, 3}]}, {
            Point[{1.0514622242382672`, 3}]}, 
           
           Line[{{-2.2250738585072014`*^-308, 3}, {
             1.0514622242382672`, 3}}]}}, 3]}}, {
       RGBColor[0.24, 0.6, 0.33692049419863584`], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.90222, 0.101808, 0.198306]], {
        Tooltip[{{{
            Point[{-2.2250738585072014`*^-308, 4}]}, {
            Point[{1.0514622242382672`, 4}]}, 
           
           Line[{{-2.2250738585072014`*^-308, 4}, {
             1.0514622242382672`, 4}}]}}, 4]}}, {
       RGBColor[0.24, 0.3531726744018182, 0.6], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.90222, 0.101808, 0.198306]], {
        Tooltip[{{{
            Point[{-2.2250738585072014`*^-308, 5}]}, {
            Point[{1.0514622242382672`, 5}]}, 
           
           Line[{{-2.2250738585072014`*^-308, 5}, {
             1.0514622242382672`, 5}}]}}, 5]}}, {
       RGBColor[0.6, 0.24, 0.5632658430022722], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.90222, 0.101808, 0.198306]], {
        Tooltip[{{{
            Point[{-2.2250738585072014`*^-308, 6}]}, {
            Point[{1.0514622242382672`, 6}]}, 
           
           Line[{{-2.2250738585072014`*^-308, 6}, {
             1.0514622242382672`, 6}}]}}, 6]}}, {
       RGBColor[0.6, 0.42664098839727194`, 0.24], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.90222, 0.101808, 0.198306]], {
        Tooltip[{{{
            Point[{-2.2250738585072014`*^-308, 7}]}, {
            Point[{1.0514622242382672`, 7}]}, 
           
           Line[{{-2.2250738585072014`*^-308, 7}, {
             1.0514622242382672`, 7}}]}}, 7]}}, {
       RGBColor[0.2634521802031821, 0.6, 0.24], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.90222, 0.101808, 0.198306]], {
        Tooltip[{{{
            Point[{-2.2250738585072014`*^-308, 8}]}, {
            Point[{1.0514622242382672`, 8}]}, 
           
           Line[{{-2.2250738585072014`*^-308, 8}, {
             1.0514622242382672`, 8}}]}}, 8]}}, {
       RGBColor[0.24, 0.47354534880363613`, 0.6], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.90222, 0.101808, 0.198306]], {
        Tooltip[{{{
            Point[{-2.2250738585072014`*^-308, 9}]}, {
            Point[{1.0514622242382672`, 9}]}, 
           
           Line[{{-2.2250738585072014`*^-308, 9}, {
             1.0514622242382672`, 9}}]}}, 9]}}, {
       RGBColor[0.5163614825959097, 0.24, 0.6], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.14287214708202123`, 0.7165497398815136, 1.]], {
        Tooltip[{{{
            Point[{1.0514622242382667`, 10}]}, {
            Point[{1.70130161670408, 10}]}, 
           Line[{{1.0514622242382667`, 10}, {1.70130161670408, 10}}]}}, 
         10]}}}, AxesLabel -> {None}, Ticks -> {Automatic, Automatic}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     PlotRange -> {{-2.2250738585072014`*^-308, 1.70130161670408}, {0, 10}}, 
     PlotRangePadding -> {{
        Scaled[0.1], 
        Scaled[0.1]}, {0, 1}}, AspectRatio -> GoldenRatio^(-1), 
     AxesOrigin -> {Automatic, Automatic}, Axes -> {True, False}, 
     ImagePadding -> All, {}], 
    Placed[
     Unevaluated[
      LineLegend[{{
         RGBColor[0.90222, 0.101808, 0.198306], 
         Thickness[0.015]}, {
         RGBColor[0.14287214708202123`, 0.7165497398815136, 1.], 
         Thickness[0.015]}, {
         RGBColor[0.9729188047180777, 0.9391259962046635, 0.201748879675973], 
         
         Thickness[0.015]}, 
        RGBColor[0, 0, 1]}, {
        Subscript[
         Style["H", 
          RGBColor[0.4, 0.4, 1.]], 
         Style[0, 
          RGBColor[0.4, 0.4, 1.]]], 
        Subscript[
         Style["H", 
          RGBColor[0.4, 0.4, 1.]], 
         Style[1, 
          RGBColor[0.4, 0.4, 1.]]], 
        Subscript[
         Style["H", 
          RGBColor[0.4, 0.4, 1.]], 
         Style[2, 
          RGBColor[0.4, 0.4, 1.]]]}, 
       Joined -> {True, True, True, True, True, True, True, True, True, True},
        LabelStyle -> {}, LegendFunction -> Panel, LegendLayout -> 
       "Column"]], {
      Scaled[{0.9, 0.15}], 
      Scaled[{0.9, 0.15}]}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.823021586076649*^9},
 CellID->950355228]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   InterpretationBox[
    TagBox[
     DynamicModuleBox[{Typeset`open = False}, 
      FrameBox[
       PaneSelectorBox[{False->GridBox[{
          {
           PaneBox[GridBox[{
              {
               StyleBox[
                StyleBox[
                 AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                  BoxBaselineShift->-0.25,
                  BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                 
                 FontColor->RGBColor[
                  0.8745098039215686, 0.2784313725490196, 
                   0.03137254901960784]],
                ShowStringCharacters->False,
                FontFamily->"Source Sans Pro Black",
                FontSize->0.6538461538461539 Inherited,
                FontWeight->"Heavy",
                PrivateFontOptions->{"OperatorSubstitution"->False}], 
               StyleBox[
                RowBox[{
                 StyleBox["PersistentHomology", "ResourceFunctionLabel"], 
                 " "}],
                ShowAutoStyles->False,
                ShowStringCharacters->False,
                FontSize->Rational[12, 13] Inherited,
                FontColor->GrayLevel[0.1]]}
             },
             GridBoxSpacings->{"Columns" -> {{0.25}}}],
            Alignment->Left,
            BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
            BaselinePosition->Baseline,
            FrameMargins->{{3, 0}, {0, 0}}], 
           ItemBox[
            PaneBox[
             TogglerBox[Dynamic[Typeset`open], {True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "IconizeCloser"],
               ImageSizeCache->{11., {1., 10.}}], False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "IconizeOpener"],
               ImageSizeCache->{11., {1., 10.}}]},
              Appearance->None,
              BaselinePosition->Baseline,
              ContentPadding->False,
              FrameMargins->0],
             Alignment->Left,
             BaselinePosition->Baseline,
             FrameMargins->{{1, 1}, {0, 0}}],
            Frame->{{
               RGBColor[
               0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                0.5], False}, {False, False}}]}
         },
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
        GridBox[{
          {GridBox[{
             {
              PaneBox[GridBox[{
                 {
                  StyleBox[
                   StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                   ShowStringCharacters->False,
                   FontFamily->"Source Sans Pro Black",
                   FontSize->0.6538461538461539 Inherited,
                   FontWeight->"Heavy",
                   PrivateFontOptions->{"OperatorSubstitution"->False}], 
                  StyleBox[
                   RowBox[{
                    StyleBox["PersistentHomology", "ResourceFunctionLabel"], 
                    " "}],
                   ShowAutoStyles->False,
                   ShowStringCharacters->False,
                   FontSize->Rational[12, 13] Inherited,
                   FontColor->GrayLevel[0.1]]}
                },
                GridBoxSpacings->{"Columns" -> {{0.25}}}],
               Alignment->Left,
               BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
               BaselinePosition->Baseline,
               FrameMargins->{{3, 0}, {0, 0}}], 
              ItemBox[
               PaneBox[
                TogglerBox[Dynamic[Typeset`open], {True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "IconizeCloser"]], False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "IconizeOpener"]]},
                 Appearance->None,
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0],
                Alignment->Left,
                BaselinePosition->Baseline,
                FrameMargins->{{1, 1}, {0, 0}}],
               Frame->{{
                  RGBColor[
                  0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                   0.5], False}, {False, False}}]}
            },
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
          {
           StyleBox[
            PaneBox[GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Version (latest): \"\>",
                  "IconizedLabel"], " ", 
                 TagBox["\<\"1.0.1\"\>",
                  "IconizedItem"]}]},
               {
                TagBox[
                 
                 TemplateBox[{
                  "\"Documentation \[RightGuillemet]\"", 
                   "https://resources.wolframcloud.com/FunctionRepository/\
resources/PersistentHomology"},
                  "HyperlinkURL"],
                 "IconizedItem"]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             Alignment->Left,
             BaselinePosition->Baseline,
             FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
            FontFamily->"Roboto",
            FontSize->11]}
         },
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
              GrayLevel[0.8]}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open],
        BaselinePosition->Baseline,
        ImageSize->Automatic],
       Background->RGBColor[
        0.9686274509803922, 0.9764705882352941, 0.984313725490196],
       BaselinePosition->Baseline,
       DefaultBaseStyle->{},
       FrameMargins->{{0, 0}, {1, 0}},
       FrameStyle->RGBColor[
        0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
       RoundingRadius->4]],
     {"FunctionResourceBox", 
      RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
      "PersistentHomology"},
     TagBoxNote->"FunctionResourceBox"],
    ResourceFunction["PersistentHomology"],
    BoxID -> "PersistentHomology",
    Selectable->False], "[", 
   RowBox[{
    RowBox[{"RotationTransform", "[", 
     RowBox[{
      FractionBox["\[Pi]", "4"], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "]"}], "[", "data", "]"}], 
   "]"}], "[", "\"\<Barcode\>\"", "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{3.8230215671208963`*^9},
 CellID->998028113],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{
     {RGBColor[0.90222, 0.101808, 0.198306], PointSize[Medium], 
      AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{-2.2250738585072014`*^-308, 1}], 
         PointBox[{1.0514622242382672`, 1}], 
         LineBox[{{-2.2250738585072014`*^-308, 1}, {1.0514622242382672`, 1}}]},
        "1"],
       Annotation[#, 1, "Tooltip"]& ]}, 
     {RGBColor[0.90222, 0.101808, 0.198306], PointSize[Medium], 
      AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{-2.2250738585072014`*^-308, 2}], 
         PointBox[{1.0514622242382672`, 2}], 
         LineBox[{{-2.2250738585072014`*^-308, 2}, {1.0514622242382672`, 2}}]},
        "2"],
       Annotation[#, 2, "Tooltip"]& ]}, 
     {RGBColor[0.90222, 0.101808, 0.198306], PointSize[Medium], 
      AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{-2.2250738585072014`*^-308, 3}], 
         PointBox[{1.0514622242382672`, 3}], 
         LineBox[{{-2.2250738585072014`*^-308, 3}, {1.0514622242382672`, 3}}]},
        "3"],
       Annotation[#, 3, "Tooltip"]& ]}, 
     {RGBColor[0.90222, 0.101808, 0.198306], PointSize[Medium], 
      AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{-2.2250738585072014`*^-308, 4}], 
         PointBox[{1.0514622242382672`, 4}], 
         LineBox[{{-2.2250738585072014`*^-308, 4}, {1.0514622242382672`, 4}}]},
        "4"],
       Annotation[#, 4, "Tooltip"]& ]}, 
     {RGBColor[0.90222, 0.101808, 0.198306], PointSize[Medium], 
      AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{-2.2250738585072014`*^-308, 5}], 
         PointBox[{1.0514622242382672`, 5}], 
         LineBox[{{-2.2250738585072014`*^-308, 5}, {1.0514622242382672`, 5}}]},
        "5"],
       Annotation[#, 5, "Tooltip"]& ]}, 
     {RGBColor[0.90222, 0.101808, 0.198306], PointSize[Medium], 
      AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{-2.2250738585072014`*^-308, 6}], 
         PointBox[{1.0514622242382672`, 6}], 
         LineBox[{{-2.2250738585072014`*^-308, 6}, {1.0514622242382672`, 6}}]},
        "6"],
       Annotation[#, 6, "Tooltip"]& ]}, 
     {RGBColor[0.90222, 0.101808, 0.198306], PointSize[Medium], 
      AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{-2.2250738585072014`*^-308, 7}], 
         PointBox[{1.0514622242382672`, 7}], 
         LineBox[{{-2.2250738585072014`*^-308, 7}, {1.0514622242382672`, 7}}]},
        "7"],
       Annotation[#, 7, "Tooltip"]& ]}, 
     {RGBColor[0.90222, 0.101808, 0.198306], PointSize[Medium], 
      AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{-2.2250738585072014`*^-308, 8}], 
         PointBox[{1.0514622242382672`, 8}], 
         LineBox[{{-2.2250738585072014`*^-308, 8}, {1.0514622242382672`, 8}}]},
        "8"],
       Annotation[#, 8, "Tooltip"]& ]}, 
     {RGBColor[0.90222, 0.101808, 0.198306], PointSize[Medium], 
      AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{-2.2250738585072014`*^-308, 9}], 
         PointBox[{1.0514622242382672`, 9}], 
         LineBox[{{-2.2250738585072014`*^-308, 9}, {1.0514622242382672`, 9}}]},
        "9"],
       Annotation[#, 9, "Tooltip"]& ]}, 
     {RGBColor[0.14287214708202123`, 0.7165497398815136, 1.], PointSize[
      Medium], AbsoluteThickness[1.6], 
      TagBox[
       TooltipBox[{PointBox[{1.0514622242382667`, 10}], 
         PointBox[{1.70130161670408, 10}], 
         LineBox[{{1.0514622242382667`, 10}, {1.70130161670408, 10}}]},
        "10"],
       Annotation[#, 10, "Tooltip"]& ]}}, InsetBox[
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"H\"", 
         RGBColor[0.4, 0.4, 1.], StripOnInput -> False], 
        StyleBox["0", 
         RGBColor[0.4, 0.4, 1.], StripOnInput -> False]], 
       SubscriptBox[
        StyleBox["\"H\"", 
         RGBColor[0.4, 0.4, 1.], StripOnInput -> False], 
        StyleBox["1", 
         RGBColor[0.4, 0.4, 1.], StripOnInput -> False]], 
       SubscriptBox[
        StyleBox["\"H\"", 
         RGBColor[0.4, 0.4, 1.], StripOnInput -> False], 
        StyleBox["2", 
         RGBColor[0.4, 0.4, 1.], StripOnInput -> False]]},
      "LineLegend",
      DisplayFunction->(FormBox[
        PanelBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.90222, 0.101808, 0.198306], 
                    Thickness[0.27]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.90222, 0.101808, 0.198306], 
                    Thickness[0.27]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.14287214708202123`, 0.7165497398815136, 1.], 
                    Thickness[0.27]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.14287214708202123`, 0.7165497398815136, 1.], 
                    Thickness[0.27]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9729188047180777, 0.9391259962046635, 
                    0.201748879675973], 
                    Thickness[0.27]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9729188047180777, 0.9391259962046635, 
                    0.201748879675973], 
                    Thickness[0.27]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
           False], {FontFamily -> "Arial"}, StripOnInput -> False], 
         Background -> Automatic, ContentPadding -> True, 
         FrameMargins -> {{5, 5}, {5, 5}}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.90222, 0.101808, 0.198306], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.60148, 0.067872, 0.13220400000000002`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.90222`", ",", "0.101808`", ",", "0.198306`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.90222, 0.101808, 0.198306]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.90222, 0.101808, 0.198306], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "0.015`", "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.14287214708202123`, 0.7165497398815136, 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.09524809805468082, 0.47769982658767574`, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.14287214708202123`", ",", "0.7165497398815136`", ",", 
                    "1.`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14287214708202123`, 0.7165497398815136, 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.14287214708202123`, 0.7165497398815136, 1.], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "0.015`", "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9729188047180777, 0.9391259962046635, 
                    0.201748879675973], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6486125364787185, 0.6260839974697757, 
                    0.13449925311731534`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9729188047180777`", ",", "0.9391259962046635`", ",", 
                    "0.201748879675973`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9729188047180777, 0.9391259962046635, 
                    0.201748879675973]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9729188047180777, 0.9391259962046635, 
                    0.201748879675973], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.015`", "]"}]}], "}"}], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 0, 1], Editable -> False, Selectable -> False]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "Panel"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.9, 0.15}], ImageScaled[{0.9, 0.15}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, False},
   AxesLabel->{None},
   AxesOrigin->{Automatic, Automatic},
   DisplayFunction->Identity,
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   ImagePadding->All,
   ImageSize->{Automatic, 171.37420196121218`},
   PlotRange->{{-2.2250738585072014`*^-308, 1.70130161670408}, {0, 10}},
   PlotRangePadding->{{
      Scaled[0.1], 
      Scaled[0.1]}, {0, 1}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{
       RGBColor[0.24720000000000014`, 0.24, 0.6], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.90222, 0.101808, 0.198306]], {
        Tooltip[{{{
            Point[{-2.2250738585072014`*^-308, 1}]}, {
            Point[{1.0514622242382672`, 1}]}, 
           
           Line[{{-2.2250738585072014`*^-308, 1}, {
             1.0514622242382672`, 1}}]}}, 1]}}, {
       RGBColor[0.6, 0.24, 0.4428931686004542], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.90222, 0.101808, 0.198306]], {
        Tooltip[{{{
            Point[{-2.2250738585072014`*^-308, 2}]}, {
            Point[{1.0514622242382672`, 2}]}, 
           
           Line[{{-2.2250738585072014`*^-308, 2}, {
             1.0514622242382672`, 2}}]}}, 2]}}, {
       RGBColor[0.6, 0.5470136627990908, 0.24], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.90222, 0.101808, 0.198306]], {
        Tooltip[{{{
            Point[{-2.2250738585072014`*^-308, 3}]}, {
            Point[{1.0514622242382672`, 3}]}, 
           
           Line[{{-2.2250738585072014`*^-308, 3}, {
             1.0514622242382672`, 3}}]}}, 3]}}, {
       RGBColor[0.24, 0.6, 0.33692049419863584`], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.90222, 0.101808, 0.198306]], {
        Tooltip[{{{
            Point[{-2.2250738585072014`*^-308, 4}]}, {
            Point[{1.0514622242382672`, 4}]}, 
           
           Line[{{-2.2250738585072014`*^-308, 4}, {
             1.0514622242382672`, 4}}]}}, 4]}}, {
       RGBColor[0.24, 0.3531726744018182, 0.6], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.90222, 0.101808, 0.198306]], {
        Tooltip[{{{
            Point[{-2.2250738585072014`*^-308, 5}]}, {
            Point[{1.0514622242382672`, 5}]}, 
           
           Line[{{-2.2250738585072014`*^-308, 5}, {
             1.0514622242382672`, 5}}]}}, 5]}}, {
       RGBColor[0.6, 0.24, 0.5632658430022722], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.90222, 0.101808, 0.198306]], {
        Tooltip[{{{
            Point[{-2.2250738585072014`*^-308, 6}]}, {
            Point[{1.0514622242382672`, 6}]}, 
           
           Line[{{-2.2250738585072014`*^-308, 6}, {
             1.0514622242382672`, 6}}]}}, 6]}}, {
       RGBColor[0.6, 0.42664098839727194`, 0.24], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.90222, 0.101808, 0.198306]], {
        Tooltip[{{{
            Point[{-2.2250738585072014`*^-308, 7}]}, {
            Point[{1.0514622242382672`, 7}]}, 
           
           Line[{{-2.2250738585072014`*^-308, 7}, {
             1.0514622242382672`, 7}}]}}, 7]}}, {
       RGBColor[0.2634521802031821, 0.6, 0.24], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.90222, 0.101808, 0.198306]], {
        Tooltip[{{{
            Point[{-2.2250738585072014`*^-308, 8}]}, {
            Point[{1.0514622242382672`, 8}]}, 
           
           Line[{{-2.2250738585072014`*^-308, 8}, {
             1.0514622242382672`, 8}}]}}, 8]}}, {
       RGBColor[0.24, 0.47354534880363613`, 0.6], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.90222, 0.101808, 0.198306]], {
        Tooltip[{{{
            Point[{-2.2250738585072014`*^-308, 9}]}, {
            Point[{1.0514622242382672`, 9}]}, 
           
           Line[{{-2.2250738585072014`*^-308, 9}, {
             1.0514622242382672`, 9}}]}}, 9]}}, {
       RGBColor[0.5163614825959097, 0.24, 0.6], 
       PointSize[Medium], 
       Directive[
        AbsoluteThickness[1.6], 
        RGBColor[0.14287214708202123`, 0.7165497398815136, 1.]], {
        Tooltip[{{{
            Point[{1.0514622242382667`, 10}]}, {
            Point[{1.70130161670408, 10}]}, 
           Line[{{1.0514622242382667`, 10}, {1.70130161670408, 10}}]}}, 
         10]}}}, AxesLabel -> {None}, Ticks -> {Automatic, Automatic}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     PlotRange -> {{-2.2250738585072014`*^-308, 1.70130161670408}, {0, 10}}, 
     PlotRangePadding -> {{
        Scaled[0.1], 
        Scaled[0.1]}, {0, 1}}, AspectRatio -> GoldenRatio^(-1), 
     AxesOrigin -> {Automatic, Automatic}, Axes -> {True, False}, 
     ImagePadding -> All, {}], 
    Placed[
     Unevaluated[
      LineLegend[{{
         RGBColor[0.90222, 0.101808, 0.198306], 
         Thickness[0.015]}, {
         RGBColor[0.14287214708202123`, 0.7165497398815136, 1.], 
         Thickness[0.015]}, {
         RGBColor[0.9729188047180777, 0.9391259962046635, 0.201748879675973], 
         
         Thickness[0.015]}, 
        RGBColor[0, 0, 1]}, {
        Subscript[
         Style["H", 
          RGBColor[0.4, 0.4, 1.]], 
         Style[0, 
          RGBColor[0.4, 0.4, 1.]]], 
        Subscript[
         Style["H", 
          RGBColor[0.4, 0.4, 1.]], 
         Style[1, 
          RGBColor[0.4, 0.4, 1.]]], 
        Subscript[
         Style["H", 
          RGBColor[0.4, 0.4, 1.]], 
         Style[2, 
          RGBColor[0.4, 0.4, 1.]]]}, 
       Joined -> {True, True, True, True, True, True, True, True, True, True},
        LabelStyle -> {}, LegendFunction -> Panel, LegendLayout -> 
       "Column"]], {
      Scaled[{0.9, 0.15}], 
      Scaled[{0.9, 0.15}]}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8230215945026245`*^9},
 CellID->444771532]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Possible Issues",
 "\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"],
 "\[NonBreakingSpace]"
}], "Subsection",
 TaggingRules->{},
 CellID->158766396],

Cell[TextData[{
 Cell[BoxData[
  StyleBox["PersistentHomology", "InlineResourceFunction"]], "InlineFormula",
  FontFamily->"Source Sans Pro"],
 " computation times grow quickly in the number of data points:"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8044925075778637`*^9, 3.804492523120275*^9}, {
   3.8044925901585293`*^9, 3.804492595861801*^9}, {3.804492759251581*^9, 
   3.804492761618194*^9}, {3.804492850841065*^9, 3.804492885822322*^9}, {
   3.8044929575559893`*^9, 3.80449299906669*^9}, {3.80449303149861*^9, 
   3.804493041962367*^9}, 3.804493101200829*^9, {3.804493223228202*^9, 
   3.8044932428541527`*^9}, {3.804493587280697*^9, 3.804493618547268*^9}, {
   3.804494171154895*^9, 3.804494171417992*^9}, 3.8230216166179724`*^9},
 CellID->839895801],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"20", ",", "3"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   InterpretationBox[
    TagBox[
     DynamicModuleBox[{Typeset`open = False}, 
      FrameBox[
       PaneSelectorBox[{False->GridBox[{
          {
           PaneBox[GridBox[{
              {
               StyleBox[
                StyleBox[
                 AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                  BoxBaselineShift->-0.25,
                  BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                 
                 FontColor->RGBColor[
                  0.8745098039215686, 0.2784313725490196, 
                   0.03137254901960784]],
                ShowStringCharacters->False,
                FontFamily->"Source Sans Pro Black",
                FontSize->0.6538461538461539 Inherited,
                FontWeight->"Heavy",
                PrivateFontOptions->{"OperatorSubstitution"->False}], 
               StyleBox[
                RowBox[{
                 StyleBox["PersistentHomology", "ResourceFunctionLabel"], 
                 " "}],
                ShowAutoStyles->False,
                ShowStringCharacters->False,
                FontSize->Rational[12, 13] Inherited,
                FontColor->GrayLevel[0.1]]}
             },
             GridBoxSpacings->{"Columns" -> {{0.25}}}],
            Alignment->Left,
            BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
            BaselinePosition->Baseline,
            FrameMargins->{{3, 0}, {0, 0}}], 
           ItemBox[
            PaneBox[
             TogglerBox[Dynamic[Typeset`open], {True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "IconizeCloser"],
               ImageSizeCache->{11., {1., 10.}}], False->
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "IconizeOpener"],
               ImageSizeCache->{11., {1., 10.}}]},
              Appearance->None,
              BaselinePosition->Baseline,
              ContentPadding->False,
              FrameMargins->0],
             Alignment->Left,
             BaselinePosition->Baseline,
             FrameMargins->{{1, 1}, {0, 0}}],
            Frame->{{
               RGBColor[
               0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                0.5], False}, {False, False}}]}
         },
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
        GridBox[{
          {GridBox[{
             {
              PaneBox[GridBox[{
                 {
                  StyleBox[
                   StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                   ShowStringCharacters->False,
                   FontFamily->"Source Sans Pro Black",
                   FontSize->0.6538461538461539 Inherited,
                   FontWeight->"Heavy",
                   PrivateFontOptions->{"OperatorSubstitution"->False}], 
                  StyleBox[
                   RowBox[{
                    StyleBox["PersistentHomology", "ResourceFunctionLabel"], 
                    " "}],
                   ShowAutoStyles->False,
                   ShowStringCharacters->False,
                   FontSize->Rational[12, 13] Inherited,
                   FontColor->GrayLevel[0.1]]}
                },
                GridBoxSpacings->{"Columns" -> {{0.25}}}],
               Alignment->Left,
               BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
               BaselinePosition->Baseline,
               FrameMargins->{{3, 0}, {0, 0}}], 
              ItemBox[
               PaneBox[
                TogglerBox[Dynamic[Typeset`open], {True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "IconizeCloser"]], False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "IconizeOpener"]]},
                 Appearance->None,
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0],
                Alignment->Left,
                BaselinePosition->Baseline,
                FrameMargins->{{1, 1}, {0, 0}}],
               Frame->{{
                  RGBColor[
                  0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                   0.5], False}, {False, False}}]}
            },
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
          {
           StyleBox[
            PaneBox[GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Version (latest): \"\>",
                  "IconizedLabel"], " ", 
                 TagBox["\<\"1.0.1\"\>",
                  "IconizedItem"]}]},
               {
                TagBox[
                 
                 TemplateBox[{
                  "\"Documentation \[RightGuillemet]\"", 
                   "https://resources.wolframcloud.com/FunctionRepository/\
resources/PersistentHomology"},
                  "HyperlinkURL"],
                 "IconizedItem"]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             Alignment->Left,
             BaselinePosition->Baseline,
             FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
            FontFamily->"Roboto",
            FontSize->11]}
         },
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
              GrayLevel[0.8]}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open],
        BaselinePosition->Baseline,
        ImageSize->Automatic],
       Background->RGBColor[
        0.9686274509803922, 0.9764705882352941, 0.984313725490196],
       BaselinePosition->Baseline,
       DefaultBaseStyle->{},
       FrameMargins->{{0, 0}, {1, 0}},
       FrameStyle->RGBColor[
        0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
       RoundingRadius->4]],
     {"FunctionResourceBox", 
      RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
      "PersistentHomology"},
     TagBoxNote->"FunctionResourceBox"],
    ResourceFunction["PersistentHomology"],
    BoxID -> "PersistentHomology",
    Selectable->False], "[", 
   RowBox[{"data", "\[LeftDoubleBracket]", 
    RowBox[{"1", ";;", "5"}], "\[RightDoubleBracket]"}], "]"}], 
  "]"}]}], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.804493624058234*^9, 3.804493695524858*^9}, {
   3.804493743655149*^9, 3.8044937500755*^9}, {3.804494892745428*^9, 
   3.804494893520912*^9}, 3.823021620781357*^9},
 CellID->740852838],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6.9557228`", ",", 
   InterpretationBox[
    RowBox[{
     TagBox["PersistentHomologyObject",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               GraphicsComplexBox[CompressedData["
1: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
DD7UNnFU6mGhG2+T145RH+SY9ZrzutlY7vy4V2ngKex2UAy4ntEDQ02/GiX9
uKDJkxbtMe2FnIE50gkPudC2yslK4U8vuN6sNTtygQs/bOInhsL7oH7xMpH5
+7lwbMI9rWBHP9j/elIzto4Ll5b2/DvS2g+9zSapiqJcyHELv6J/bQB6/5yh
fejhwNU9a713TQzAq5uXer3SOCCd1ZT4e5IEwwV3F73RYsFbYtPio/vJMLLR
fO8MwblvmZvRMhMfMhyJ/r1/YTsT+vpG+7sayVDt3Z3WHckE0a8R/0rmUaA7
Oumf62UmxF97+LHnEAVWe4QHrlVlQqhcYuJcdwoo+ob4MzkMMFzx1E+lmAJP
OM5No4Lzu/PamhCp6m4ItV2u09LCgSGFhxdOa/XAj6p/Tv2CcyO6d17KS+yB
343jjjHHOSBRFJTLV+yFXRmsOQdlOHA6amCsMKYXjOuKzbkDbBg02+Jet7EP
ajPeVeQlsqEjeJP/18w+UFDZ9aXyPhuIPzddcNbrh/Xha36rG7Khdd7JEBkF
EnhTNTbtaWZACvvN+uBrJNAx116zIZYBpxTHLBbkCtrPDc7GPmLA4CbFZ+Zi
ZEg4K6XXZMaAV38W9+07LpgfvcezC3cwYNUq5eQ4Qf0YSm1IfyjHAG5Oj7nh
TzJYO778IT+DAVfutr2eEtQb29zf6xTx6FCrrrpJn9gHZZcC51i3cUBWN/n9
tiUDsENcpnOpHwcub7w5sn7XINSfJDzw0ufA/Tei9ReshuDYjxADBpcNexLt
Y1fvIkCLiXjhlSA20C6/qPKuIoCLYp+97hY2KPgFPl9tSARH20Huu3oWyJR1
/A6oJoJVGdO/zpIFJZe/kOXfMcDN/l5Y3xoKUHYVqm+QZoLCTHkbqTQyPHE+
mejkzQSKpTbtvRYZhtXvz20ZZcKPubvnlgvmRaPGMpgneE7RxhzWF01BHi35
rhNayoIfzPK0yUQinPb9Xum7jA3K3j3HC+SIQH/aRv9wnQ2h/PYHh3wIsEp/
nVdGUA/0nv31bsZrNuipMFratXvhwOfvn4P/sUBSnkn4zBXk/wWJK8Z3WPAq
b7H60vQ+yFu7TNWLwYR59EEDk8f98ETfb56vDRN4xuvERc0F+c0L2JxOZcD6
BvM/sXsGweRgaubOmwxwcNLzz9AYAn6/6eM7Y4J6keK/lWZHg8W+RI/npYLx
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
                "], {{
                  Directive[
                   Opacity[0.7], 
                   Hue[0.6, 0.7, 0.5]], 
                  Arrowheads[0.], {
                   ArrowBox[{1, 2}, 0.02254220222992223], 
                   ArrowBox[{1, 5}, 0.02254220222992223], 
                   ArrowBox[{1, 7}, 0.02254220222992223], 
                   ArrowBox[{1, 9}, 0.02254220222992223], 
                   ArrowBox[{1, 11}, 0.02254220222992223], 
                   ArrowBox[{1, 13}, 0.02254220222992223], 
                   ArrowBox[{1, 15}, 0.02254220222992223], 
                   ArrowBox[{1, 17}, 0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-2.1409496216940123`*^-16, -1.0434049156924905`}, 5}],
                     0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {1.0704748108470062`*^-15, -0.9225412836753133}, 5}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.19317181243605622`, -1.0333779239158283`}, 7}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.1495108326247347, -0.7998123114976872}, 7}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.3696769958201283, -0.9542463251548349}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.24459071364353785`, -0.6313614109083246}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.5056775470872312, -0.8166972803055038}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.272398578269021, -0.43993880945047653`}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.582805838183662, -0.6393075500603161}, 13}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.229178820294798, -0.251397190160288}, 13}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.590645266014236, -0.4460346004393019}, 15}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.12076850752425144`, -0.09120014346806327}, 15}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {-0.04103500681170743, -0.01167546606958506}, 4}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.5674671696890601, 0.16145833033997112`}, 4}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.15069014333422975`, 0.013963498134084052`}, 6}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.7369836857302795, 0.06829159554065786}, 6}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.33873038367193714`, -0.031387992444006356`}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.8613974228519735, -0.07982022606495483}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.49768983777687453`, -0.14160496769998895`}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.9239056164555438, -0.26287381225308243`}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.6061001505474233, -0.3018020143922123}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.9160661886249679, -0.45614676187410347`}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    BezierCurveBox[{
                    3, {0.6493199085216432, -0.4903436336824059}, 14}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.8389378975285393, -0.633536492119288}, 14}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.6215120438961692, -0.6817662351402451}, 16}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.7029373462614268, -0.7710855369686257}, 16}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.19172515014593514`, 1.0256389642036672`}, 6}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.16951651604121815`, 0.9068332652006886}, 6}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.37976539048364444`, 0.9802874736255784}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.2939302531629152, 0.7587214435950802}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.5387248445885809, 0.8700704983695936}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.35643844676648223`, 0.5756678574069446}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.6471351573591255, 0.7098734516773724}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.34859901893590606`, 0.3823949077859304}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.6903549153333459, 0.5213318323871787}, 14}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.27147072783947207`, 0.20500517754074105`}, 14}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.3769213302526145, -0.9729461079072422}, 7}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.33326035044130586`, -0.8602441275062771}, 7}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.5534265136367049, -0.8938145091462413}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.4283402314601095, -0.6917932269169124}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.6894270649037971, -0.7562654642969203}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.4561480960855884, -0.500370625459065}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.7665553560002341, -0.5788757340517223}, 13}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.41292833811137236`, -0.31182900616887055`}, 13}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5492819065248636, 0.887120738826274}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.4856554033088557, 0.7843604077987405}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.7082413606297987, 0.7769037635702826}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5481635969124143, 0.6013068216106137}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.8166516734003458, 0.616706716878059}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5403241690818401, 0.4080338719895959}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.7029373462614349, -0.7710855369686219}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.6215120438961611, -0.6817662351402489}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.8389378975285295, -0.6335364921192947}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.6493199085216452, -0.4903436336824001}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    8, {0.83265509775149, 0.6287919419646689}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    8, {0.7362038372501287, 0.5559553310325218}, 10}], 
                    0.02254220222992223]}}, {
                  Directive[
                   Hue[0.6, 0.2, 0.8], 
                   EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                  DiskBox[1, 0.02254220222992223], 
                  DiskBox[2, 0.02254220222992223], 
                  DiskBox[3, 0.02254220222992223], 
                  DiskBox[4, 0.02254220222992223], 
                  DiskBox[5, 0.02254220222992223], 
                  DiskBox[6, 0.02254220222992223], 
                  DiskBox[7, 0.02254220222992223], 
                  DiskBox[8, 0.02254220222992223], 
                  DiskBox[9, 0.02254220222992223], 
                  DiskBox[10, 0.02254220222992223], 
                  DiskBox[11, 0.02254220222992223], 
                  DiskBox[12, 0.02254220222992223], 
                  DiskBox[13, 0.02254220222992223], 
                  DiskBox[14, 0.02254220222992223], 
                  DiskBox[15, 0.02254220222992223], 
                  DiskBox[16, 0.02254220222992223], 
                  DiskBox[17, 0.02254220222992223]}}], {
               Background -> GrayLevel[0, 0], FormatType -> TraditionalForm, 
                FrameTicks -> None, ImageSize -> 32}], 
              GridBox[{{
                 TagBox[
                  TemplateBox[{
                    StyleBox["\"Points: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox["\"\\!\\(\\*RowBox[{\\\"5\\\"}]\\)\"", 
                    StringForm["``", 5], Editable -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 TagBox[
                  TemplateBox[{
                    StyleBox["\"Dimensions: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox["\"\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\"", 
                    StringForm["``", 3], Editable -> False]}, "RowDefault"], 
                  "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               GraphicsComplexBox[CompressedData["
1:eJw12Xc8lt/7AHBUKtohpSItK1EaqC7SUCoaQkkq2jQoJUllpZAZKtlZ2Xtd
SDbJ3p69h4qSyO/5fT0f/3id133u+z7Xea5z7nO93msu3jphKyYiIhIwQ0Tk
//+zXPzOhazuwqC5O0RaOrnQXN2ZusKjBkbSnoi4O/LRfeCSgXc3AcpiFwSM
a7Hx8bnu1MwLdSUi//sbhqDp/vhD2L95+nngJ3zeo+n7sUB4/zu79yosPyp4
GJ6b/SueDj9mRdw8+4KJed877GsNyShhE+myKZ4Dlc+VVMc9++G91q7AAzU8
/D5Pvjrz+TdUNDrNnj/Ahz95FltokfmwdrqNQfnT7ejp/iA+f7r/gunnYafw
eX+n3weVwvclTo8HXwjH8+l99OcDvpVQbprzvZHMR4cnF+VmHaqAy2vuJIv8
42P3vpgHy0XKwcJmvsNaiWEsEg/a5nu5FLSb9XQOLR3G7A2Va2Kri8Ct44je
zRXDOB5Z/0JMsQBsjO8aecsPo+JukXm7nHMh5Iy2aYTiMPrOGlpLasmCMLbu
q6i1guvTbfyvnb/rf/3xv/7+08/D/55nOP0+/O99xtPjwf/GEzs9XjQXjnf3
dDz4Xzz3p+PF/+L9L36lOUYLdWfx8Z4w/me7/E7PZvOwVxj/jhDKiop2HpYI
479f8fjVvUoe5grjZ2TZum3O4eGEMH4FXHH9dxIP1wnjx8RXp9tieegvjL/A
04tRHc1DBWH8/7VzhfH/199XGP9/zzsgjP+/9x0Vxv/feKKF8f83Xl1h/P/F
81/8/8Wbzk6ZsTCkCErK3q7M6+ajW4Od/QqbXJg69Xt0IY+Pe6xf/X2glgHW
WTPpl//yMdCpZPgZKR6e5rHdLUSG8WbnpoNbO0MhX95V9/uk4H4tbs7CVefB
onVg1dqffDR8bXWqsi8Qj7wqkjEm8HGlRmTpis+xmBXLNXL7wsfyG39dYhLa
UeRmuYfLEh4qk9toJ3kdmPc1srOSz8Vjw4XPjm4RrFetoNYtX7jI2dfv+vVO
N5rnfU+lBnLxFdcrbWVqDz5aM0/9jzkXYb7KuDOhF08V+0f7L+PiwfOuTVsX
9OPrP9srvzZzEPYmPQ/WGkB/9b4YiisHPyVvPbpfthRWrcvmhavwsHG1t2Ol
awGssjD7mtbLxfTO7RuHarLB/M0/Pi+Ai5Xplt8bOJ9gi+azSx4mXCy8PuVw
cUUcmL57RwmT4WLyy5718buCQW713zIjCgdFRLbrVMXRy8ae8YuKCzmoV7pg
u6RrMKbRmiTF3nAwICCxW/5+G06kRe3/R2bha3sZyZrydrxY3ea8uY6F9fsW
60XN70RTtwyHs3ks/Kv11YZ2tgt/b1l02jeFhd40B7+25G5MpeZ5NSSyMP4W
3Ir+04PHol4kL0tj4b363w0vDvZhxmToW/tiFj49cfB7dVA/jgT9cKxtYSFH
mmzwhJoBDJsP9LJTfJR9+MpB8XUM/CXqi/UcEPyelEB2w9pHsPRJqaTeJj6G
xR1oFbV6gxcfjKrOmMPH4PcKUeejk/Hlxw23dnbxUClz8DUlJwefJ/cUTETw
cNYz3vmyqWK8vaY2y+EkD0mqaSP3Qivw+DrMrxHhobi9kULKLwLq3E3LcFFk
ImO+i8nSbiJGlTlnD1Yx8NcHOZ+CHBLW3+eu8bRkoCvdWFn2FRkTIiSqMph0
/N5zPCnrHAVvJjm+iblJx9QJLl9SmYpTS1U/xlNpWDT8LzSFK2ibZg/NNaXh
hpS8ratSaGidXD20rpiK6/IDAw1kC8Dol5//RjHB70tuT81Ty4LUwzH+e69y
MNUzgnF3YSKkvlKpTehiIyM3Y7IkOxT2/CZ0JZmwUaTqplTYxA2cJW6U8raN
hQ9eyDA9b0QiUfnq0WprFsbZui9YJvIJJUm9xXZjTCRp1sw5+jIXb6t/LPsa
wcTAwDvePPdBPOMSmu9eQkFR98ujK5UIgnXrW9J9jYIrXQ03P1hMxI2/HuUZ
K1Lw6uGLNf8mibjmj7qIFI2Mq+Rbs9ZxSWikZG1wKFfwPXHWtbAcJGP4mrBL
816TsV3uPUPmGwUzy5baOdwno0g+IamqioqfdfO8fK8K2jdCz7nmxsAWhyJe
4TUeith0L5W2AYwP0lH4vpqHJmVOyuyfMWhVmzmQJFh/Us6x3jfSs9Cy9ciM
5VZcnHO/cs2JomIk6rWQHjE4uGGvyMWPhytxvcxheVlbDs7W7g8LeF+N5NzO
57rtbFTI3XHSvK0er3oFdOhuF8wf+cKmRCsq3ki2ufR7DQmT1e44atrQ0Cr7
g/oWJyI+26DuvOMCHct2ufnPKyeg/eTyW+tMGegesZdD/TOEvPEc2hVgonNn
WWOm5SD+ANFNTvIs7DxBv3wnqR8VbWLCmkZYKPd33q0NxF78a3Gth1PGRi2P
+gVDM3vwQYFM0JWaPGj+oWzJzWZjwdyhV3b3M2Agf05q3RcWmreknHd8Ewv/
XsppxBGZ6CYSyZ6y8AS1+s2TM+YwcTj99aS9XCAqM+y417QZmFjt0eR5JBE/
jS04ZXKfjrJZycEOC3Jw3jN+jgrS8ObUuqZSnRKc8lFxs5WiYVzIzlZlTRKK
W/6V2yvSi8mOX93e7iHjoqnbuLeqG23uei44fZKCPnt8vF/EdKGqVnNMrj0V
lzAfi1a+7cTkpT/uLXlNQ8Vq93KvjA6cO/uWVkUeHVf3FkleJrYjcbaNzVIS
A/0Mkjy71NvxPXOo0WyxIE/dk5j7w9uQ4OHXZEALgjyptmabHVzU00mb5akV
ivlb5oobR3LQ5PHfgaSUdDxVsL1ea1SQ/26W/nd7C/GzW7aO8y42pors+OVR
X4Gqppb5rxxZ6GnwVJP/pBpbC1s+kN4zkVbwe3+KRAOW5lvO/1vAwDMXwqvm
Xv2KSxULvM5V0/F+adXS7z9oOM9Ca/ds8Xa8VGbANPpHx8Khk2+eiLeihPFg
ouQkAzsLG67l9H3FA8MvH4fzmBiz9HN8knMD6hTtu3i5lYWO22Ri7nOq8aF+
+n32RzZqGDF7m7ZW4vbNE8eS7TlYIHKSMJpQhMMG5Xs2bRDE6Zj+t+JdBg6f
nBzZfLIQ7r8oG19gx0KFtP77sm+ygbZMxbVWlYm33VhXDSqTQXO98+fsn3Qk
yLrvo7RFQDQrLeDFFxqKnDmh7HH2DMpkf26ZiKai3tFDjLtdH9D7RYV80QsK
imQ22eV2peMabx/7K4/JyBgavJh5oAAfGkW8jX1MwpX6481VgrzPMftet4FZ
iTopMfYrtckoK1Z2+cLuMgwwLHdoOEvB299Xta2TyUfDnsDK9S+omChTIdNu
nYHmc7fxHpTTkOCwcOzr3jiMIurFzBNlIGE0f+qofQDGbvy5cO1hJorkFbU3
fLSDmPm+Vn8iWFge2haU1RUKCu+15j2zDYANO2eUrqazUa8r2aVLOhwtNu2U
pY6x0LCEQvH0yECZcJnFb8eZmPiLTim3LsKo4p/buzgMXEc7NJrAqMBDTQN7
tVvouNJ3W0jD1WqUNJcovBZPQ2/OO6V1afWol73QY7kdFV0G+abKec0okrsu
QFSJgiYiM6fYLoJ5o/xzf0D7hE+196VN2dPQ7fv4n7lJARhjt9Eu1EQw71qh
Zq2kcPjW6p2ssoaBwzPuDG5Pz4RVTi50PQIDd/7k10RtKQX5fjuRq75MnHdR
7+0i1yrY+nnlbW0lFs7xu1Zj9awemt1MXllksFBC99890+Mt4O2wpyvkEoKX
Dys+04KJ5Z5Ro8GKxeDe8uVd5DfB+j2m/GDukTzw9Che/NKEhnM2RGa0kDLg
2g3mjLNdFNSYLRa4uz0envkWVnMvkzHqapfTz5AASF6d+HiVCAlFdqyuq9X2
wAchcm/LYgnYomC04dOtOHSb3P5lT/wgutzr+V2gNogEqNfsyM8HHSf9mnOy
BByWDbh6eLgclhnLcbKVibgy9dHOl9++QMdOGanSQySUeVp3vs6lHl5kN+Q0
O5Hxps4aDX1+M3SuaBzZlk1BRfPTR5SCvkHc2efSO/8K8sUt/EyJfxsYmtUT
lxjTcW/o5rjNNzvAOqi6K7iiB96dmPAID6IKxncr2+1bFzi6wyfRNRT0vpRD
jp7VCSS/+xmsGBK+mns3Y875dvA4sbh++woijoSvMEkfbAVelsH4u4VDgrwN
PPnQ4xucSb20TK+nD0U+35bfeqoFjK5cbNsd1I0KklNUxTfN8PdhjGAX7UC3
JePXP8m+h39zttMXrO4FN7GzK4/s94MPy0OOPn88ACIKtPrMg/YgYb8+64wD
AUQypzIS8hzwapqRdIsqCdxUZHrWjHmgs3W6+Co6Gdy4PxVOlr7CQebEfN04
KohsV5+ibPDDI2bPPihepIPIhbfnRbV8UKpYu6BBngkzjEiG5vpEaLQyPFR9
ioKmodZda48TQfzva41Vb0io9Ynu/9iICKG+kh+29RBQeXtt/VUNItjMcdm8
eecgDvZ/eT06RQCDuJwjIRW9aPk7LECviADua696Jpt0ocOdH0sczhNg4YWs
Ww/obdi6XDbDY2gI7E1Ozp3p3YKXt9UufWLbCj5bPHYEdAzC2O/TVwYsvwHX
P8Y8TooIgwXbtr5RbQHHLbHO8fkkmLn3jF1lXBOUbVvKaTtBgZaLKakL4+qh
MU1MexeVCu1pGw4MnK4BJfYV+WE7OhhqZSbI42coImisnM1hgEnkzBJeKQIl
jTsSacWC7tOJwa/P9sNZm2iTGGsqVpFsEx5J9UHLMkstdTIZg+9+OnvvRw+o
9DuqHrMiYXeq+U3lX91QVN3uyGglYG1QgfYmhW44XzBq1vx8EHe9Wnt/6nYX
PHFGl1vmfUgJ+94zm9kJR9dVlQav78bhrUtpod6dsJ+4iq/IbUe9YxO6U0cF
8fcv96DmdgNnt4nEMelWCOkX0xP/0Qda79pVXWe2gifDJYS9eQjCZGqCw+Va
QZrPXdqxnQgjyuWhgWdawfzuVvOUdhJwuhoZBhWtoGO4MuD5bQoMz31Wetu4
DeLfbqFdm0uDOa8naFUz2+Fwx7ndNyPpwGpLdb1tS4J7t7Y1h05Q8JfM9aAV
5ST4tk3CKfgKGcfSqyY1ZpPBhvRzTVozEX+INyS80CHDs3mSzI4tBIx+XbNR
/Iwg75a8PDSlPIDtTXr9QbZk6F+plq/H6cFfE2Jc1XNkYC/KunA2rRMbR9RO
temRYWhRXYLO3TYcfbrmiddaIgyn2jc1afTCI+Mts4x/EmCML/UOrg1As+ny
HSfTCSC91nvT/GMEmNN6zLTEjACz9q59W0ImgsjLSSeXniHwU5sklzqSQe9L
orfGwCD8038fsVaECktMh3erFA9A/GP32BkeNJggfDKWduwHjfo6dBJjwIGj
u2ptuYMgEUV8fjmJioqnuIfQaBBSDHzkzfUoGLo01FKkaQB0HpLbvrWR8Ffw
LUnHOwPwpGzEMcWGiAeWpvuYaA/Ah8FLdS70IWxWtF+Wv24AmPyX6+pnDGDl
uwly9tYByDdw+T4i34ueox8X7bk8AIZyX3Syd3dhU8TMsNQQAhzTDYh3uPMN
NlaqX00qJ4D18v1VN03a4Yu/veu+ScG6l/2ncF2lC0qVAscsBOvxbf9qj+LJ
HgiK3/q2OJkI+6SPfMqp7Yetb2S5GnIkCPKaPJD2YgjWk6LNnd6RQFs+4N5z
eSJQ1u48uVedDLoF0RKBDiSAjXUrNLTJcGvpyeBQMRr+u3pe+m89Geyc9055
pVFwOJvhpn+EAv9Wa3zqO0nG1/FNrXklFOi0NSNY/SSijeKte7IrqfC0Tu8I
yZeAlsWB/E3XqXC12VrLwXAQ/3q3zqpLoELd149d9+z78FTGRMeXb1TI+/6z
wMW/G8+ZfLI9mUMHgs3FjcnyLVA2IeYS1kSHY77LB9mibVCkfZgk00EHN23l
xRXUDnCtSFKqr6fDDiXRPIe6boh1O3S1II0OodWenUdT+uCkfh78cKOD5C6b
4IgXgzA/WqIuUJ8O9xndISczCfB4HfkFDtOgc5/G+IUVJLjqrrhltT8BVCUO
GC4RnLs9W/R+zncngLLcYyuWKhVD/Pb/EfMmAD+gISv0JxnLyLac8QgCjA/c
02wpJmFR9vMAVongerCqg7EHESN4bS2lXAKcjCs2bjQh4MaVVRVmm4jw7OY9
0vjuQYxdLlsS+IgISU4FXzcT+9DBeKK1fSsNcsLPdP7YnAu3Vq3wePaaBtQD
RvK7npWBus/9hTf/0uDi6hmfF3R9htZHS9afcKQDqfSrg5RZLVS+H9XgjtNh
3t5KCY+yRnDVe+3G9WPAzuNHnlz0aAHqSfbdv5uZ4KaVfCvuXSs8f+mTmj/A
hJj7v280xLbDojynpf8+kEF11X3NSwZ0/MSVOVp0lALLXYyzvwINpUTvQi2P
Avd9FIrVtaj4LXaef+0zKlj+UClbLfg+ln3hR1wS7CvHj9uH7Z1Nxov5LzMO
PaPBHWVdNX06ERXXMXS2cmmQV39pqqqCgKt/zOISDtFB/vrL1N/qQ8jdyJqx
VowDJqD76ij5A1xbv+ffORMO7I0VS5u6kQm/T6jzf/tzoHqpRMz98SLo8nVV
byjnwMnGqsGDxpXQeu5dWxGJA0+HuV2HlWtgPKukOmuUA+bl+wZs5jSC5J2K
xo9/OBB5d1Z1j2MLKJUO+b7hcSDO5E24MrUVziZe56kIvneyc1e8v+VEx3Cj
5c8f3yOCz0UiSHnS8MSiku/n44kQoeljg6FULPAyJeQSiKBxThf/JVHQ8vHO
TZYbSeBetO2xVTkZjUbaZyg/JIHmwo7vV3tJaOnqMsruIAEvMWlfwhgRQw0W
ytjvJoPfnD6Fd3JEbO+Yu2E3MIGgkvR72aYqvHv8kZp+JhMS7h+eN9BUjp+e
y715vokFi+YvLFslWYyHV/q3FWWzYOf7HN7u1BwM+ml1/Y0BGwpMX/qWz/qE
R2fPUq/qZ0PUFrWrpuujkSZ/1o7mygGFnqKrEn88kaB/VDlSmQtRO2IVBmPc
oZ52c9bYSzKU/NlvkBTEwKo55yvSt1PA+alCtDaVjufX5Iq0dlMgJ0nPsVZd
cB7cdrbq3x0qPMtnVVTcpqH1PNWzfaI02N7DmReaQsXJuMg3S7xpoPtSdGnR
EAW1u/aImc6kg9bXDK+E+RRBXZoxx+I+HdYr9jR2bSOjFDVZVukBF3QCoj+K
hzbiseTd2slDXChaeEV2cE0dWmtRVex28eDT/cJLbRFf8FjKU1EdPx7Y1m3f
PilWid+jbI4R2nlg9VjPcqygBE/L/tu1fREf5vXWaf48kYuLBqJSZPX4sDJe
IS0sIwWPuRnr3bDhw+0HarlftoVj/aOP47ExRLh71+Pf0TIGKolYEAJ7iIJz
WLmdtAIDTf8ak+bJkuBKmOq3dHc6umo0iHHPkaB4V4nKQw4N0yxek+amkCCE
PxTeYEbDI+I3erZNkeCUq+KGqWoqBv7RWgyC72NHzIKX13So6DXbPJZfTIYl
hjdmWWVR0FrFUDnmGBMC9ndl6cT0Im1F4p7yPCY0F9LY3W978NknouaC9Sy4
4nHgc82HbtziVJ99OJwFqfXOTu/SupAzKfdDYykbjPdqtVFrO7FIbWv5g0A2
iBOrulX5Hags0ljRKcOBPP+wO/w1HUhYFfVm4gMHpOOIa5IvtOPhkandrYLx
bjffdOnfF0GdtKR96Zg3GS6Tjhf32QrqP+pN6dPzKVBaWOy1e4qBelLu5Pev
BPvDXHcf60AGjkV0rHEXpwK7ynqnhzwDP9qUxZY7U+EV3TmQnyA4Z//+HbqA
SQWLJpV/NCU61tHNUtWO0+CBV9aKPEF9FC1huGWIzAbLKtsBlvcghsneqPLf
z4HuBfKtbQ8GsF9y20RYFAf6zH6/TTzfj84FC39WjXDA4p5LzsI9fZhMbG8l
6nNBou9zYI5UL7bLmPys8OJC9lrq/oOUbhRdcnBUt5oLz4xL5rl86sJzoWO9
KpNceH9Lky1xpxN//c139n5ABO49lqb3PBbS9p0pqRPkw7EQi+N+lUwcXljx
51WLYC8I17mW5czEVsVXK/JFSdB4zW6W/DYmjugViKluJ8Gd+aVmk98ZqG7V
F1tnRwLv9Efy9zIZmMz0Wng3kQTtYuMBqQ4M7D7a6CNKE+wXbLpB7U4GzrYy
fMs/TwP5OzNnPJ1PRVCBbP0oGkRY1rbGdlBwT2HsCQ0yDUKW97bxoih419eq
O0iJDpxrm3Sf3hLkz9wJdYPbdLhIyz/yQF+wH3+YoiwtosP89asO82UoqCA1
60DvLAZU2by8OMUn4wF2lOO1kwwIMmqNxUYy7hqz1HVeQAL+oSWWMzJZePHr
2LW5liQo07B4/9mXhZ8N/tV//UgCx9s1uW2XWajYK/o06jsJFNLVsg/vYuGi
0x+6jAXnhxDV/Cr9BSw0UDlzLtuVDJxHEmrt/UzcW1g2EV1BBsbOlZvkE5no
7JErNSJKgYvrCBP6t5mYFKK5nvSIDpNJE8Xj+2jY9ede1J1COqQFsuxkJAT7
r4fivBUjdPhDvUo42kjFVzH7PxWoMmCR98bELy+pmFZ+J0TNmgE5qk7jsYZU
fN22K+90AAPsJpJCF82gYkRk7M/lyICtIi/TtIop6EPfv+0skwHB8uNNOnco
aCu3gD7wNQ7WOH2KeLR8GNYuzHvTtSwZTuTdKWGuHoYZD2rx7eV0sOxx23tM
cRjGXkXwn1lmAW1/pMrHtcOwhO6U8HtWLsS5BiX+FFw3VzrgI5uWD07zkjZo
KQyDqdkM1omTRVD++sr+63LDcKDwWKP0SAmob4juDZMahvmfjtg6urRALfP7
MbYRHxpt7ZLWrv0GLsTtD/V1+ED5uqeWV/MNdMTDZd+u48Mx6ZebHa+3Qppe
zL+ZknzQ6/OOPynRBoTF7sf9uDw45tT+VP1jG1hayT83bORB0KNH1I967XBm
X8aBgx95IH7jz3ebznbYuWKdR5QrD/i+iZbP9WPAnL/k0WZzPnjODSu/wU+A
7V88C7038yFVtWVge3EKbE1Z9thLgg+LPGUI4sczION3Vpo+kwe97+cXuLdk
AbE2WLShgQdu2XtMI87kwukZkXStLB6Qzrq3VHPzQUpJxMvvnaD/ntnE595F
UCu/P5PiwwPqu9F2+c9fQat05HDkJy7wEubHlr9ogUWMK/f+fuBC2o8JnYVb
v0HMMCXrSigXRJ4POywb+AYH5y1KZ7zmgmfPx2hHr1aoejye/NSfC1V2IdQK
zTZBXbft0dZALgwVvbke0dcG7HcnvSbCuGBemBoV7t4OR+X667tjuXCd3llh
kJ4DwVkrxLay+LCiacxinFEI9Xq5vkkEPiwu9yQ/XIWQKB3UL/uVD5Uyf3M7
11XC7OCVpi9z+eD9Q+ne3twqUGLdkl0UzAdT/QKvR3tqQGfwxp+i63y4n73s
hSjWQePin7fjtPnQPmSia7GtEc6k2/szRfhwNdjCotliCFTCN53PSmLDitOl
O4IPEoA0ZVbseI0N0UmxjRODBPj93sKqd43gutLI/pq7RMHJzODT/DYWaP97
o/hOjARKyb+Mdz9mAfXyO+0NfoI6sOep9DsFFoxFRHKWSJOBV7Og07qUCZcC
8syXvCGD0uSVE9UnmbDvs93qx48F+W00mrP5BA/+Bf/iFzZnQ7jbMc0QBhdC
t83xlhcvgDD7vu8WHlwYcVbVu32xBM5FXs4vUOLCb+n4wJe3yyHKe/kZRqtg
n15Id8rFSvBLnpEk586B8XNuDWarvkCc4awjT3dxwN+38rekdw2cS9+caDDB
hn03AvM3zhiATeE8p3nxDHAQTX99cs8glGy/Hnr8JgM8i6wCQl2H4Mj17/N1
dRnwS+Okb/gFAlhZcXnUxQygf1z9OGeW4Hydo5d1fVhQB4So8XRSiDC0pV5l
oJMOIyethuqPC/az2YkPj3yhQ8rri1mif0gwErJ31udiOgR2/NGMvFsKDoZ5
u70E+X5WZP3l7XaVcPRa5bFlozxQd/i0qlaqGn5OJE+eTOdB7aNsk95PdfDK
8W3YZSseUCJ64o22N4HPvl9zn4jxYHGf9DGx0y3Qr/mruO0tF/bfW2bjIt4K
to/vP4hW4ULqJ41ZwSltoCI6uk81XTBfrnFXFhpRofCYBv1XKBUuZCaesltG
gwX9qwc8FlNBIi7l3LoBGry2ePvv6jMKbH7keBff0mGxfuLsUSYZrv6yKGg6
wQAJDdFd7oZk0Fgk1UQSZQLuSdK8H0mC/HkM8TeJTBitPBG2mUMEsT9zsrwO
sABEKieXbyGCmnnKKfXRLIjRb112aTEXXIqyPmVT8oHrqv/4qBkHSiJPuJiu
KAXFGWyyeDwb3PIWL35yqAI6Fwf1jI2zwCb2o1LB+ipoEeHM97YQ5NtU/aN1
CjVwgjEmI1XBhLD6zg8iO+qh3fbezt+aTMgKpp98cLUJlH5eUvdMZcCW+eLO
l76SoEDvQ8vxYCLYJgUe5keTwbVq1fs+WSI8uR9kquZMAfFFkRZJHwlgPLkx
KMKMCuaT7yX/6RFAxuMOI0+bBmkR3/+o1Q/Brtlb7/2VF9STL1o3n1Aagu9r
pclDcxmglhnr2/BuEE4rn8/r+cUAwo/idPbGQQh1XiXxrKICPA6RGMoreZDM
8Ywf2VIN7DVWdtwILig4e03p+tTDwXMcI9V5gv1I8q5CdVUzmI52SOy8zYEc
69MSc29/g5HVnKlbNWy4TVuW032zDSaq+5fvWMKGNG3vhjizDijwmR0/ZsIC
P1H5wsObu+C21i/Jje5M0J2VVeR0WvA9ujC60rahDy5R506o7mTCkpT9an5y
veD93oSqu5AFKdaaas9Pd0OC3HcFpT4WkB8VW5g87oSdRz5/d3rLBrN2PmF+
QDtMdno7FxpzYCReZMdQYCsUdJuJPvvNgSjnXLsfz1vAOr1B3V6wL2ocXCs6
Vd8IYwOnKJOnsmCxrZj4qgo2aAT9ND6vlg9+D2/7kzMFdUf0Dc/Y6yVAJder
2CUzIeqvEc1MvAKyj7R1mKYwgFEarPxmdhVwH9iFa+XSwTpPRtZwRw288Nyi
8baWBiOhmqVeQfVgekEpQ5pGheBlAZXmK5pB2rNlh8oCwbmwvtrv6n4KDM5M
drwx1AqH1AM9dDWpcMTca2/t/m/AMDscEL2BBt5YmBnq+RWqV6henrueDonn
XZZnZzbCtlrtS/2C84CSeAc3cEE9hN10ZLvqMMH68iPml8ga+O0/UmEimPf2
kzmXSi99ARdO89VPN9lwNTf2XoPVZzhVu0j38uzPoEa472XUwQFCmceKw58F
9z19AhwRDiht6Krgn2qER78OD+msZoOt2TrTb5Yt0CBt+qFUUJdZLhe/Z+PU
ChSmPllMgwn3JPad//GgHXrN/KlR6xmwTOOPmJF1J3x7HWO1bSEd7rzIaDuq
1g3cEduNtlwqVFsMl/bbMoBzkdpw80k1dKdtX5CymwkqFnN8DzZVgGWNjFu1
OAtknYsuSNIKwfe+mmhBuaD+q7Lnr2hOB//Tbg8X32CDSOPXX6J+oXBtIm+e
/SwOiBxhG8k7B+HfglrTu4L62foH0z1eMx2tXq5+3ziHC8NXTx0S9yjC4aDe
4x/oKRAiLker8RP83gNvydFlmRApC/f0Bes1qkJZrWpBHvS0GS8b66HDg+HB
L4nEIlj2V3t+/gsaGI7t2aezohy2+f6x269PhTm5IYYiYp9hu0phhq3gnLdy
mcwi+w3VsPlSmnZHPQlsbmw+/tGjDkoVfjONIolA5V9KlM8kQYthorn8vHgI
eoeL1gi+TyKnRjYMPXCCS5sjLjb5UEChsW+pNv8d8jcWmgW/pEKG+DLbklXp
yJmTTB8IE+QHad3SHJd8lL5RHS2RRYc5jLYlkSKI9KoIScdOBgyv2eUjJfkZ
X4g9mGE3iwW1EcuTAyyr8YZ9DK+nphE5y66o2l3j42FrsYAlK5vRhzTrSJAN
H036sj7+tv+K0WHXROPO8nF2aMF+wvkWfPakIyTuGB8DFl5jtYp/w6S1NsXv
dvOxfZUyczjlGz4nPfAKVeJj2NlM1+5jrSjlWXMzciEfs1gyO5T5rejwaHTr
5x88rJx/6/DvnD7BObvWDoGLB3aAzokT/ehWl6K2RJ6LoylZ289w+hH3qe9K
GOdg7OqueTnPBvBoUZdaQCsHDfz98sWlB3Fyq0QRK4GD2sf2Bf+NGcTw6JHi
RicO/ni2M3SP2hCu9tove3I/B792GjxwzRjCz14JmW8XcpDlN1i3x7MBGfX0
IVI4D2O2j/qW+TWiX4PhQ1UbHspEDQTsi27CpZnhHZmaPBRbfchIvbQZ01a7
dwWJ8XDvVH5UG/Erng/Ls+F2ctH4rluCgVcLcudbm3ancfEf7WeM0ZpvqPaC
ZHPTh4vPFlUFJpR9Q+aC6rV4jYuBW1cmOLr3onZX2LniPDamVj61+rKuD8Ma
q9cRwtl4W0RiJLWmD5VvS0sw3NiYvaD+R/3NfpyxWaWTeIONe7yd35QuHUCV
toK/PWfY+D7DYq5iyQBKFq173XuUjQq8zOBg20FUvO29n72PjQvpRGrGwiEs
19l4ebEeGxNuGtBbvrbgyrLrv+5ReUhamhIiKd2K3rdMzC1LebhBZwFZ4nQb
mtoqbnjsyxPM90j5osB2JPn8zB8x5WGyCGHJxdoOdE2ZxyfL8PBkvvSqg2Od
mFbkqHi7hYtSS698l1zTjTpyHXM+P+NilE5Rj8jeHpSaqP4goc5FcZjl1fGY
gpOH8sLQmIG/8jWdl0hQ8XqB11z1EUG9PLmMUhZAxRFP75d/Auh45tTR2z5S
NAyLHDawVKZjo0rHp42BNOQW310bXERDpVV/dx2RoKP+uH8FaT8N/cUs/2a4
0PEVuWKbbwMV7UZnqC9h0jFoRiCvz4iKWXM2fwTxZpR6/9nt9h0uKrU336nK
/4pypUHa+J2DJK2k3JTyFryc8OXTNUE+vV0+2jaS8Q1LKCSjAjEOulXPNN6c
2oqLxGxVh4PYGO1w60p1ZhvmLG8in1Blo+GUrq58RTvuYTTZrq5jodL34DXh
PR2YfPpD5ys7Fh6O+JEcXUfC4Di/r/r+VFykvlJ+5Rky2nu4XX6hQ8Xhvn0v
XHlkHKcSjvRzKLgv//yCO54UVBs1dLuaQMGxW6b54WuoWCt9Md/sCgW9IwwT
3iEVT+luPfR1MwWTNo0fWWlNQ0XNWcuGp8h4UFQ9rlCMjn4k1oPOLjKW27zg
uGW14qVGj8nb41xcGX6BybBvxy1rDt13DOHi08dsp2VrOjEqTWaMtp6LrjP+
eEjWduEA5bC/RCoHH/oc+Vh/sQfb9+Vd3KjEwZVqg0kXhnvRZAPV+2UEG5f5
96yn3urHtHRyj88MNu6e+jfnLmEA1c6Hl7peYqFIjlxwK5WBm5/dNNIxJmJB
54ZIjVAmqnxKdX+aQMDT7irtu/ewsD18+48p1hAevr4sL3SAhXYxCzi7Hg5i
ndFOdr8DG13/FlGCx/rR3nqBc74IB63kM9+yr/Xh2L2pidbnHNwpoyK3qbkH
DeLy2ogTHHy344La0Q3dKDGHm/AprRnfhlsd3b6Wg+EEipvjoRY8pjJuesCY
jemSNZ4pxt+wOD5P+spTFo5pOcRZX2vF5HzNO0uKmDj2O2cBN6QNt1G87Mr+
MJD42a81sr0dnzEcWP16DJSTD91TuK4T9b1JVn3+gjy0ST1xz6MLdbMVwxTp
NEy4/GPnqQIquqayjUri+7BotUdyxG0aOkuaLY2z7cWdLc+uWmrQcdvqU7kx
O3pwTnQDc+NvOqoRM0VvrOxGb5t7zl5VDFwd7Z0YJ9WF7htdnoqGMfHN/O+d
bIVOLFheUSt7h4V3lV71tuh3IG3rppojgrgWtS5p7HJqx8+HLj1qrG9Dll3k
gFwtB+M8nfaZ13fgvvJllq1SHDw/+ujYwoIuDI18S7ljysYt+z8ebArswX1B
mdU3fFh4xO738ocWfbjaYu+OnTlMbEiNDJglOYCTdTfmnm5joLjxlYk7CYPo
lXnt0mEGHT+xuqxtpQnY+QdvRf2koZOfq7OcMwuD5+yb72vdinev/llipMHG
Y212BqttW3AgtVdsSS8bvcd3LHqW2YiK515USQrW4d21Z+PNHtaitGTt5T5x
QV4+WdC6a10V/rpQ8ln1BRddav94u19DlNS3yE6f5KKaXc3rRWfzcIfffG1F
wb5e/kiKMrIvGQ2L/tyru9qEeho/2Wb9gt+XV/8qSOwrmvvIKe3PZWLitg/x
x6+3IG+PdNL9IAZeJ3ud/2H/DVd1Z8wKc6KjCcyKC/BrRcX0AZPjF2nY/+Hi
Ro/aNrR8uCHvwCnB/qK0fvbSlR142u+xrOwxCib0r9h517sT8xwCs61NyLhq
Sc42fiIVI8e+KctpVeNBU/MwuRs07F2uetbhQiXaJJQ0fdtJR5Hb+z1fXC/F
9Qdezw1bzMCxX6+XPbiUh1vPFPzgjjAwykh9Z/6ldJQTO8Y/QmJiWKivhWl2
DD7UNnFU6mGhG2+T145RH+SY9ZrzutlY7vy4V2ngKex2UAy4ntEDQ02/GiX9
uKDJkxbtMe2FnIE50gkPudC2yslK4U8vuN6sNTtygQs/bOInhsL7oH7xMpH5
+7lwbMI9rWBHP9j/elIzto4Ll5b2/DvS2g+9zSapiqJcyHELv6J/bQB6/5yh
fejhwNU9a713TQzAq5uXer3SOCCd1ZT4e5IEwwV3F73RYsFbYtPio/vJMLLR
fO8MwblvmZvRMhMfMhyJ/r1/YTsT+vpG+7sayVDt3Z3WHckE0a8R/0rmUaA7
Oumf62UmxF97+LHnEAVWe4QHrlVlQqhcYuJcdwoo+ob4MzkMMFzx1E+lmAJP
OM5No4Lzu/PamhCp6m4ItV2u09LCgSGFhxdOa/XAj6p/Tv2CcyO6d17KS+yB
343jjjHHOSBRFJTLV+yFXRmsOQdlOHA6amCsMKYXjOuKzbkDbBg02+Jet7EP
ajPeVeQlsqEjeJP/18w+UFDZ9aXyPhuIPzddcNbrh/Xha36rG7Khdd7JEBkF
EnhTNTbtaWZACvvN+uBrJNAx116zIZYBpxTHLBbkCtrPDc7GPmLA4CbFZ+Zi
ZEg4K6XXZMaAV38W9+07LpgfvcezC3cwYNUq5eQ4Qf0YSm1IfyjHAG5Oj7nh
TzJYO778IT+DAVfutr2eEtQb29zf6xTx6FCrrrpJn9gHZZcC51i3cUBWN/n9
tiUDsENcpnOpHwcub7w5sn7XINSfJDzw0ufA/Tei9ReshuDYjxADBpcNexLt
Y1fvIkCLiXjhlSA20C6/qPKuIoCLYp+97hY2KPgFPl9tSARH20Huu3oWyJR1
/A6oJoJVGdO/zpIFJZe/kOXfMcDN/l5Y3xoKUHYVqm+QZoLCTHkbqTQyPHE+
mejkzQSKpTbtvRYZhtXvz20ZZcKPubvnlgvmRaPGMpgneE7RxhzWF01BHi35
rhNayoIfzPK0yUQinPb9Xum7jA3K3j3HC+SIQH/aRv9wnQ2h/PYHh3wIsEp/
nVdGUA/0nv31bsZrNuipMFratXvhwOfvn4P/sUBSnkn4zBXk/wWJK8Z3WPAq
b7H60vQ+yFu7TNWLwYR59EEDk8f98ETfb56vDRN4xuvERc0F+c0L2JxOZcD6
BvM/sXsGweRgaubOmwxwcNLzz9AYAn6/6eM7Y4J6keK/lWZHg8W+RI/npYLx
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
                "], {{
                  Directive[
                   Opacity[0.7], 
                   Hue[0.6, 0.7, 0.5]], 
                  Arrowheads[0.], {
                   ArrowBox[{1, 2}, 0.02254220222992223], 
                   ArrowBox[{1, 5}, 0.02254220222992223], 
                   ArrowBox[{1, 7}, 0.02254220222992223], 
                   ArrowBox[{1, 9}, 0.02254220222992223], 
                   ArrowBox[{1, 11}, 0.02254220222992223], 
                   ArrowBox[{1, 13}, 0.02254220222992223], 
                   ArrowBox[{1, 15}, 0.02254220222992223], 
                   ArrowBox[{1, 17}, 0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-2.1409496216940123`*^-16, -1.0434049156924905`}, 5}],
                     0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {1.0704748108470062`*^-15, -0.9225412836753133}, 5}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.19317181243605622`, -1.0333779239158283`}, 7}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.1495108326247347, -0.7998123114976872}, 7}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.3696769958201283, -0.9542463251548349}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.24459071364353785`, -0.6313614109083246}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.5056775470872312, -0.8166972803055038}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.272398578269021, -0.43993880945047653`}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.582805838183662, -0.6393075500603161}, 13}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.229178820294798, -0.251397190160288}, 13}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.590645266014236, -0.4460346004393019}, 15}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.12076850752425144`, -0.09120014346806327}, 15}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {-0.04103500681170743, -0.01167546606958506}, 4}], 
                    0.02254220222992223], 
                   ArrowBox[
                    BezierCurveBox[{
                    3, {0.5674671696890601, 0.16145833033997112`}, 4}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.15069014333422975`, 0.013963498134084052`}, 6}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.7369836857302795, 0.06829159554065786}, 6}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.33873038367193714`, -0.031387992444006356`}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.8613974228519735, -0.07982022606495483}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.49768983777687453`, -0.14160496769998895`}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.9239056164555438, -0.26287381225308243`}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.6061001505474233, -0.3018020143922123}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.9160661886249679, -0.45614676187410347`}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.6493199085216432, -0.4903436336824059}, 14}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.8389378975285393, -0.633536492119288}, 14}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.6215120438961692, -0.6817662351402451}, 16}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.7029373462614268, -0.7710855369686257}, 16}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.19172515014593514`, 1.0256389642036672`}, 6}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.16951651604121815`, 0.9068332652006886}, 6}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.37976539048364444`, 0.9802874736255784}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.2939302531629152, 0.7587214435950802}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.5387248445885809, 0.8700704983695936}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.35643844676648223`, 0.5756678574069446}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.6471351573591255, 0.7098734516773724}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.34859901893590606`, 0.3823949077859304}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.6903549153333459, 0.5213318323871787}, 14}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.27147072783947207`, 0.20500517754074105`}, 14}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.3769213302526145, -0.9729461079072422}, 7}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.33326035044130586`, -0.8602441275062771}, 7}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.5534265136367049, -0.8938145091462413}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.4283402314601095, -0.6917932269169124}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.6894270649037971, -0.7562654642969203}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.4561480960855884, -0.500370625459065}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.7665553560002341, -0.5788757340517223}, 13}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.41292833811137236`, -0.31182900616887055`}, 13}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5492819065248636, 0.887120738826274}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.4856554033088557, 0.7843604077987405}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.7082413606297987, 0.7769037635702826}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5481635969124143, 0.6013068216106137}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.8166516734003458, 0.616706716878059}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5403241690818401, 0.4080338719895959}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.7029373462614349, -0.7710855369686219}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.6215120438961611, -0.6817662351402489}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.8389378975285295, -0.6335364921192947}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.6493199085216452, -0.4903436336824001}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    8, {0.83265509775149, 0.6287919419646689}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    8, {0.7362038372501287, 0.5559553310325218}, 10}], 
                    0.02254220222992223]}}, {
                  Directive[
                   Hue[0.6, 0.2, 0.8], 
                   EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                  DiskBox[1, 0.02254220222992223], 
                  DiskBox[2, 0.02254220222992223], 
                  DiskBox[3, 0.02254220222992223], 
                  DiskBox[4, 0.02254220222992223], 
                  DiskBox[5, 0.02254220222992223], 
                  DiskBox[6, 0.02254220222992223], 
                  DiskBox[7, 0.02254220222992223], 
                  DiskBox[8, 0.02254220222992223], 
                  DiskBox[9, 0.02254220222992223], 
                  DiskBox[10, 0.02254220222992223], 
                  DiskBox[11, 0.02254220222992223], 
                  DiskBox[12, 0.02254220222992223], 
                  DiskBox[13, 0.02254220222992223], 
                  DiskBox[14, 0.02254220222992223], 
                  DiskBox[15, 0.02254220222992223], 
                  DiskBox[16, 0.02254220222992223], 
                  DiskBox[17, 0.02254220222992223]}}], {
               Background -> GrayLevel[0, 0], FormatType -> TraditionalForm, 
                FrameTicks -> None, ImageSize -> 32}], 
              GridBox[{{
                 TagBox[
                  TemplateBox[{
                    StyleBox["\"Points: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox["\"\\!\\(\\*RowBox[{\\\"5\\\"}]\\)\"", 
                    StringForm["``", 5], Editable -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 TagBox[
                  TemplateBox[{
                    StyleBox["\"Dimensions: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox["\"\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\"", 
                    StringForm["``", 3], Editable -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 TagBox[
                  TemplateBox[{
                    StyleBox["\"Simplex Count: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox[
                    "\"\\!\\(\\*RowBox[{\\\"23\\\"}]\\)\"", 
                    StringForm["``", 23], Editable -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 TagBox[
                  TemplateBox[{
                    StyleBox["\"Filtration Length: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox["\"\\!\\(\\*RowBox[{\\\"9\\\"}]\\)\"", 
                    StringForm["``", 9], Editable -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 TagBox[
                  TemplateBox[{
                    StyleBox["\"Generators: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox["\"\\!\\(\\*RowBox[{\\\"4\\\"}]\\)\"", 
                    StringForm["``", 4], Editable -> False]}, "RowDefault"], 
                  "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    $CellContext`PersistentHomologyObject[<|
     "Points" -> {{0.40745560734597275`, 0.32413817091234676`, 
       0.2527782579526934}, {0.966993963153975, 0.6133724491058745, 
       0.8158125066883886}, {0.33693767229969107`, 0.540709641286448, 
       0.37209594551007896`}, {0.028555966364127272`, 0.7647838438805958, 
       0.7362384166686389}, {0.7360040408476469, 0.35023640882146156`, 
       0.9966504103874969}}, "Dimension" -> 3, "MaximumDistance" -> 
      0.9538990093762756, 
      "Simplices" -> {{1}, {2}, {3}, {4}, {5}, {1, 3}, {2, 5}, {3, 4}, {1, 
        4}, {1, 3, 4}, {3, 5}, {2, 3}, {2, 3, 5}, {1, 5}, {1, 3, 5}, {1, 2}, {
        1, 2, 3}, {1, 2, 5}, {1, 2, 3, 5}, {4, 5}, {1, 4, 5}, {3, 4, 5}, {1, 
        3, 4, 5}}, 
      "SimplexWeights" -> {0., 0., 0., 0., 0., 0.2571238835799462, 
       0.39408028029569264`, 0.5271700523791107, 0.7559545436780307, 
       0.7559545436780307, 0.76524656052153, 0.7740382419164866, 
       0.7740382419164866, 0.8136159845691039, 0.8136159845691039, 
       0.8448356080041977, 0.8448356080041977, 0.8448356080041977, 
       0.8448356080041977, 0.8603178252699274, 0.8603178252699274, 
       0.8603178252699274, 0.8603178252699274}, 
      "IntervalIndices" -> {{3, 6}, {5, 7}, {4, 8}, {2, 11}}, 
      "Intervals" -> {{0., 0.2571238835799462}, {0., 0.39408028029569264`}, {
       0., 0.5271700523791107}, {0., 0.76524656052153}}, 
      "FiltrationRadii" -> {0., 0.2571238835799462, 0.39408028029569264`, 
       0.5271700523791107, 0.7559545436780307, 0.76524656052153, 
       0.7740382419164866, 0.8136159845691039, 0.8448356080041977, 
       0.8603178252699274}, "Edges" -> {
        DirectedEdge[8, 9], 
        DirectedEdge[6, 9], 
        DirectedEdge[7, 11], 
        DirectedEdge[6, 11], 
        DirectedEdge[6, 12], 
        DirectedEdge[11, 12], 
        DirectedEdge[7, 14], 
        DirectedEdge[11, 14], 
        DirectedEdge[11, 16], 
        DirectedEdge[17, 18], 
        DirectedEdge[15, 18], 
        DirectedEdge[13, 18], 
        DirectedEdge[7, 20], 
        DirectedEdge[8, 20], 
        DirectedEdge[6, 20], 
        DirectedEdge[11, 20], 
        DirectedEdge[21, 22], 
        DirectedEdge[15, 22], 
        DirectedEdge[10, 22]}|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.823021641855265*^9},
 CellID->883757733]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   InterpretationBox[
    TagBox[
     DynamicModuleBox[{Typeset`open = False}, 
      FrameBox[
       PaneSelectorBox[{False->GridBox[{
          {
           PaneBox[GridBox[{
              {
               StyleBox[
                StyleBox[
                 AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                  BoxBaselineShift->-0.25,
                  BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                 
                 FontColor->RGBColor[
                  0.8745098039215686, 0.2784313725490196, 
                   0.03137254901960784]],
                ShowStringCharacters->False,
                FontFamily->"Source Sans Pro Black",
                FontSize->0.6538461538461539 Inherited,
                FontWeight->"Heavy",
                PrivateFontOptions->{"OperatorSubstitution"->False}], 
               StyleBox[
                RowBox[{
                 StyleBox["PersistentHomology", "ResourceFunctionLabel"], 
                 " "}],
                ShowAutoStyles->False,
                ShowStringCharacters->False,
                FontSize->Rational[12, 13] Inherited,
                FontColor->GrayLevel[0.1]]}
             },
             GridBoxSpacings->{"Columns" -> {{0.25}}}],
            Alignment->Left,
            BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
            BaselinePosition->Baseline,
            FrameMargins->{{3, 0}, {0, 0}}], 
           ItemBox[
            PaneBox[
             TogglerBox[Dynamic[Typeset`open], {True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "IconizeCloser"],
               ImageSizeCache->{11., {1., 10.}}], False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "IconizeOpener"],
               ImageSizeCache->{11., {1., 10.}}]},
              Appearance->None,
              BaselinePosition->Baseline,
              ContentPadding->False,
              FrameMargins->0],
             Alignment->Left,
             BaselinePosition->Baseline,
             FrameMargins->{{1, 1}, {0, 0}}],
            Frame->{{
               RGBColor[
               0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                0.5], False}, {False, False}}]}
         },
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
        GridBox[{
          {GridBox[{
             {
              PaneBox[GridBox[{
                 {
                  StyleBox[
                   StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                   ShowStringCharacters->False,
                   FontFamily->"Source Sans Pro Black",
                   FontSize->0.6538461538461539 Inherited,
                   FontWeight->"Heavy",
                   PrivateFontOptions->{"OperatorSubstitution"->False}], 
                  StyleBox[
                   RowBox[{
                    StyleBox["PersistentHomology", "ResourceFunctionLabel"], 
                    " "}],
                   ShowAutoStyles->False,
                   ShowStringCharacters->False,
                   FontSize->Rational[12, 13] Inherited,
                   FontColor->GrayLevel[0.1]]}
                },
                GridBoxSpacings->{"Columns" -> {{0.25}}}],
               Alignment->Left,
               BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
               BaselinePosition->Baseline,
               FrameMargins->{{3, 0}, {0, 0}}], 
              ItemBox[
               PaneBox[
                TogglerBox[Dynamic[Typeset`open], {True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "IconizeCloser"]], False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "IconizeOpener"]]},
                 Appearance->None,
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0],
                Alignment->Left,
                BaselinePosition->Baseline,
                FrameMargins->{{1, 1}, {0, 0}}],
               Frame->{{
                  RGBColor[
                  0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                   0.5], False}, {False, False}}]}
            },
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
          {
           StyleBox[
            PaneBox[GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Version (latest): \"\>",
                  "IconizedLabel"], " ", 
                 TagBox["\<\"1.0.1\"\>",
                  "IconizedItem"]}]},
               {
                TagBox[
                 
                 TemplateBox[{
                  "\"Documentation \[RightGuillemet]\"", 
                   "https://resources.wolframcloud.com/FunctionRepository/\
resources/PersistentHomology"},
                  "HyperlinkURL"],
                 "IconizedItem"]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             Alignment->Left,
             BaselinePosition->Baseline,
             FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
            FontFamily->"Roboto",
            FontSize->11]}
         },
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
              GrayLevel[0.8]}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open],
        BaselinePosition->Baseline,
        ImageSize->Automatic],
       Background->RGBColor[
        0.9686274509803922, 0.9764705882352941, 0.984313725490196],
       BaselinePosition->Baseline,
       DefaultBaseStyle->{},
       FrameMargins->{{0, 0}, {1, 0}},
       FrameStyle->RGBColor[
        0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
       RoundingRadius->4]],
     {"FunctionResourceBox", 
      RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
      "PersistentHomology"},
     TagBoxNote->"FunctionResourceBox"],
    ResourceFunction["PersistentHomology"],
    BoxID -> "PersistentHomology",
    Selectable->False], "[", 
   RowBox[{"data", "\[LeftDoubleBracket]", 
    RowBox[{"1", ";;", "10"}], "\[RightDoubleBracket]"}], "]"}], 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8044948980435467`*^9, 3.8044948991837597`*^9}, 
   3.823021622126317*^9},
 CellID->95312061],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7.3326199`", ",", 
   InterpretationBox[
    RowBox[{
     TagBox["PersistentHomologyObject",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               GraphicsComplexBox[CompressedData["
1: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
DD7UNnFU6mGhG2+T145RH+SY9ZrzutlY7vy4V2ngKex2UAy4ntEDQ02/GiX9
uKDJkxbtMe2FnIE50gkPudC2yslK4U8vuN6sNTtygQs/bOInhsL7oH7xMpH5
+7lwbMI9rWBHP9j/elIzto4Ll5b2/DvS2g+9zSapiqJcyHELv6J/bQB6/5yh
fejhwNU9a713TQzAq5uXer3SOCCd1ZT4e5IEwwV3F73RYsFbYtPio/vJMLLR
fO8MwblvmZvRMhMfMhyJ/r1/YTsT+vpG+7sayVDt3Z3WHckE0a8R/0rmUaA7
Oumf62UmxF97+LHnEAVWe4QHrlVlQqhcYuJcdwoo+ob4MzkMMFzx1E+lmAJP
OM5No4Lzu/PamhCp6m4ItV2u09LCgSGFhxdOa/XAj6p/Tv2CcyO6d17KS+yB
343jjjHHOSBRFJTLV+yFXRmsOQdlOHA6amCsMKYXjOuKzbkDbBg02+Jet7EP
ajPeVeQlsqEjeJP/18w+UFDZ9aXyPhuIPzddcNbrh/Xha36rG7Khdd7JEBkF
EnhTNTbtaWZACvvN+uBrJNAx116zIZYBpxTHLBbkCtrPDc7GPmLA4CbFZ+Zi
ZEg4K6XXZMaAV38W9+07LpgfvcezC3cwYNUq5eQ4Qf0YSm1IfyjHAG5Oj7nh
TzJYO778IT+DAVfutr2eEtQb29zf6xTx6FCrrrpJn9gHZZcC51i3cUBWN/n9
tiUDsENcpnOpHwcub7w5sn7XINSfJDzw0ufA/Tei9ReshuDYjxADBpcNexLt
Y1fvIkCLiXjhlSA20C6/qPKuIoCLYp+97hY2KPgFPl9tSARH20Huu3oWyJR1
/A6oJoJVGdO/zpIFJZe/kOXfMcDN/l5Y3xoKUHYVqm+QZoLCTHkbqTQyPHE+
mejkzQSKpTbtvRYZhtXvz20ZZcKPubvnlgvmRaPGMpgneE7RxhzWF01BHi35
rhNayoIfzPK0yUQinPb9Xum7jA3K3j3HC+SIQH/aRv9wnQ2h/PYHh3wIsEp/
nVdGUA/0nv31bsZrNuipMFratXvhwOfvn4P/sUBSnkn4zBXk/wWJK8Z3WPAq
b7H60vQ+yFu7TNWLwYR59EEDk8f98ETfb56vDRN4xuvERc0F+c0L2JxOZcD6
BvM/sXsGweRgaubOmwxwcNLzz9AYAn6/6eM7Y4J6keK/lWZHg8W+RI/npYLx
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
                "], {{
                  Directive[
                   Opacity[0.7], 
                   Hue[0.6, 0.7, 0.5]], 
                  Arrowheads[0.], {
                   ArrowBox[{1, 2}, 0.02254220222992223], 
                   ArrowBox[{1, 5}, 0.02254220222992223], 
                   ArrowBox[{1, 7}, 0.02254220222992223], 
                   ArrowBox[{1, 9}, 0.02254220222992223], 
                   ArrowBox[{1, 11}, 0.02254220222992223], 
                   ArrowBox[{1, 13}, 0.02254220222992223], 
                   ArrowBox[{1, 15}, 0.02254220222992223], 
                   ArrowBox[{1, 17}, 0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-2.1409496216940123`*^-16, -1.0434049156924905`}, 5}],
                     0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {1.0704748108470062`*^-15, -0.9225412836753133}, 5}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.19317181243605622`, -1.0333779239158283`}, 7}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.1495108326247347, -0.7998123114976872}, 7}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.3696769958201283, -0.9542463251548349}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.24459071364353785`, -0.6313614109083246}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.5056775470872312, -0.8166972803055038}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.272398578269021, -0.43993880945047653`}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.582805838183662, -0.6393075500603161}, 13}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.229178820294798, -0.251397190160288}, 13}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.590645266014236, -0.4460346004393019}, 15}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.12076850752425144`, -0.09120014346806327}, 15}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {-0.04103500681170743, -0.01167546606958506}, 4}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.5674671696890601, 0.16145833033997112`}, 4}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.15069014333422975`, 0.013963498134084052`}, 6}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.7369836857302795, 0.06829159554065786}, 6}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.33873038367193714`, -0.031387992444006356`}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.8613974228519735, -0.07982022606495483}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.49768983777687453`, -0.14160496769998895`}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.9239056164555438, -0.26287381225308243`}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.6061001505474233, -0.3018020143922123}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.9160661886249679, -0.45614676187410347`}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    BezierCurveBox[{
                    3, {0.6493199085216432, -0.4903436336824059}, 14}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.8389378975285393, -0.633536492119288}, 14}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.6215120438961692, -0.6817662351402451}, 16}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.7029373462614268, -0.7710855369686257}, 16}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.19172515014593514`, 1.0256389642036672`}, 6}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.16951651604121815`, 0.9068332652006886}, 6}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.37976539048364444`, 0.9802874736255784}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.2939302531629152, 0.7587214435950802}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.5387248445885809, 0.8700704983695936}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.35643844676648223`, 0.5756678574069446}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.6471351573591255, 0.7098734516773724}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.34859901893590606`, 0.3823949077859304}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.6903549153333459, 0.5213318323871787}, 14}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.27147072783947207`, 0.20500517754074105`}, 14}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.3769213302526145, -0.9729461079072422}, 7}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.33326035044130586`, -0.8602441275062771}, 7}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.5534265136367049, -0.8938145091462413}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.4283402314601095, -0.6917932269169124}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.6894270649037971, -0.7562654642969203}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.4561480960855884, -0.500370625459065}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.7665553560002341, -0.5788757340517223}, 13}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.41292833811137236`, -0.31182900616887055`}, 13}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5492819065248636, 0.887120738826274}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.4856554033088557, 0.7843604077987405}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.7082413606297987, 0.7769037635702826}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5481635969124143, 0.6013068216106137}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.8166516734003458, 0.616706716878059}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5403241690818401, 0.4080338719895959}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.7029373462614349, -0.7710855369686219}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.6215120438961611, -0.6817662351402489}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.8389378975285295, -0.6335364921192947}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.6493199085216452, -0.4903436336824001}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    8, {0.83265509775149, 0.6287919419646689}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    8, {0.7362038372501287, 0.5559553310325218}, 10}], 
                    0.02254220222992223]}}, {
                  Directive[
                   Hue[0.6, 0.2, 0.8], 
                   EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                  DiskBox[1, 0.02254220222992223], 
                  DiskBox[2, 0.02254220222992223], 
                  DiskBox[3, 0.02254220222992223], 
                  DiskBox[4, 0.02254220222992223], 
                  DiskBox[5, 0.02254220222992223], 
                  DiskBox[6, 0.02254220222992223], 
                  DiskBox[7, 0.02254220222992223], 
                  DiskBox[8, 0.02254220222992223], 
                  DiskBox[9, 0.02254220222992223], 
                  DiskBox[10, 0.02254220222992223], 
                  DiskBox[11, 0.02254220222992223], 
                  DiskBox[12, 0.02254220222992223], 
                  DiskBox[13, 0.02254220222992223], 
                  DiskBox[14, 0.02254220222992223], 
                  DiskBox[15, 0.02254220222992223], 
                  DiskBox[16, 0.02254220222992223], 
                  DiskBox[17, 0.02254220222992223]}}], {
               Background -> GrayLevel[0, 0], FormatType -> TraditionalForm, 
                FrameTicks -> None, ImageSize -> 32}], 
              GridBox[{{
                 TagBox[
                  TemplateBox[{
                    StyleBox["\"Points: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox[
                    "\"\\!\\(\\*RowBox[{\\\"10\\\"}]\\)\"", 
                    StringForm["``", 10], Editable -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 TagBox[
                  TemplateBox[{
                    StyleBox["\"Dimensions: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox["\"\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\"", 
                    StringForm["``", 3], Editable -> False]}, "RowDefault"], 
                  "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               GraphicsComplexBox[CompressedData["
1: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
DD7UNnFU6mGhG2+T145RH+SY9ZrzutlY7vy4V2ngKex2UAy4ntEDQ02/GiX9
uKDJkxbtMe2FnIE50gkPudC2yslK4U8vuN6sNTtygQs/bOInhsL7oH7xMpH5
+7lwbMI9rWBHP9j/elIzto4Ll5b2/DvS2g+9zSapiqJcyHELv6J/bQB6/5yh
fejhwNU9a713TQzAq5uXer3SOCCd1ZT4e5IEwwV3F73RYsFbYtPio/vJMLLR
fO8MwblvmZvRMhMfMhyJ/r1/YTsT+vpG+7sayVDt3Z3WHckE0a8R/0rmUaA7
Oumf62UmxF97+LHnEAVWe4QHrlVlQqhcYuJcdwoo+ob4MzkMMFzx1E+lmAJP
OM5No4Lzu/PamhCp6m4ItV2u09LCgSGFhxdOa/XAj6p/Tv2CcyO6d17KS+yB
343jjjHHOSBRFJTLV+yFXRmsOQdlOHA6amCsMKYXjOuKzbkDbBg02+Jet7EP
ajPeVeQlsqEjeJP/18w+UFDZ9aXyPhuIPzddcNbrh/Xha36rG7Khdd7JEBkF
EnhTNTbtaWZACvvN+uBrJNAx116zIZYBpxTHLBbkCtrPDc7GPmLA4CbFZ+Zi
ZEg4K6XXZMaAV38W9+07LpgfvcezC3cwYNUq5eQ4Qf0YSm1IfyjHAG5Oj7nh
TzJYO778IT+DAVfutr2eEtQb29zf6xTx6FCrrrpJn9gHZZcC51i3cUBWN/n9
tiUDsENcpnOpHwcub7w5sn7XINSfJDzw0ufA/Tei9ReshuDYjxADBpcNexLt
Y1fvIkCLiXjhlSA20C6/qPKuIoCLYp+97hY2KPgFPl9tSARH20Huu3oWyJR1
/A6oJoJVGdO/zpIFJZe/kOXfMcDN/l5Y3xoKUHYVqm+QZoLCTHkbqTQyPHE+
mejkzQSKpTbtvRYZhtXvz20ZZcKPubvnlgvmRaPGMpgneE7RxhzWF01BHi35
rhNayoIfzPK0yUQinPb9Xum7jA3K3j3HC+SIQH/aRv9wnQ2h/PYHh3wIsEp/
nVdGUA/0nv31bsZrNuipMFratXvhwOfvn4P/sUBSnkn4zBXk/wWJK8Z3WPAq
b7H60vQ+yFu7TNWLwYR59EEDk8f98ETfb56vDRN4xuvERc0F+c0L2JxOZcD6
BvM/sXsGweRgaubOmwxwcNLzz9AYAn6/6eM7Y4J6keK/lWZHg8W+RI/npYLx
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
                "], {{
                  Directive[
                   Opacity[0.7], 
                   Hue[0.6, 0.7, 0.5]], 
                  Arrowheads[0.], {
                   ArrowBox[{1, 2}, 0.02254220222992223], 
                   ArrowBox[{1, 5}, 0.02254220222992223], 
                   ArrowBox[{1, 7}, 0.02254220222992223], 
                   ArrowBox[{1, 9}, 0.02254220222992223], 
                   ArrowBox[{1, 11}, 0.02254220222992223], 
                   ArrowBox[{1, 13}, 0.02254220222992223], 
                   ArrowBox[{1, 15}, 0.02254220222992223], 
                   ArrowBox[{1, 17}, 0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-2.1409496216940123`*^-16, -1.0434049156924905`}, 5}],
                     0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {1.0704748108470062`*^-15, -0.9225412836753133}, 5}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.19317181243605622`, -1.0333779239158283`}, 7}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.1495108326247347, -0.7998123114976872}, 7}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.3696769958201283, -0.9542463251548349}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.24459071364353785`, -0.6313614109083246}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.5056775470872312, -0.8166972803055038}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.272398578269021, -0.43993880945047653`}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.582805838183662, -0.6393075500603161}, 13}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.229178820294798, -0.251397190160288}, 13}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.590645266014236, -0.4460346004393019}, 15}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.12076850752425144`, -0.09120014346806327}, 15}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {-0.04103500681170743, -0.01167546606958506}, 4}], 
                    0.02254220222992223], 
                   ArrowBox[
                    BezierCurveBox[{
                    3, {0.5674671696890601, 0.16145833033997112`}, 4}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.15069014333422975`, 0.013963498134084052`}, 6}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.7369836857302795, 0.06829159554065786}, 6}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.33873038367193714`, -0.031387992444006356`}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.8613974228519735, -0.07982022606495483}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.49768983777687453`, -0.14160496769998895`}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.9239056164555438, -0.26287381225308243`}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.6061001505474233, -0.3018020143922123}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.9160661886249679, -0.45614676187410347`}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.6493199085216432, -0.4903436336824059}, 14}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.8389378975285393, -0.633536492119288}, 14}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.6215120438961692, -0.6817662351402451}, 16}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.7029373462614268, -0.7710855369686257}, 16}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.19172515014593514`, 1.0256389642036672`}, 6}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.16951651604121815`, 0.9068332652006886}, 6}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.37976539048364444`, 0.9802874736255784}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.2939302531629152, 0.7587214435950802}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.5387248445885809, 0.8700704983695936}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.35643844676648223`, 0.5756678574069446}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.6471351573591255, 0.7098734516773724}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.34859901893590606`, 0.3823949077859304}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.6903549153333459, 0.5213318323871787}, 14}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.27147072783947207`, 0.20500517754074105`}, 14}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.3769213302526145, -0.9729461079072422}, 7}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.33326035044130586`, -0.8602441275062771}, 7}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.5534265136367049, -0.8938145091462413}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.4283402314601095, -0.6917932269169124}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.6894270649037971, -0.7562654642969203}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.4561480960855884, -0.500370625459065}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.7665553560002341, -0.5788757340517223}, 13}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.41292833811137236`, -0.31182900616887055`}, 13}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5492819065248636, 0.887120738826274}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.4856554033088557, 0.7843604077987405}, 8}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.7082413606297987, 0.7769037635702826}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5481635969124143, 0.6013068216106137}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.8166516734003458, 0.616706716878059}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5403241690818401, 0.4080338719895959}, 12}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.7029373462614349, -0.7710855369686219}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.6215120438961611, -0.6817662351402489}, 9}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.8389378975285295, -0.6335364921192947}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.6493199085216452, -0.4903436336824001}, 11}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    8, {0.83265509775149, 0.6287919419646689}, 10}], 
                    0.02254220222992223], 
                   ArrowBox[
                    
                    BezierCurveBox[{
                    8, {0.7362038372501287, 0.5559553310325218}, 10}], 
                    0.02254220222992223]}}, {
                  Directive[
                   Hue[0.6, 0.2, 0.8], 
                   EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                  DiskBox[1, 0.02254220222992223], 
                  DiskBox[2, 0.02254220222992223], 
                  DiskBox[3, 0.02254220222992223], 
                  DiskBox[4, 0.02254220222992223], 
                  DiskBox[5, 0.02254220222992223], 
                  DiskBox[6, 0.02254220222992223], 
                  DiskBox[7, 0.02254220222992223], 
                  DiskBox[8, 0.02254220222992223], 
                  DiskBox[9, 0.02254220222992223], 
                  DiskBox[10, 0.02254220222992223], 
                  DiskBox[11, 0.02254220222992223], 
                  DiskBox[12, 0.02254220222992223], 
                  DiskBox[13, 0.02254220222992223], 
                  DiskBox[14, 0.02254220222992223], 
                  DiskBox[15, 0.02254220222992223], 
                  DiskBox[16, 0.02254220222992223], 
                  DiskBox[17, 0.02254220222992223]}}], {
               Background -> GrayLevel[0, 0], FormatType -> TraditionalForm, 
                FrameTicks -> None, ImageSize -> 32}], 
              GridBox[{{
                 TagBox[
                  TemplateBox[{
                    StyleBox["\"Points: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox[
                    "\"\\!\\(\\*RowBox[{\\\"10\\\"}]\\)\"", 
                    StringForm["``", 10], Editable -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 TagBox[
                  TemplateBox[{
                    StyleBox["\"Dimensions: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox["\"\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\"", 
                    StringForm["``", 3], Editable -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 TagBox[
                  TemplateBox[{
                    StyleBox["\"Simplex Count: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox["\"\\!\\(\\*RowBox[{\\\"385\\\"}]\\)\"", 
                    StringForm["``", 385], Editable -> False]}, "RowDefault"],
                   "SummaryItem"]}, {
                 TagBox[
                  TemplateBox[{
                    StyleBox["\"Filtration Length: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox[
                    "\"\\!\\(\\*RowBox[{\\\"45\\\"}]\\)\"", 
                    StringForm["``", 45], Editable -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 TagBox[
                  TemplateBox[{
                    StyleBox["\"Generators: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox[
                    "\"\\!\\(\\*RowBox[{\\\"10\\\"}]\\)\"", 
                    StringForm["``", 10], Editable -> False]}, "RowDefault"], 
                  "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    $CellContext`PersistentHomologyObject[<|
     "Points" -> {{0.40745560734597275`, 0.32413817091234676`, 
       0.2527782579526934}, {0.966993963153975, 0.6133724491058745, 
       0.8158125066883886}, {0.33693767229969107`, 0.540709641286448, 
       0.37209594551007896`}, {0.028555966364127272`, 0.7647838438805958, 
       0.7362384166686389}, {0.7360040408476469, 0.35023640882146156`, 
       0.9966504103874969}, {0.8152588756582002, 0.24761913585802242`, 
       0.2424714791334801}, {0.1685747988269859, 0.12605398683999347`, 
       0.4072730346186153}, {0.6145000177376638, 0.7297874832210902, 
       0.32248363903819777`}, {0.3620432938259266, 0.3999425845460627, 
       0.493097935961623}, {0.5020651827273281, 0.6219463810326689, 
       0.22178867405125735`}}, "Dimension" -> 3, "MaximumDistance" -> 
      1.063092936350666, 
      "Simplices" -> {{1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {10}, {8, 
        10}, {3, 9}, {3, 10}, {1, 9}, {1, 3}, {1, 3, 9}, {1, 10}, {1, 3, 
        10}, {3, 8}, {3, 8, 10}, {7, 9}, {1, 7}, {1, 7, 9}, {9, 10}, {1, 9, 
        10}, {3, 9, 10}, {1, 3, 9, 10}, {2, 5}, {1, 6}, {3, 7}, {1, 3, 7}, {3,
         7, 9}, {1, 3, 7, 9}, {8, 9}, {3, 8, 9}, {8, 9, 10}, {3, 8, 9, 10}, {
        1, 8}, {1, 3, 8}, {1, 8, 9}, {1, 8, 10}, {1, 3, 8, 9}, {1, 3, 8, 
        10}, {1, 8, 9, 10}, {6, 10}, {1, 6, 10}, {3, 4}, {6, 8}, {1, 6, 8}, {
        6, 8, 10}, {1, 6, 8, 10}, {6, 9}, {1, 6, 9}, {6, 8, 9}, {6, 9, 10}, {
        1, 6, 8, 9}, {1, 6, 9, 10}, {6, 8, 9, 10}, {4, 9}, {3, 4, 9}, {3, 
        6}, {1, 3, 6}, {3, 6, 8}, {3, 6, 9}, {3, 6, 10}, {1, 3, 6, 8}, {1, 3, 
        6, 9}, {1, 3, 6, 10}, {3, 6, 8, 9}, {3, 6, 8, 10}, {3, 6, 9, 10}, {2, 
        8}, {7, 10}, {1, 7, 10}, {3, 7, 10}, {7, 9, 10}, {1, 3, 7, 10}, {1, 7,
         9, 10}, {3, 7, 9, 10}, {5, 9}, {6, 7}, {1, 6, 7}, {3, 6, 7}, {6, 7, 
        9}, {6, 7, 10}, {1, 3, 6, 7}, {1, 6, 7, 9}, {1, 6, 7, 10}, {3, 6, 7, 
        9}, {3, 6, 7, 10}, {6, 7, 9, 10}, {2, 6}, {2, 6, 8}, {4, 10}, {3, 4, 
        10}, {4, 9, 10}, {3, 4, 9, 10}, {2, 9}, {2, 5, 9}, {2, 6, 9}, {2, 8, 
        9}, {2, 6, 8, 9}, {4, 8}, {3, 4, 8}, {4, 8, 9}, {4, 8, 10}, {3, 4, 8, 
        9}, {3, 4, 8, 10}, {4, 8, 9, 10}, {4, 7}, {3, 4, 7}, {4, 7, 9}, {4, 7,
         10}, {3, 4, 7, 9}, {3, 4, 7, 10}, {4, 7, 9, 10}, {2, 10}, {2, 6, 
        10}, {2, 8, 10}, {2, 9, 10}, {2, 6, 8, 10}, {2, 6, 9, 10}, {2, 8, 9, 
        10}, {7, 8}, {1, 7, 8}, {3, 7, 8}, {4, 7, 8}, {6, 7, 8}, {7, 8, 9}, {
        7, 8, 10}, {1, 3, 7, 8}, {1, 6, 7, 8}, {1, 7, 8, 9}, {1, 7, 8, 10}, {
        3, 4, 7, 8}, {3, 6, 7, 8}, {3, 7, 8, 9}, {3, 7, 8, 10}, {4, 7, 8, 
        9}, {4, 7, 8, 10}, {6, 7, 8, 9}, {6, 7, 8, 10}, {7, 8, 9, 10}, {1, 
        4}, {1, 3, 4}, {1, 4, 7}, {1, 4, 8}, {1, 4, 9}, {1, 4, 10}, {1, 3, 4, 
        7}, {1, 3, 4, 8}, {1, 3, 4, 9}, {1, 3, 4, 10}, {1, 4, 7, 8}, {1, 4, 7,
         9}, {1, 4, 7, 10}, {1, 4, 8, 9}, {1, 4, 8, 10}, {1, 4, 9, 10}, {5, 
        6}, {2, 5, 6}, {5, 6, 9}, {2, 5, 6, 9}, {3, 5}, {3, 5, 6}, {3, 5, 
        9}, {3, 5, 6, 9}, {2, 3}, {2, 3, 5}, {2, 3, 6}, {2, 3, 8}, {2, 3, 
        9}, {2, 3, 10}, {2, 3, 5, 6}, {2, 3, 5, 9}, {2, 3, 6, 8}, {2, 3, 6, 
        9}, {2, 3, 6, 10}, {2, 3, 8, 9}, {2, 3, 8, 10}, {2, 3, 9, 10}, {5, 
        8}, {2, 5, 8}, {3, 5, 8}, {5, 6, 8}, {5, 8, 9}, {2, 3, 5, 8}, {2, 5, 
        6, 8}, {2, 5, 8, 9}, {3, 5, 6, 8}, {3, 5, 8, 9}, {5, 6, 8, 9}, {1, 
        5}, {1, 3, 5}, {1, 5, 6}, {1, 5, 8}, {1, 5, 9}, {1, 3, 5, 6}, {1, 3, 
        5, 8}, {1, 3, 5, 9}, {1, 5, 6, 8}, {1, 5, 6, 9}, {1, 5, 8, 9}, {1, 
        2}, {1, 2, 3}, {1, 2, 5}, {1, 2, 6}, {1, 2, 8}, {1, 2, 9}, {1, 2, 
        10}, {1, 2, 3, 5}, {1, 2, 3, 6}, {1, 2, 3, 8}, {1, 2, 3, 9}, {1, 2, 3,
         10}, {1, 2, 5, 6}, {1, 2, 5, 8}, {1, 2, 5, 9}, {1, 2, 6, 8}, {1, 2, 
        6, 9}, {1, 2, 6, 10}, {1, 2, 8, 9}, {1, 2, 8, 10}, {1, 2, 9, 10}, {5, 
        7}, {1, 5, 7}, {3, 5, 7}, {5, 6, 7}, {5, 7, 8}, {5, 7, 9}, {1, 3, 5, 
        7}, {1, 5, 6, 7}, {1, 5, 7, 8}, {1, 5, 7, 9}, {3, 5, 6, 7}, {3, 5, 7, 
        8}, {3, 5, 7, 9}, {5, 6, 7, 8}, {5, 6, 7, 9}, {5, 7, 8, 9}, {5, 10}, {
        1, 5, 10}, {2, 5, 10}, {3, 5, 10}, {5, 6, 10}, {5, 7, 10}, {5, 8, 
        10}, {5, 9, 10}, {1, 2, 5, 10}, {1, 3, 5, 10}, {1, 5, 6, 10}, {1, 5, 
        7, 10}, {1, 5, 8, 10}, {1, 5, 9, 10}, {2, 3, 5, 10}, {2, 5, 6, 10}, {
        2, 5, 8, 10}, {2, 5, 9, 10}, {3, 5, 6, 10}, {3, 5, 7, 10}, {3, 5, 8, 
        10}, {3, 5, 9, 10}, {5, 6, 7, 10}, {5, 6, 8, 10}, {5, 6, 9, 10}, {5, 
        7, 8, 10}, {5, 7, 9, 10}, {5, 8, 9, 10}, {4, 5}, {1, 4, 5}, {3, 4, 
        5}, {4, 5, 7}, {4, 5, 8}, {4, 5, 9}, {4, 5, 10}, {1, 3, 4, 5}, {1, 4, 
        5, 7}, {1, 4, 5, 8}, {1, 4, 5, 9}, {1, 4, 5, 10}, {3, 4, 5, 7}, {3, 4,
         5, 8}, {3, 4, 5, 9}, {3, 4, 5, 10}, {4, 5, 7, 8}, {4, 5, 7, 9}, {4, 
        5, 7, 10}, {4, 5, 8, 9}, {4, 5, 8, 10}, {4, 5, 9, 10}, {2, 4}, {1, 2, 
        4}, {2, 3, 4}, {2, 4, 5}, {2, 4, 8}, {2, 4, 9}, {2, 4, 10}, {1, 2, 3, 
        4}, {1, 2, 4, 5}, {1, 2, 4, 8}, {1, 2, 4, 9}, {1, 2, 4, 10}, {2, 3, 4,
         5}, {2, 3, 4, 8}, {2, 3, 4, 9}, {2, 3, 4, 10}, {2, 4, 5, 8}, {2, 4, 
        5, 9}, {2, 4, 5, 10}, {2, 4, 8, 9}, {2, 4, 8, 10}, {2, 4, 9, 10}, {2, 
        7}, {1, 2, 7}, {2, 3, 7}, {2, 4, 7}, {2, 5, 7}, {2, 6, 7}, {2, 7, 
        8}, {2, 7, 9}, {2, 7, 10}, {1, 2, 3, 7}, {1, 2, 4, 7}, {1, 2, 5, 7}, {
        1, 2, 6, 7}, {1, 2, 7, 8}, {1, 2, 7, 9}, {1, 2, 7, 10}, {2, 3, 4, 
        7}, {2, 3, 5, 7}, {2, 3, 6, 7}, {2, 3, 7, 8}, {2, 3, 7, 9}, {2, 3, 7, 
        10}, {2, 4, 5, 7}, {2, 4, 7, 8}, {2, 4, 7, 9}, {2, 4, 7, 10}, {2, 5, 
        6, 7}, {2, 5, 7, 8}, {2, 5, 7, 9}, {2, 5, 7, 10}, {2, 6, 7, 8}, {2, 6,
         7, 9}, {2, 6, 7, 10}, {2, 7, 8, 9}, {2, 7, 8, 10}, {2, 7, 9, 10}, {4,
         6}, {1, 4, 6}, {2, 4, 6}, {3, 4, 6}, {4, 5, 6}, {4, 6, 7}, {4, 6, 
        8}, {4, 6, 9}, {4, 6, 10}, {1, 2, 4, 6}, {1, 3, 4, 6}, {1, 4, 5, 6}, {
        1, 4, 6, 7}, {1, 4, 6, 8}, {1, 4, 6, 9}, {1, 4, 6, 10}, {2, 3, 4, 
        6}, {2, 4, 5, 6}, {2, 4, 6, 7}, {2, 4, 6, 8}, {2, 4, 6, 9}, {2, 4, 6, 
        10}, {3, 4, 5, 6}, {3, 4, 6, 7}, {3, 4, 6, 8}, {3, 4, 6, 9}, {3, 4, 6,
         10}, {4, 5, 6, 7}, {4, 5, 6, 8}, {4, 5, 6, 9}, {4, 5, 6, 10}, {4, 6, 
        7, 8}, {4, 6, 7, 9}, {4, 6, 7, 10}, {4, 6, 8, 9}, {4, 6, 8, 10}, {4, 
        6, 9, 10}}, "SimplexWeights" -> CompressedData["
1:eJxTTMoPSmVkYGBoBBFUBveu35rUtO+4/ddHjDZffx63bwvVvMmadc5+7a7m
Z8rJF+w3Hdm/e3sJgq5vy7DcKnEFThdtyYjV33UVTpecWV0ro37N/tachaWz
9BE0G3/7n6saN3DSO6Z+r5tjcdM+5PSGI6oTbtlvTdtt+HfXHZw06/0/69T2
4qa36TZ3bKq5SzJtcpLZc5PzfTi94fCZXZPvPbC/5q74q+sFbnoC/0n/QLeH
JNMvWEWOzliAoONWPjCdmfOI6rSDRpTd1oOP7eff+rLlDesTkmmrEws5w5We
2C/mzn3zastTqtPnlLd3yPk8g9Nf9m++J3INN13Jxya39Bdh+uyGGc1Kv0mn
I7qcX6fnPCeZ3nDF8spr5Rck0weTD6/fpj14ac5m76nHDQaODr/YfPR+DW46
Q+FW1DM8NJv/nRuvj9CPTqpIK+vnf0l1er/L8mQVzldUp/1+Ra9/wvF60NNO
M/5Fm6oOHL3I5QqfR9DwpR+ml9nvbB86tMJyOfPwtndDhj6YtVf5RsiHURoH
nXVQeW8u08dRmgANAMmGAkE=
       "], 
      "IntervalIndices" -> {{10, 11}, {9, 12}, {8, 13}, {3, 14}, {7, 21}, {5, 
       28}, {6, 29}, {4, 47}, {2, 72}, {80, 100}}, 
      "Intervals" -> {{0., 0.18550140543601307`}, {0., 0.1873156111721738}, {
       0., 0.23761056045138335`}, {0., 0.25605103980243876`}, {0., 
       0.3461371638542865}, {0., 0.39408028029569264`}, {0., 
       0.4150480671698251}, {0., 0.5271700523791107}, {0., 
       0.6173959939781142}, {0.62919189339869, 0.7180963121795251}}, 
      "FiltrationRadii" -> CompressedData["
1:eJwBfQGC/iFib1JlAQAAAC4AAAAAAAAAAAAAAN7X2pKCvsc/9eIBPPX5xz+G
VSnZBWrOP626g+YjY9A/ssS/u7d00D9/hmg5tRjUP3K0aF0vutU/dMyrfRwn
1j/anKF1mi/WPwYPh/zVKNg/uJX3fpw42T9Uy7DEJZDaP7VmuzH9utw/Bd/8
ria93D+2LYOIsnzdPzTJA0myQ98/sMPMupPe4D/WRyH6iujgP5APyU9RRuE/
6AUUxZig4T9eqeA1mWziP0AoWj61weM/n9r0tOwF5D86yKEJVyLkP6MLbezq
tOU/ziO3iB5M5j/0v7PeFNbmP3kOBh6l+uY/zbCYgyL75j9YikPrZ2znP7DU
OdTrI+g/wWPDr7Yr6D8Jg0uVxzDoP1fRg8XffOg/aCDaWuZ86D8GT9zY68To
P2J4ZnaPD+k/v0SnYyQJ6j9O+luv5AjrP0KY/ls1Jes/okTUDkhS6z/hZ3Y/
uYfrPyCnHjdXhu4/wWq9I9hU8D9qwSO9bQLxP3SIwAk=
       "], "Edges" -> {
        DirectedEdge[11, 13], 
        DirectedEdge[12, 14], 
        DirectedEdge[14, 15], 
        DirectedEdge[11, 17], 
        DirectedEdge[13, 17], 
        DirectedEdge[14, 17], 
        DirectedEdge[13, 19], 
        DirectedEdge[12, 21], 
        DirectedEdge[21, 22], 
        DirectedEdge[14, 22], 
        DirectedEdge[11, 24], 
        DirectedEdge[12, 24], 
        DirectedEdge[13, 24], 
        DirectedEdge[25, 26], 
        DirectedEdge[18, 26], 
        DirectedEdge[16, 26], 
        DirectedEdge[21, 30], 
        DirectedEdge[31, 32], 
        DirectedEdge[23, 32], 
        DirectedEdge[16, 32], 
        DirectedEdge[12, 34], 
        DirectedEdge[13, 34], 
        DirectedEdge[35, 36], 
        DirectedEdge[25, 36], 
        DirectedEdge[20, 36], 
        DirectedEdge[18, 36], 
        DirectedEdge[16, 36], 
        DirectedEdge[13, 38], 
        DirectedEdge[14, 38], 
        DirectedEdge[39, 40], 
        DirectedEdge[35, 40], 
        DirectedEdge[16, 40], 
        DirectedEdge[39, 41], 
        DirectedEdge[20, 41], 
        DirectedEdge[18, 41], 
        DirectedEdge[43, 44], 
        DirectedEdge[42, 44], 
        DirectedEdge[37, 44], 
        DirectedEdge[27, 44], 
        DirectedEdge[11, 45], 
        DirectedEdge[13, 45], 
        DirectedEdge[29, 45], 
        DirectedEdge[14, 45], 
        DirectedEdge[13, 48], 
        DirectedEdge[29, 48], 
        DirectedEdge[14, 48], 
        DirectedEdge[49, 50], 
        DirectedEdge[46, 50], 
        DirectedEdge[39, 50], 
        DirectedEdge[20, 50], 
        DirectedEdge[18, 50], 
        DirectedEdge[12, 52], 
        DirectedEdge[29, 52], 
        DirectedEdge[14, 52], 
        DirectedEdge[53, 54], 
        DirectedEdge[49, 54], 
        DirectedEdge[39, 54], 
        DirectedEdge[35, 54], 
        DirectedEdge[16, 54], 
        DirectedEdge[53, 55], 
        DirectedEdge[46, 55], 
        DirectedEdge[25, 55], 
        DirectedEdge[57, 58], 
        DirectedEdge[56, 58], 
        DirectedEdge[51, 58], 
        DirectedEdge[43, 58], 
        DirectedEdge[42, 58], 
        DirectedEdge[37, 58], 
        DirectedEdge[27, 58], 
        DirectedEdge[12, 59], 
        DirectedEdge[47, 59], 
        DirectedEdge[29, 61], 
        DirectedEdge[14, 61], 
        DirectedEdge[62, 63], 
        DirectedEdge[49, 63], 
        DirectedEdge[39, 63], 
        DirectedEdge[62, 64], 
        DirectedEdge[53, 64], 
        DirectedEdge[16, 64], 
        DirectedEdge[62, 65], 
        DirectedEdge[46, 65], 
        DirectedEdge[18, 65], 
        DirectedEdge[67, 69], 
        DirectedEdge[66, 69], 
        DirectedEdge[56, 69], 
        DirectedEdge[42, 69], 
        DirectedEdge[68, 70], 
        DirectedEdge[66, 70], 
        DirectedEdge[51, 70], 
        DirectedEdge[43, 70], 
        DirectedEdge[68, 71], 
        DirectedEdge[67, 71], 
        DirectedEdge[57, 71], 
        DirectedEdge[27, 71], 
        DirectedEdge[13, 72], 
        DirectedEdge[14, 72], 
        DirectedEdge[11, 73], 
        DirectedEdge[13, 73], 
        DirectedEdge[21, 73], 
        DirectedEdge[74, 75], 
        DirectedEdge[31, 75], 
        DirectedEdge[18, 75], 
        DirectedEdge[74, 76], 
        DirectedEdge[25, 76], 
        DirectedEdge[23, 76], 
        DirectedEdge[78, 79], 
        DirectedEdge[77, 79], 
        DirectedEdge[33, 79], 
        DirectedEdge[27, 79], 
        DirectedEdge[12, 80], 
        DirectedEdge[28, 80], 
        DirectedEdge[14, 80], 
        DirectedEdge[72, 80], 
        DirectedEdge[21, 81], 
        DirectedEdge[29, 81], 
        DirectedEdge[14, 81], 
        DirectedEdge[82, 83], 
        DirectedEdge[62, 83], 
        DirectedEdge[31, 83], 
        DirectedEdge[82, 84], 
        DirectedEdge[53, 84], 
        DirectedEdge[23, 84], 
        DirectedEdge[82, 85], 
        DirectedEdge[74, 85], 
        DirectedEdge[46, 85], 
        DirectedEdge[87, 89], 
        DirectedEdge[86, 89], 
        DirectedEdge[67, 89], 
        DirectedEdge[33, 89], 
        DirectedEdge[88, 90], 
        DirectedEdge[86, 90], 
        DirectedEdge[77, 90], 
        DirectedEdge[68, 90], 
        DirectedEdge[88, 91], 
        DirectedEdge[87, 91], 
        DirectedEdge[78, 91], 
        DirectedEdge[57, 91], 
        DirectedEdge[29, 92], 
        DirectedEdge[72, 92], 
        DirectedEdge[11, 94], 
        DirectedEdge[13, 94], 
        DirectedEdge[47, 94], 
        DirectedEdge[95, 96], 
        DirectedEdge[60, 96], 
        DirectedEdge[25, 96], 
        DirectedEdge[18, 96], 
        DirectedEdge[16, 96], 
        DirectedEdge[12, 98], 
        DirectedEdge[14, 98], 
        DirectedEdge[72, 98], 
        DirectedEdge[99, 100], 
        DirectedEdge[93, 100], 
        DirectedEdge[99, 101], 
        DirectedEdge[100, 101], 
        DirectedEdge[53, 101], 
        DirectedEdge[49, 101], 
        DirectedEdge[39, 101], 
        DirectedEdge[35, 101], 
        DirectedEdge[16, 101], 
        DirectedEdge[13, 103], 
        DirectedEdge[47, 103], 
        DirectedEdge[104, 105], 
        DirectedEdge[60, 105], 
        DirectedEdge[35, 105], 
        DirectedEdge[104, 106], 
        DirectedEdge[95, 106], 
        DirectedEdge[20, 106], 
        DirectedEdge[108, 109], 
        DirectedEdge[107, 109], 
        DirectedEdge[97, 109], 
        DirectedEdge[37, 109], 
        DirectedEdge[21, 110], 
        DirectedEdge[47, 110], 
        DirectedEdge[111, 112], 
        DirectedEdge[60, 112], 
        DirectedEdge[31, 112], 
        DirectedEdge[23, 112], 
        DirectedEdge[16, 112], 
        DirectedEdge[111, 113], 
        DirectedEdge[95, 113], 
        DirectedEdge[74, 113], 
        DirectedEdge[31, 113], 
        DirectedEdge[18, 113], 
        DirectedEdge[115, 116], 
        DirectedEdge[114, 116], 
        DirectedEdge[97, 116], 
        DirectedEdge[78, 116], 
        DirectedEdge[77, 116], 
        DirectedEdge[33, 116], 
        DirectedEdge[27, 116], 
        DirectedEdge[11, 117], 
        DirectedEdge[13, 117], 
        DirectedEdge[14, 117], 
        DirectedEdge[72, 117], 
        DirectedEdge[118, 119], 
        DirectedEdge[93, 119], 
        DirectedEdge[49, 119], 
        DirectedEdge[46, 119], 
        DirectedEdge[39, 119], 
        DirectedEdge[20, 119], 
        DirectedEdge[18, 119], 
        DirectedEdge[118, 120], 
        DirectedEdge[99, 120], 
        DirectedEdge[93, 120], 
        DirectedEdge[100, 120], 
        DirectedEdge[53, 120], 
        DirectedEdge[46, 120], 
        DirectedEdge[25, 120], 
        DirectedEdge[122, 123], 
        DirectedEdge[121, 123], 
        DirectedEdge[102, 123], 
        DirectedEdge[57, 123], 
        DirectedEdge[56, 123], 
        DirectedEdge[51, 123], 
        DirectedEdge[43, 123], 
        DirectedEdge[42, 123], 
        DirectedEdge[37, 123], 
        DirectedEdge[27, 123], 
        DirectedEdge[13, 124], 
        DirectedEdge[21, 124], 
        DirectedEdge[125, 126], 
        DirectedEdge[39, 126], 
        DirectedEdge[31, 126], 
        DirectedEdge[125, 127], 
        DirectedEdge[111, 127], 
        DirectedEdge[104, 127], 
        DirectedEdge[39, 127], 
        DirectedEdge[31, 127], 
        DirectedEdge[125, 128], 
        DirectedEdge[82, 128], 
        DirectedEdge[49, 128], 
        DirectedEdge[125, 129], 
        DirectedEdge[39, 129], 
        DirectedEdge[35, 129], 
        DirectedEdge[23, 129], 
        DirectedEdge[16, 129], 
        DirectedEdge[125, 130], 
        DirectedEdge[74, 130], 
        DirectedEdge[39, 130], 
        DirectedEdge[20, 130], 
        DirectedEdge[18, 130], 
        DirectedEdge[132, 136], 
        DirectedEdge[131, 136], 
        DirectedEdge[86, 136], 
        DirectedEdge[66, 136], 
        DirectedEdge[133, 137], 
        DirectedEdge[131, 137], 
        DirectedEdge[42, 137], 
        DirectedEdge[33, 137], 
        DirectedEdge[134, 138], 
        DirectedEdge[131, 138], 
        DirectedEdge[77, 138], 
        DirectedEdge[43, 138], 
        DirectedEdge[133, 139], 
        DirectedEdge[135, 139], 
        DirectedEdge[131, 139], 
        DirectedEdge[114, 139], 
        DirectedEdge[107, 139], 
        DirectedEdge[42, 139], 
        DirectedEdge[33, 139], 
        DirectedEdge[134, 140], 
        DirectedEdge[135, 140], 
        DirectedEdge[131, 140], 
        DirectedEdge[115, 140], 
        DirectedEdge[108, 140], 
        DirectedEdge[77, 140], 
        DirectedEdge[43, 140], 
        DirectedEdge[133, 141], 
        DirectedEdge[132, 141], 
        DirectedEdge[87, 141], 
        DirectedEdge[56, 141], 
        DirectedEdge[134, 142], 
        DirectedEdge[132, 142], 
        DirectedEdge[88, 142], 
        DirectedEdge[51, 142], 
        DirectedEdge[134, 143], 
        DirectedEdge[133, 143], 
        DirectedEdge[78, 143], 
        DirectedEdge[43, 143], 
        DirectedEdge[42, 143], 
        DirectedEdge[37, 143], 
        DirectedEdge[27, 143], 
        DirectedEdge[47, 144], 
        DirectedEdge[14, 144], 
        DirectedEdge[145, 146], 
        DirectedEdge[111, 146], 
        DirectedEdge[31, 146], 
        DirectedEdge[145, 147], 
        DirectedEdge[104, 147], 
        DirectedEdge[39, 147], 
        DirectedEdge[145, 148], 
        DirectedEdge[60, 148], 
        DirectedEdge[16, 148], 
        DirectedEdge[145, 149], 
        DirectedEdge[95, 149], 
        DirectedEdge[18, 149], 
        DirectedEdge[151, 154], 
        DirectedEdge[150, 154], 
        DirectedEdge[135, 154], 
        DirectedEdge[131, 154], 
        DirectedEdge[152, 155], 
        DirectedEdge[150, 155], 
        DirectedEdge[114, 155], 
        DirectedEdge[33, 155], 
        DirectedEdge[153, 156], 
        DirectedEdge[150, 156], 
        DirectedEdge[115, 156], 
        DirectedEdge[77, 156], 
        DirectedEdge[152, 157], 
        DirectedEdge[151, 157], 
        DirectedEdge[107, 157], 
        DirectedEdge[42, 157], 
        DirectedEdge[153, 158], 
        DirectedEdge[151, 158], 
        DirectedEdge[108, 158], 
        DirectedEdge[43, 158], 
        DirectedEdge[153, 159], 
        DirectedEdge[152, 159], 
        DirectedEdge[97, 159], 
        DirectedEdge[27, 159], 
        DirectedEdge[29, 160], 
        DirectedEdge[28, 160], 
        DirectedEdge[72, 160], 
        DirectedEdge[161, 162], 
        DirectedEdge[93, 162], 
        DirectedEdge[100, 162], 
        DirectedEdge[28, 164], 
        DirectedEdge[14, 164], 
        DirectedEdge[72, 164], 
        DirectedEdge[165, 166], 
        DirectedEdge[161, 166], 
        DirectedEdge[93, 166], 
        DirectedEdge[100, 166], 
        DirectedEdge[62, 166], 
        DirectedEdge[53, 166], 
        DirectedEdge[16, 166], 
        DirectedEdge[14, 168], 
        DirectedEdge[72, 168], 
        DirectedEdge[169, 170], 
        DirectedEdge[165, 170], 
        DirectedEdge[161, 170], 
        DirectedEdge[169, 171], 
        DirectedEdge[165, 171], 
        DirectedEdge[161, 171], 
        DirectedEdge[93, 171], 
        DirectedEdge[62, 171], 
        DirectedEdge[49, 171], 
        DirectedEdge[39, 171], 
        DirectedEdge[169, 172], 
        DirectedEdge[165, 172], 
        DirectedEdge[161, 172], 
        DirectedEdge[99, 172], 
        DirectedEdge[93, 172], 
        DirectedEdge[100, 172], 
        DirectedEdge[62, 172], 
        DirectedEdge[53, 172], 
        DirectedEdge[16, 172], 
        DirectedEdge[169, 173], 
        DirectedEdge[165, 173], 
        DirectedEdge[161, 173], 
        DirectedEdge[118, 173], 
        DirectedEdge[62, 173], 
        DirectedEdge[46, 173], 
        DirectedEdge[18, 173], 
        DirectedEdge[175, 177], 
        DirectedEdge[174, 177], 
        DirectedEdge[167, 177], 
        DirectedEdge[163, 177], 
        DirectedEdge[175, 179], 
        DirectedEdge[176, 179], 
        DirectedEdge[174, 179], 
        DirectedEdge[167, 179], 
        DirectedEdge[163, 179], 
        DirectedEdge[102, 179], 
        DirectedEdge[67, 179], 
        DirectedEdge[66, 179], 
        DirectedEdge[56, 179], 
        DirectedEdge[42, 179], 
        DirectedEdge[178, 180], 
        DirectedEdge[176, 180], 
        DirectedEdge[121, 180], 
        DirectedEdge[68, 180], 
        DirectedEdge[66, 180], 
        DirectedEdge[51, 180], 
        DirectedEdge[43, 180], 
        DirectedEdge[178, 181], 
        DirectedEdge[175, 181], 
        DirectedEdge[174, 181], 
        DirectedEdge[167, 181], 
        DirectedEdge[163, 181], 
        DirectedEdge[122, 181], 
        DirectedEdge[68, 181], 
        DirectedEdge[67, 181], 
        DirectedEdge[57, 181], 
        DirectedEdge[27, 181], 
        DirectedEdge[13, 182], 
        DirectedEdge[28, 182], 
        DirectedEdge[14, 182], 
        DirectedEdge[72, 182], 
        DirectedEdge[183, 184], 
        DirectedEdge[165, 184], 
        DirectedEdge[161, 184], 
        DirectedEdge[93, 184], 
        DirectedEdge[62, 184], 
        DirectedEdge[49, 184], 
        DirectedEdge[39, 184], 
        DirectedEdge[183, 185], 
        DirectedEdge[161, 185], 
        DirectedEdge[93, 185], 
        DirectedEdge[183, 186], 
        DirectedEdge[100, 186], 
        DirectedEdge[53, 186], 
        DirectedEdge[49, 186], 
        DirectedEdge[39, 186], 
        DirectedEdge[35, 186], 
        DirectedEdge[16, 186], 
        DirectedEdge[188, 190], 
        DirectedEdge[187, 190], 
        DirectedEdge[176, 190], 
        DirectedEdge[174, 190], 
        DirectedEdge[189, 191], 
        DirectedEdge[187, 191], 
        DirectedEdge[176, 191], 
        DirectedEdge[174, 191], 
        DirectedEdge[167, 191], 
        DirectedEdge[163, 191], 
        DirectedEdge[102, 191], 
        DirectedEdge[67, 191], 
        DirectedEdge[66, 191], 
        DirectedEdge[56, 191], 
        DirectedEdge[42, 191], 
        DirectedEdge[189, 192], 
        DirectedEdge[188, 192], 
        DirectedEdge[163, 192], 
        DirectedEdge[102, 192], 
        DirectedEdge[28, 193], 
        DirectedEdge[72, 193], 
        DirectedEdge[194, 195], 
        DirectedEdge[165, 195], 
        DirectedEdge[62, 195], 
        DirectedEdge[194, 196], 
        DirectedEdge[183, 196], 
        DirectedEdge[165, 196], 
        DirectedEdge[161, 196], 
        DirectedEdge[93, 196], 
        DirectedEdge[62, 196], 
        DirectedEdge[49, 196], 
        DirectedEdge[194, 197], 
        DirectedEdge[165, 197], 
        DirectedEdge[161, 197], 
        DirectedEdge[93, 197], 
        DirectedEdge[100, 197], 
        DirectedEdge[62, 197], 
        DirectedEdge[53, 197], 
        DirectedEdge[199, 201], 
        DirectedEdge[198, 201], 
        DirectedEdge[188, 201], 
        DirectedEdge[187, 201], 
        DirectedEdge[176, 201], 
        DirectedEdge[174, 201], 
        DirectedEdge[66, 201], 
        DirectedEdge[200, 202], 
        DirectedEdge[198, 202], 
        DirectedEdge[167, 202], 
        DirectedEdge[67, 202], 
        DirectedEdge[200, 203], 
        DirectedEdge[199, 203], 
        DirectedEdge[189, 203], 
        DirectedEdge[187, 203], 
        DirectedEdge[176, 203], 
        DirectedEdge[174, 203], 
        DirectedEdge[167, 203], 
        DirectedEdge[163, 203], 
        DirectedEdge[102, 203], 
        DirectedEdge[67, 203], 
        DirectedEdge[66, 203], 
        DirectedEdge[56, 203], 
        DirectedEdge[72, 204], 
        DirectedEdge[205, 206], 
        DirectedEdge[194, 206], 
        DirectedEdge[169, 206], 
        DirectedEdge[205, 207], 
        DirectedEdge[169, 207], 
        DirectedEdge[165, 207], 
        DirectedEdge[161, 207], 
        DirectedEdge[62, 207], 
        DirectedEdge[205, 208], 
        DirectedEdge[169, 208], 
        DirectedEdge[165, 208], 
        DirectedEdge[161, 208], 
        DirectedEdge[93, 208], 
        DirectedEdge[62, 208], 
        DirectedEdge[49, 208], 
        DirectedEdge[205, 209], 
        DirectedEdge[169, 209], 
        DirectedEdge[165, 209], 
        DirectedEdge[161, 209], 
        DirectedEdge[99, 209], 
        DirectedEdge[93, 209], 
        DirectedEdge[100, 209], 
        DirectedEdge[62, 209], 
        DirectedEdge[53, 209], 
        DirectedEdge[205, 210], 
        DirectedEdge[169, 210], 
        DirectedEdge[165, 210], 
        DirectedEdge[161, 210], 
        DirectedEdge[118, 210], 
        DirectedEdge[62, 210], 
        DirectedEdge[46, 210], 
        DirectedEdge[212, 216], 
        DirectedEdge[211, 216], 
        DirectedEdge[198, 216], 
        DirectedEdge[174, 216], 
        DirectedEdge[213, 217], 
        DirectedEdge[211, 217], 
        DirectedEdge[199, 217], 
        DirectedEdge[187, 217], 
        DirectedEdge[214, 218], 
        DirectedEdge[211, 218], 
        DirectedEdge[200, 218], 
        DirectedEdge[175, 218], 
        DirectedEdge[213, 219], 
        DirectedEdge[212, 219], 
        DirectedEdge[176, 219], 
        DirectedEdge[66, 219], 
        DirectedEdge[214, 220], 
        DirectedEdge[212, 220], 
        DirectedEdge[175, 220], 
        DirectedEdge[174, 220], 
        DirectedEdge[167, 220], 
        DirectedEdge[163, 220], 
        DirectedEdge[67, 220], 
        DirectedEdge[215, 221], 
        DirectedEdge[212, 221], 
        DirectedEdge[178, 221], 
        DirectedEdge[68, 221], 
        DirectedEdge[214, 222], 
        DirectedEdge[213, 222], 
        DirectedEdge[175, 222], 
        DirectedEdge[176, 222], 
        DirectedEdge[174, 222], 
        DirectedEdge[167, 222], 
        DirectedEdge[163, 222], 
        DirectedEdge[102, 222], 
        DirectedEdge[67, 222], 
        DirectedEdge[66, 222], 
        DirectedEdge[56, 222], 
        DirectedEdge[215, 223], 
        DirectedEdge[213, 223], 
        DirectedEdge[178, 223], 
        DirectedEdge[176, 223], 
        DirectedEdge[121, 223], 
        DirectedEdge[68, 223], 
        DirectedEdge[66, 223], 
        DirectedEdge[51, 223], 
        DirectedEdge[215, 224], 
        DirectedEdge[214, 224], 
        DirectedEdge[178, 224], 
        DirectedEdge[175, 224], 
        DirectedEdge[174, 224], 
        DirectedEdge[167, 224], 
        DirectedEdge[163, 224], 
        DirectedEdge[122, 224], 
        DirectedEdge[68, 224], 
        DirectedEdge[67, 224], 
        DirectedEdge[57, 224], 
        DirectedEdge[21, 225], 
        DirectedEdge[28, 225], 
        DirectedEdge[14, 225], 
        DirectedEdge[72, 225], 
        DirectedEdge[226, 227], 
        DirectedEdge[194, 227], 
        DirectedEdge[31, 227], 
        DirectedEdge[226, 228], 
        DirectedEdge[194, 228], 
        DirectedEdge[165, 228], 
        DirectedEdge[82, 228], 
        DirectedEdge[62, 228], 
        DirectedEdge[226, 229], 
        DirectedEdge[194, 229], 
        DirectedEdge[183, 229], 
        DirectedEdge[165, 229], 
        DirectedEdge[161, 229], 
        DirectedEdge[125, 229], 
        DirectedEdge[93, 229], 
        DirectedEdge[62, 229], 
        DirectedEdge[49, 229], 
        DirectedEdge[226, 230], 
        DirectedEdge[194, 230], 
        DirectedEdge[165, 230], 
        DirectedEdge[161, 230], 
        DirectedEdge[93, 230], 
        DirectedEdge[100, 230], 
        DirectedEdge[62, 230], 
        DirectedEdge[53, 230], 
        DirectedEdge[23, 230], 
        DirectedEdge[232, 235], 
        DirectedEdge[231, 235], 
        DirectedEdge[198, 235], 
        DirectedEdge[86, 235], 
        DirectedEdge[233, 236], 
        DirectedEdge[231, 236], 
        DirectedEdge[199, 236], 
        DirectedEdge[131, 236], 
        DirectedEdge[234, 237], 
        DirectedEdge[231, 237], 
        DirectedEdge[200, 237], 
        DirectedEdge[33, 237], 
        DirectedEdge[233, 238], 
        DirectedEdge[232, 238], 
        DirectedEdge[199, 238], 
        DirectedEdge[198, 238], 
        DirectedEdge[188, 238], 
        DirectedEdge[187, 238], 
        DirectedEdge[176, 238], 
        DirectedEdge[174, 238], 
        DirectedEdge[132, 238], 
        DirectedEdge[66, 238], 
        DirectedEdge[234, 239], 
        DirectedEdge[232, 239], 
        DirectedEdge[200, 239], 
        DirectedEdge[198, 239], 
        DirectedEdge[167, 239], 
        DirectedEdge[87, 239], 
        DirectedEdge[67, 239], 
        DirectedEdge[234, 240], 
        DirectedEdge[233, 240], 
        DirectedEdge[200, 240], 
        DirectedEdge[199, 240], 
        DirectedEdge[189, 240], 
        DirectedEdge[187, 240], 
        DirectedEdge[176, 240], 
        DirectedEdge[174, 240], 
        DirectedEdge[167, 240], 
        DirectedEdge[163, 240], 
        DirectedEdge[133, 240], 
        DirectedEdge[102, 240], 
        DirectedEdge[67, 240], 
        DirectedEdge[66, 240], 
        DirectedEdge[56, 240], 
        DirectedEdge[11, 241], 
        DirectedEdge[13, 241], 
        DirectedEdge[28, 241], 
        DirectedEdge[14, 241], 
        DirectedEdge[72, 241], 
        DirectedEdge[242, 243], 
        DirectedEdge[194, 243], 
        DirectedEdge[165, 243], 
        DirectedEdge[161, 243], 
        DirectedEdge[118, 243], 
        DirectedEdge[62, 243], 
        DirectedEdge[46, 243], 
        DirectedEdge[242, 244], 
        DirectedEdge[194, 244], 
        DirectedEdge[18, 244], 
        DirectedEdge[242, 245], 
        DirectedEdge[194, 245], 
        DirectedEdge[165, 245], 
        DirectedEdge[62, 245], 
        DirectedEdge[46, 245], 
        DirectedEdge[242, 246], 
        DirectedEdge[226, 246], 
        DirectedEdge[74, 246], 
        DirectedEdge[242, 247], 
        DirectedEdge[194, 247], 
        DirectedEdge[183, 247], 
        DirectedEdge[165, 247], 
        DirectedEdge[161, 247], 
        DirectedEdge[93, 247], 
        DirectedEdge[62, 247], 
        DirectedEdge[49, 247], 
        DirectedEdge[39, 247], 
        DirectedEdge[20, 247], 
        DirectedEdge[18, 247], 
        DirectedEdge[242, 248], 
        DirectedEdge[194, 248], 
        DirectedEdge[165, 248], 
        DirectedEdge[161, 248], 
        DirectedEdge[93, 248], 
        DirectedEdge[100, 248], 
        DirectedEdge[62, 248], 
        DirectedEdge[53, 248], 
        DirectedEdge[25, 248], 
        DirectedEdge[250, 255], 
        DirectedEdge[249, 255], 
        DirectedEdge[215, 255], 
        DirectedEdge[211, 255], 
        DirectedEdge[251, 256], 
        DirectedEdge[249, 256], 
        DirectedEdge[215, 256], 
        DirectedEdge[211, 256], 
        DirectedEdge[198, 256], 
        DirectedEdge[178, 256], 
        DirectedEdge[174, 256], 
        DirectedEdge[68, 256], 
        DirectedEdge[253, 257], 
        DirectedEdge[249, 257], 
        DirectedEdge[215, 257], 
        DirectedEdge[211, 257], 
        DirectedEdge[199, 257], 
        DirectedEdge[187, 257], 
        DirectedEdge[178, 257], 
        DirectedEdge[176, 257], 
        DirectedEdge[121, 257], 
        DirectedEdge[68, 257], 
        DirectedEdge[66, 257], 
        DirectedEdge[51, 257], 
        DirectedEdge[254, 258], 
        DirectedEdge[249, 258], 
        DirectedEdge[215, 258], 
        DirectedEdge[211, 258], 
        DirectedEdge[200, 258], 
        DirectedEdge[178, 258], 
        DirectedEdge[174, 258], 
        DirectedEdge[167, 258], 
        DirectedEdge[163, 258], 
        DirectedEdge[122, 258], 
        DirectedEdge[68, 258], 
        DirectedEdge[67, 258], 
        DirectedEdge[57, 258], 
        DirectedEdge[251, 259], 
        DirectedEdge[250, 259], 
        DirectedEdge[198, 259], 
        DirectedEdge[68, 259], 
        DirectedEdge[252, 260], 
        DirectedEdge[250, 260], 
        DirectedEdge[231, 260], 
        DirectedEdge[77, 260], 
        DirectedEdge[253, 261], 
        DirectedEdge[250, 261], 
        DirectedEdge[199, 261], 
        DirectedEdge[43, 261], 
        DirectedEdge[254, 262], 
        DirectedEdge[250, 262], 
        DirectedEdge[200, 262], 
        DirectedEdge[27, 262], 
        DirectedEdge[252, 263], 
        DirectedEdge[251, 263], 
        DirectedEdge[232, 263], 
        DirectedEdge[88, 263], 
        DirectedEdge[253, 264], 
        DirectedEdge[251, 264], 
        DirectedEdge[199, 264], 
        DirectedEdge[198, 264], 
        DirectedEdge[188, 264], 
        DirectedEdge[187, 264], 
        DirectedEdge[176, 264], 
        DirectedEdge[174, 264], 
        DirectedEdge[66, 264], 
        DirectedEdge[51, 264], 
        DirectedEdge[254, 265], 
        DirectedEdge[251, 265], 
        DirectedEdge[200, 265], 
        DirectedEdge[198, 265], 
        DirectedEdge[167, 265], 
        DirectedEdge[67, 265], 
        DirectedEdge[57, 265], 
        DirectedEdge[253, 266], 
        DirectedEdge[252, 266], 
        DirectedEdge[233, 266], 
        DirectedEdge[134, 266], 
        DirectedEdge[254, 267], 
        DirectedEdge[252, 267], 
        DirectedEdge[234, 267], 
        DirectedEdge[78, 267], 
        DirectedEdge[254, 268], 
        DirectedEdge[253, 268], 
        DirectedEdge[200, 268], 
        DirectedEdge[199, 268], 
        DirectedEdge[189, 268], 
        DirectedEdge[187, 268], 
        DirectedEdge[176, 268], 
        DirectedEdge[174, 268], 
        DirectedEdge[167, 268], 
        DirectedEdge[163, 268], 
        DirectedEdge[102, 268], 
        DirectedEdge[67, 268], 
        DirectedEdge[66, 268], 
        DirectedEdge[56, 268], 
        DirectedEdge[43, 268], 
        DirectedEdge[42, 268], 
        DirectedEdge[37, 268], 
        DirectedEdge[27, 268], 
        DirectedEdge[28, 269], 
        DirectedEdge[47, 269], 
        DirectedEdge[14, 269], 
        DirectedEdge[72, 269], 
        DirectedEdge[270, 271], 
        DirectedEdge[194, 271], 
        DirectedEdge[145, 271], 
        DirectedEdge[270, 272], 
        DirectedEdge[226, 272], 
        DirectedEdge[145, 272], 
        DirectedEdge[111, 272], 
        DirectedEdge[31, 272], 
        DirectedEdge[270, 273], 
        DirectedEdge[194, 273], 
        DirectedEdge[183, 273], 
        DirectedEdge[165, 273], 
        DirectedEdge[161, 273], 
        DirectedEdge[145, 273], 
        DirectedEdge[104, 273], 
        DirectedEdge[93, 273], 
        DirectedEdge[62, 273], 
        DirectedEdge[49, 273], 
        DirectedEdge[39, 273], 
        DirectedEdge[270, 274], 
        DirectedEdge[194, 274], 
        DirectedEdge[165, 274], 
        DirectedEdge[161, 274], 
        DirectedEdge[145, 274], 
        DirectedEdge[93, 274], 
        DirectedEdge[100, 274], 
        DirectedEdge[62, 274], 
        DirectedEdge[60, 274], 
        DirectedEdge[53, 274], 
        DirectedEdge[16, 274], 
        DirectedEdge[270, 275], 
        DirectedEdge[242, 275], 
        DirectedEdge[145, 275], 
        DirectedEdge[95, 275], 
        DirectedEdge[18, 275], 
        DirectedEdge[277, 281], 
        DirectedEdge[276, 281], 
        DirectedEdge[231, 281], 
        DirectedEdge[150, 281], 
        DirectedEdge[278, 282], 
        DirectedEdge[276, 282], 
        DirectedEdge[199, 282], 
        DirectedEdge[151, 282], 
        DirectedEdge[279, 283], 
        DirectedEdge[276, 283], 
        DirectedEdge[200, 283], 
        DirectedEdge[152, 283], 
        DirectedEdge[280, 284], 
        DirectedEdge[276, 284], 
        DirectedEdge[250, 284], 
        DirectedEdge[153, 284], 
        DirectedEdge[278, 285], 
        DirectedEdge[277, 285], 
        DirectedEdge[233, 285], 
        DirectedEdge[151, 285], 
        DirectedEdge[150, 285], 
        DirectedEdge[135, 285], 
        DirectedEdge[131, 285], 
        DirectedEdge[279, 286], 
        DirectedEdge[277, 286], 
        DirectedEdge[234, 286], 
        DirectedEdge[152, 286], 
        DirectedEdge[150, 286], 
        DirectedEdge[114, 286], 
        DirectedEdge[33, 286], 
        DirectedEdge[280, 287], 
        DirectedEdge[277, 287], 
        DirectedEdge[252, 287], 
        DirectedEdge[153, 287], 
        DirectedEdge[150, 287], 
        DirectedEdge[115, 287], 
        DirectedEdge[77, 287], 
        DirectedEdge[279, 288], 
        DirectedEdge[278, 288], 
        DirectedEdge[200, 288], 
        DirectedEdge[199, 288], 
        DirectedEdge[189, 288], 
        DirectedEdge[187, 288], 
        DirectedEdge[176, 288], 
        DirectedEdge[174, 288], 
        DirectedEdge[167, 288], 
        DirectedEdge[163, 288], 
        DirectedEdge[152, 288], 
        DirectedEdge[151, 288], 
        DirectedEdge[107, 288], 
        DirectedEdge[102, 288], 
        DirectedEdge[67, 288], 
        DirectedEdge[66, 288], 
        DirectedEdge[56, 288], 
        DirectedEdge[42, 288], 
        DirectedEdge[280, 289], 
        DirectedEdge[278, 289], 
        DirectedEdge[253, 289], 
        DirectedEdge[153, 289], 
        DirectedEdge[151, 289], 
        DirectedEdge[108, 289], 
        DirectedEdge[43, 289], 
        DirectedEdge[280, 290], 
        DirectedEdge[279, 290], 
        DirectedEdge[254, 290], 
        DirectedEdge[153, 290], 
        DirectedEdge[152, 290], 
        DirectedEdge[97, 290], 
        DirectedEdge[27, 290], 
        DirectedEdge[47, 291], 
        DirectedEdge[14, 291], 
        DirectedEdge[72, 291], 
        DirectedEdge[292, 293], 
        DirectedEdge[205, 293], 
        DirectedEdge[145, 293], 
        DirectedEdge[292, 294], 
        DirectedEdge[270, 294], 
        DirectedEdge[205, 294], 
        DirectedEdge[194, 294], 
        DirectedEdge[169, 294], 
        DirectedEdge[292, 295], 
        DirectedEdge[205, 295], 
        DirectedEdge[169, 295], 
        DirectedEdge[165, 295], 
        DirectedEdge[161, 295], 
        DirectedEdge[145, 295], 
        DirectedEdge[104, 295], 
        DirectedEdge[93, 295], 
        DirectedEdge[62, 295], 
        DirectedEdge[49, 295], 
        DirectedEdge[39, 295], 
        DirectedEdge[292, 296], 
        DirectedEdge[205, 296], 
        DirectedEdge[169, 296], 
        DirectedEdge[165, 296], 
        DirectedEdge[161, 296], 
        DirectedEdge[145, 296], 
        DirectedEdge[99, 296], 
        DirectedEdge[93, 296], 
        DirectedEdge[100, 296], 
        DirectedEdge[62, 296], 
        DirectedEdge[60, 296], 
        DirectedEdge[53, 296], 
        DirectedEdge[16, 296], 
        DirectedEdge[292, 297], 
        DirectedEdge[205, 297], 
        DirectedEdge[169, 297], 
        DirectedEdge[165, 297], 
        DirectedEdge[161, 297], 
        DirectedEdge[145, 297], 
        DirectedEdge[118, 297], 
        DirectedEdge[95, 297], 
        DirectedEdge[62, 297], 
        DirectedEdge[46, 297], 
        DirectedEdge[18, 297], 
        DirectedEdge[299, 303], 
        DirectedEdge[298, 303], 
        DirectedEdge[276, 303], 
        DirectedEdge[211, 303], 
        DirectedEdge[300, 304], 
        DirectedEdge[298, 304], 
        DirectedEdge[213, 304], 
        DirectedEdge[151, 304], 
        DirectedEdge[301, 305], 
        DirectedEdge[298, 305], 
        DirectedEdge[214, 305], 
        DirectedEdge[152, 305], 
        DirectedEdge[302, 306], 
        DirectedEdge[298, 306], 
        DirectedEdge[215, 306], 
        DirectedEdge[153, 306], 
        DirectedEdge[300, 307], 
        DirectedEdge[299, 307], 
        DirectedEdge[278, 307], 
        DirectedEdge[213, 307], 
        DirectedEdge[211, 307], 
        DirectedEdge[199, 307], 
        DirectedEdge[187, 307], 
        DirectedEdge[301, 308], 
        DirectedEdge[299, 308], 
        DirectedEdge[279, 308], 
        DirectedEdge[214, 308], 
        DirectedEdge[211, 308], 
        DirectedEdge[200, 308], 
        DirectedEdge[175, 308], 
        DirectedEdge[302, 309], 
        DirectedEdge[299, 309], 
        DirectedEdge[280, 309], 
        DirectedEdge[249, 309], 
        DirectedEdge[301, 310], 
        DirectedEdge[300, 310], 
        DirectedEdge[214, 310], 
        DirectedEdge[213, 310], 
        DirectedEdge[175, 310], 
        DirectedEdge[176, 310], 
        DirectedEdge[174, 310], 
        DirectedEdge[167, 310], 
        DirectedEdge[163, 310], 
        DirectedEdge[152, 310], 
        DirectedEdge[151, 310], 
        DirectedEdge[107, 310], 
        DirectedEdge[102, 310], 
        DirectedEdge[67, 310], 
        DirectedEdge[66, 310], 
        DirectedEdge[56, 310], 
        DirectedEdge[42, 310], 
        DirectedEdge[302, 311], 
        DirectedEdge[300, 311], 
        DirectedEdge[215, 311], 
        DirectedEdge[213, 311], 
        DirectedEdge[178, 311], 
        DirectedEdge[176, 311], 
        DirectedEdge[153, 311], 
        DirectedEdge[151, 311], 
        DirectedEdge[121, 311], 
        DirectedEdge[108, 311], 
        DirectedEdge[68, 311], 
        DirectedEdge[66, 311], 
        DirectedEdge[51, 311], 
        DirectedEdge[43, 311], 
        DirectedEdge[302, 312], 
        DirectedEdge[301, 312], 
        DirectedEdge[215, 312], 
        DirectedEdge[214, 312], 
        DirectedEdge[178, 312], 
        DirectedEdge[175, 312], 
        DirectedEdge[174, 312], 
        DirectedEdge[167, 312], 
        DirectedEdge[163, 312], 
        DirectedEdge[153, 312], 
        DirectedEdge[152, 312], 
        DirectedEdge[122, 312], 
        DirectedEdge[97, 312], 
        DirectedEdge[68, 312], 
        DirectedEdge[67, 312], 
        DirectedEdge[57, 312], 
        DirectedEdge[27, 312], 
        DirectedEdge[21, 313], 
        DirectedEdge[14, 313], 
        DirectedEdge[72, 313], 
        DirectedEdge[314, 315], 
        DirectedEdge[205, 315], 
        DirectedEdge[31, 315], 
        DirectedEdge[314, 316], 
        DirectedEdge[292, 316], 
        DirectedEdge[145, 316], 
        DirectedEdge[111, 316], 
        DirectedEdge[31, 316], 
        DirectedEdge[314, 317], 
        DirectedEdge[226, 317], 
        DirectedEdge[205, 317], 
        DirectedEdge[194, 317], 
        DirectedEdge[169, 317], 
        DirectedEdge[314, 318], 
        DirectedEdge[205, 318], 
        DirectedEdge[169, 318], 
        DirectedEdge[165, 318], 
        DirectedEdge[161, 318], 
        DirectedEdge[82, 318], 
        DirectedEdge[62, 318], 
        DirectedEdge[314, 319], 
        DirectedEdge[205, 319], 
        DirectedEdge[169, 319], 
        DirectedEdge[165, 319], 
        DirectedEdge[161, 319], 
        DirectedEdge[125, 319], 
        DirectedEdge[93, 319], 
        DirectedEdge[62, 319], 
        DirectedEdge[49, 319], 
        DirectedEdge[314, 320], 
        DirectedEdge[205, 320], 
        DirectedEdge[169, 320], 
        DirectedEdge[165, 320], 
        DirectedEdge[161, 320], 
        DirectedEdge[99, 320], 
        DirectedEdge[93, 320], 
        DirectedEdge[100, 320], 
        DirectedEdge[62, 320], 
        DirectedEdge[53, 320], 
        DirectedEdge[23, 320], 
        DirectedEdge[314, 321], 
        DirectedEdge[205, 321], 
        DirectedEdge[169, 321], 
        DirectedEdge[165, 321], 
        DirectedEdge[161, 321], 
        DirectedEdge[118, 321], 
        DirectedEdge[74, 321], 
        DirectedEdge[62, 321], 
        DirectedEdge[46, 321], 
        DirectedEdge[323, 329], 
        DirectedEdge[322, 329], 
        DirectedEdge[298, 329], 
        DirectedEdge[150, 329], 
        DirectedEdge[324, 330], 
        DirectedEdge[322, 330], 
        DirectedEdge[231, 330], 
        DirectedEdge[211, 330], 
        DirectedEdge[325, 331], 
        DirectedEdge[322, 331], 
        DirectedEdge[212, 331], 
        DirectedEdge[86, 331], 
        DirectedEdge[326, 332], 
        DirectedEdge[322, 332], 
        DirectedEdge[213, 332], 
        DirectedEdge[131, 332], 
        DirectedEdge[327, 333], 
        DirectedEdge[322, 333], 
        DirectedEdge[214, 333], 
        DirectedEdge[33, 333], 
        DirectedEdge[328, 334], 
        DirectedEdge[322, 334], 
        DirectedEdge[215, 334], 
        DirectedEdge[77, 334], 
        DirectedEdge[324, 335], 
        DirectedEdge[323, 335], 
        DirectedEdge[299, 335], 
        DirectedEdge[277, 335], 
        DirectedEdge[326, 336], 
        DirectedEdge[323, 336], 
        DirectedEdge[300, 336], 
        DirectedEdge[151, 336], 
        DirectedEdge[150, 336], 
        DirectedEdge[135, 336], 
        DirectedEdge[131, 336], 
        DirectedEdge[327, 337], 
        DirectedEdge[323, 337], 
        DirectedEdge[301, 337], 
        DirectedEdge[152, 337], 
        DirectedEdge[150, 337], 
        DirectedEdge[114, 337], 
        DirectedEdge[33, 337], 
        DirectedEdge[328, 338], 
        DirectedEdge[323, 338], 
        DirectedEdge[302, 338], 
        DirectedEdge[153, 338], 
        DirectedEdge[150, 338], 
        DirectedEdge[115, 338], 
        DirectedEdge[77, 338], 
        DirectedEdge[325, 339], 
        DirectedEdge[324, 339], 
        DirectedEdge[232, 339], 
        DirectedEdge[212, 339], 
        DirectedEdge[211, 339], 
        DirectedEdge[198, 339], 
        DirectedEdge[174, 339], 
        DirectedEdge[326, 340], 
        DirectedEdge[324, 340], 
        DirectedEdge[233, 340], 
        DirectedEdge[213, 340], 
        DirectedEdge[211, 340], 
        DirectedEdge[199, 340], 
        DirectedEdge[187, 340], 
        DirectedEdge[327, 341], 
        DirectedEdge[324, 341], 
        DirectedEdge[234, 341], 
        DirectedEdge[214, 341], 
        DirectedEdge[211, 341], 
        DirectedEdge[200, 341], 
        DirectedEdge[175, 341], 
        DirectedEdge[328, 342], 
        DirectedEdge[324, 342], 
        DirectedEdge[252, 342], 
        DirectedEdge[249, 342], 
        DirectedEdge[326, 343], 
        DirectedEdge[325, 343], 
        DirectedEdge[213, 343], 
        DirectedEdge[212, 343], 
        DirectedEdge[176, 343], 
        DirectedEdge[132, 343], 
        DirectedEdge[66, 343], 
        DirectedEdge[327, 344], 
        DirectedEdge[325, 344], 
        DirectedEdge[214, 344], 
        DirectedEdge[212, 344], 
        DirectedEdge[175, 344], 
        DirectedEdge[174, 344], 
        DirectedEdge[167, 344], 
        DirectedEdge[163, 344], 
        DirectedEdge[87, 344], 
        DirectedEdge[67, 344], 
        DirectedEdge[328, 345], 
        DirectedEdge[325, 345], 
        DirectedEdge[215, 345], 
        DirectedEdge[212, 345], 
        DirectedEdge[178, 345], 
        DirectedEdge[88, 345], 
        DirectedEdge[68, 345], 
        DirectedEdge[327, 346], 
        DirectedEdge[326, 346], 
        DirectedEdge[214, 346], 
        DirectedEdge[213, 346], 
        DirectedEdge[175, 346], 
        DirectedEdge[176, 346], 
        DirectedEdge[174, 346], 
        DirectedEdge[167, 346], 
        DirectedEdge[163, 346], 
        DirectedEdge[133, 346], 
        DirectedEdge[102, 346], 
        DirectedEdge[67, 346], 
        DirectedEdge[66, 346], 
        DirectedEdge[56, 346], 
        DirectedEdge[328, 347], 
        DirectedEdge[326, 347], 
        DirectedEdge[215, 347], 
        DirectedEdge[213, 347], 
        DirectedEdge[178, 347], 
        DirectedEdge[176, 347], 
        DirectedEdge[134, 347], 
        DirectedEdge[121, 347], 
        DirectedEdge[68, 347], 
        DirectedEdge[66, 347], 
        DirectedEdge[51, 347], 
        DirectedEdge[328, 348], 
        DirectedEdge[327, 348], 
        DirectedEdge[215, 348], 
        DirectedEdge[214, 348], 
        DirectedEdge[178, 348], 
        DirectedEdge[175, 348], 
        DirectedEdge[174, 348], 
        DirectedEdge[167, 348], 
        DirectedEdge[163, 348], 
        DirectedEdge[122, 348], 
        DirectedEdge[78, 348], 
        DirectedEdge[68, 348], 
        DirectedEdge[67, 348], 
        DirectedEdge[57, 348], 
        DirectedEdge[29, 349], 
        DirectedEdge[47, 349], 
        DirectedEdge[14, 349], 
        DirectedEdge[350, 351], 
        DirectedEdge[292, 351], 
        DirectedEdge[205, 351], 
        DirectedEdge[169, 351], 
        DirectedEdge[165, 351], 
        DirectedEdge[161, 351], 
        DirectedEdge[62, 351], 
        DirectedEdge[350, 352], 
        DirectedEdge[145, 352], 
        DirectedEdge[62, 352], 
        DirectedEdge[350, 353], 
        DirectedEdge[270, 353], 
        DirectedEdge[194, 353], 
        DirectedEdge[165, 353], 
        DirectedEdge[62, 353], 
        DirectedEdge[350, 354], 
        DirectedEdge[145, 354], 
        DirectedEdge[111, 354], 
        DirectedEdge[82, 354], 
        DirectedEdge[31, 354], 
        DirectedEdge[350, 355], 
        DirectedEdge[145, 355], 
        DirectedEdge[104, 355], 
        DirectedEdge[49, 355], 
        DirectedEdge[39, 355], 
        DirectedEdge[350, 356], 
        DirectedEdge[145, 356], 
        DirectedEdge[60, 356], 
        DirectedEdge[53, 356], 
        DirectedEdge[16, 356], 
        DirectedEdge[350, 357], 
        DirectedEdge[145, 357], 
        DirectedEdge[95, 357], 
        DirectedEdge[46, 357], 
        DirectedEdge[18, 357], 
        DirectedEdge[359, 365], 
        DirectedEdge[358, 365], 
        DirectedEdge[298, 365], 
        DirectedEdge[212, 365], 
        DirectedEdge[360, 366], 
        DirectedEdge[358, 366], 
        DirectedEdge[299, 366], 
        DirectedEdge[212, 366], 
        DirectedEdge[211, 366], 
        DirectedEdge[198, 366], 
        DirectedEdge[174, 366], 
        DirectedEdge[361, 367], 
        DirectedEdge[358, 367], 
        DirectedEdge[325, 367], 
        DirectedEdge[323, 367], 
        DirectedEdge[362, 368], 
        DirectedEdge[358, 368], 
        DirectedEdge[300, 368], 
        DirectedEdge[213, 368], 
        DirectedEdge[212, 368], 
        DirectedEdge[176, 368], 
        DirectedEdge[66, 368], 
        DirectedEdge[363, 369], 
        DirectedEdge[358, 369], 
        DirectedEdge[301, 369], 
        DirectedEdge[214, 369], 
        DirectedEdge[212, 369], 
        DirectedEdge[175, 369], 
        DirectedEdge[174, 369], 
        DirectedEdge[167, 369], 
        DirectedEdge[163, 369], 
        DirectedEdge[67, 369], 
        DirectedEdge[364, 370], 
        DirectedEdge[358, 370], 
        DirectedEdge[302, 370], 
        DirectedEdge[215, 370], 
        DirectedEdge[212, 370], 
        DirectedEdge[178, 370], 
        DirectedEdge[68, 370], 
        DirectedEdge[360, 371], 
        DirectedEdge[359, 371], 
        DirectedEdge[276, 371], 
        DirectedEdge[198, 371], 
        DirectedEdge[361, 372], 
        DirectedEdge[359, 372], 
        DirectedEdge[150, 372], 
        DirectedEdge[86, 372], 
        DirectedEdge[362, 373], 
        DirectedEdge[359, 373], 
        DirectedEdge[151, 373], 
        DirectedEdge[66, 373], 
        DirectedEdge[363, 374], 
        DirectedEdge[359, 374], 
        DirectedEdge[152, 374], 
        DirectedEdge[67, 374], 
        DirectedEdge[364, 375], 
        DirectedEdge[359, 375], 
        DirectedEdge[153, 375], 
        DirectedEdge[68, 375], 
        DirectedEdge[361, 376], 
        DirectedEdge[360, 376], 
        DirectedEdge[277, 376], 
        DirectedEdge[232, 376], 
        DirectedEdge[362, 377], 
        DirectedEdge[360, 377], 
        DirectedEdge[278, 377], 
        DirectedEdge[199, 377], 
        DirectedEdge[198, 377], 
        DirectedEdge[188, 377], 
        DirectedEdge[187, 377], 
        DirectedEdge[176, 377], 
        DirectedEdge[174, 377], 
        DirectedEdge[66, 377], 
        DirectedEdge[363, 378], 
        DirectedEdge[360, 378], 
        DirectedEdge[279, 378], 
        DirectedEdge[200, 378], 
        DirectedEdge[198, 378], 
        DirectedEdge[167, 378], 
        DirectedEdge[67, 378], 
        DirectedEdge[364, 379], 
        DirectedEdge[360, 379], 
        DirectedEdge[280, 379], 
        DirectedEdge[251, 379], 
        DirectedEdge[362, 380], 
        DirectedEdge[361, 380], 
        DirectedEdge[151, 380], 
        DirectedEdge[150, 380], 
        DirectedEdge[132, 380], 
        DirectedEdge[135, 380], 
        DirectedEdge[131, 380], 
        DirectedEdge[363, 381], 
        DirectedEdge[361, 381], 
        DirectedEdge[152, 381], 
        DirectedEdge[150, 381], 
        DirectedEdge[114, 381], 
        DirectedEdge[87, 381], 
        DirectedEdge[33, 381], 
        DirectedEdge[364, 382], 
        DirectedEdge[361, 382], 
        DirectedEdge[153, 382], 
        DirectedEdge[150, 382], 
        DirectedEdge[115, 382], 
        DirectedEdge[88, 382], 
        DirectedEdge[77, 382], 
        DirectedEdge[363, 383], 
        DirectedEdge[362, 383], 
        DirectedEdge[152, 383], 
        DirectedEdge[151, 383], 
        DirectedEdge[107, 383], 
        DirectedEdge[56, 383], 
        DirectedEdge[42, 383], 
        DirectedEdge[364, 384], 
        DirectedEdge[362, 384], 
        DirectedEdge[153, 384], 
        DirectedEdge[151, 384], 
        DirectedEdge[108, 384], 
        DirectedEdge[51, 384], 
        DirectedEdge[43, 384], 
        DirectedEdge[364, 385], 
        DirectedEdge[363, 385], 
        DirectedEdge[153, 385], 
        DirectedEdge[152, 385], 
        DirectedEdge[97, 385], 
        DirectedEdge[57, 385], 
        DirectedEdge[27, 385]}|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.823021649898766*^9},
 CellID->806379295]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   InterpretationBox[
    TagBox[
     DynamicModuleBox[{Typeset`open = False}, 
      FrameBox[
       PaneSelectorBox[{False->GridBox[{
          {
           PaneBox[GridBox[{
              {
               StyleBox[
                StyleBox[
                 AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                  BoxBaselineShift->-0.25,
                  BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                 
                 FontColor->RGBColor[
                  0.8745098039215686, 0.2784313725490196, 
                   0.03137254901960784]],
                ShowStringCharacters->False,
                FontFamily->"Source Sans Pro Black",
                FontSize->0.6538461538461539 Inherited,
                FontWeight->"Heavy",
                PrivateFontOptions->{"OperatorSubstitution"->False}], 
               StyleBox[
                RowBox[{
                 StyleBox["PersistentHomology", "ResourceFunctionLabel"], 
                 " "}],
                ShowAutoStyles->False,
                ShowStringCharacters->False,
                FontSize->Rational[12, 13] Inherited,
                FontColor->GrayLevel[0.1]]}
             },
             GridBoxSpacings->{"Columns" -> {{0.25}}}],
            Alignment->Left,
            BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
            BaselinePosition->Baseline,
            FrameMargins->{{3, 0}, {0, 0}}], 
           ItemBox[
            PaneBox[
             TogglerBox[Dynamic[Typeset`open], {True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "IconizeCloser"],
               ImageSizeCache->{11., {1., 10.}}], False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "IconizeOpener"],
               ImageSizeCache->{11., {1., 10.}}]},
              Appearance->None,
              BaselinePosition->Baseline,
              ContentPadding->False,
              FrameMargins->0],
             Alignment->Left,
             BaselinePosition->Baseline,
             FrameMargins->{{1, 1}, {0, 0}}],
            Frame->{{
               RGBColor[
               0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                0.5], False}, {False, False}}]}
         },
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
        GridBox[{
          {GridBox[{
             {
              PaneBox[GridBox[{
                 {
                  StyleBox[
                   StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                   ShowStringCharacters->False,
                   FontFamily->"Source Sans Pro Black",
                   FontSize->0.6538461538461539 Inherited,
                   FontWeight->"Heavy",
                   PrivateFontOptions->{"OperatorSubstitution"->False}], 
                  StyleBox[
                   RowBox[{
                    StyleBox["PersistentHomology", "ResourceFunctionLabel"], 
                    " "}],
                   ShowAutoStyles->False,
                   ShowStringCharacters->False,
                   FontSize->Rational[12, 13] Inherited,
                   FontColor->GrayLevel[0.1]]}
                },
                GridBoxSpacings->{"Columns" -> {{0.25}}}],
               Alignment->Left,
               BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
               BaselinePosition->Baseline,
               FrameMargins->{{3, 0}, {0, 0}}], 
              ItemBox[
               PaneBox[
                TogglerBox[Dynamic[Typeset`open], {True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "IconizeCloser"]], False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "IconizeOpener"]]},
                 Appearance->None,
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0],
                Alignment->Left,
                BaselinePosition->Baseline,
                FrameMargins->{{1, 1}, {0, 0}}],
               Frame->{{
                  RGBColor[
                  0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                   0.5], False}, {False, False}}]}
            },
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
          {
           StyleBox[
            PaneBox[GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Version (latest): \"\>",
                  "IconizedLabel"], " ", 
                 TagBox["\<\"1.0.1\"\>",
                  "IconizedItem"]}]},
               {
                TagBox[
                 
                 TemplateBox[{
                  "\"Documentation \[RightGuillemet]\"", 
                   "https://resources.wolframcloud.com/FunctionRepository/\
resources/PersistentHomology"},
                  "HyperlinkURL"],
                 "IconizedItem"]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             Alignment->Left,
             BaselinePosition->Baseline,
             FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
            FontFamily->"Roboto",
            FontSize->11]}
         },
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
              GrayLevel[0.8]}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open],
        BaselinePosition->Baseline,
        ImageSize->Automatic],
       Background->RGBColor[
        0.9686274509803922, 0.9764705882352941, 0.984313725490196],
       BaselinePosition->Baseline,
       DefaultBaseStyle->{},
       FrameMargins->{{0, 0}, {1, 0}},
       FrameStyle->RGBColor[
        0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
       RoundingRadius->4]],
     {"FunctionResourceBox", 
      RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
      "PersistentHomology"},
     TagBoxNote->"FunctionResourceBox"],
    ResourceFunction["PersistentHomology"],
    BoxID -> "PersistentHomology",
    Selectable->False], "[", 
   RowBox[{"data", "\[LeftDoubleBracket]", 
    RowBox[{"1", ";;", "15"}], "\[RightDoubleBracket]"}], "]"}], 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8044949023566437`*^9, 3.8044949028164663`*^9}, 
   3.823021623076288*^9},
 CellID->389359194],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"22.7267177`", ",", 
   TagBox[
    TemplateBox[{
      RowBox[{
        StyleBox[
         TagBox["PersistentHomologyObject", "SummaryHead"], 
         "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{
         Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
         TemplateBox[{
           TemplateBox[{
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[
                    GraphicsComplexBox[CompressedData["
1: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
DD7UNnFU6mGhG2+T145RH+SY9ZrzutlY7vy4V2ngKex2UAy4ntEDQ02/GiX9
uKDJkxbtMe2FnIE50gkPudC2yslK4U8vuN6sNTtygQs/bOInhsL7oH7xMpH5
+7lwbMI9rWBHP9j/elIzto4Ll5b2/DvS2g+9zSapiqJcyHELv6J/bQB6/5yh
fejhwNU9a713TQzAq5uXer3SOCCd1ZT4e5IEwwV3F73RYsFbYtPio/vJMLLR
fO8MwblvmZvRMhMfMhyJ/r1/YTsT+vpG+7sayVDt3Z3WHckE0a8R/0rmUaA7
Oumf62UmxF97+LHnEAVWe4QHrlVlQqhcYuJcdwoo+ob4MzkMMFzx1E+lmAJP
OM5No4Lzu/PamhCp6m4ItV2u09LCgSGFhxdOa/XAj6p/Tv2CcyO6d17KS+yB
343jjjHHOSBRFJTLV+yFXRmsOQdlOHA6amCsMKYXjOuKzbkDbBg02+Jet7EP
ajPeVeQlsqEjeJP/18w+UFDZ9aXyPhuIPzddcNbrh/Xha36rG7Khdd7JEBkF
EnhTNTbtaWZACvvN+uBrJNAx116zIZYBpxTHLBbkCtrPDc7GPmLA4CbFZ+Zi
ZEg4K6XXZMaAV38W9+07LpgfvcezC3cwYNUq5eQ4Qf0YSm1IfyjHAG5Oj7nh
TzJYO778IT+DAVfutr2eEtQb29zf6xTx6FCrrrpJn9gHZZcC51i3cUBWN/n9
tiUDsENcpnOpHwcub7w5sn7XINSfJDzw0ufA/Tei9ReshuDYjxADBpcNexLt
Y1fvIkCLiXjhlSA20C6/qPKuIoCLYp+97hY2KPgFPl9tSARH20Huu3oWyJR1
/A6oJoJVGdO/zpIFJZe/kOXfMcDN/l5Y3xoKUHYVqm+QZoLCTHkbqTQyPHE+
mejkzQSKpTbtvRYZhtXvz20ZZcKPubvnlgvmRaPGMpgneE7RxhzWF01BHi35
rhNayoIfzPK0yUQinPb9Xum7jA3K3j3HC+SIQH/aRv9wnQ2h/PYHh3wIsEp/
nVdGUA/0nv31bsZrNuipMFratXvhwOfvn4P/sUBSnkn4zBXk/wWJK8Z3WPAq
b7H60vQ+yFu7TNWLwYR59EEDk8f98ETfb56vDRN4xuvERc0F+c0L2JxOZcD6
BvM/sXsGweRgaubOmwxwcNLzz9AYAn6/6eM7Y4J6keK/lWZHg8W+RI/npYLx
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
                    "], {{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    Arrowheads[0.], {
                    ArrowBox[{1, 2}, 0.02254220222992223], 
                    ArrowBox[{1, 5}, 0.02254220222992223], 
                    ArrowBox[{1, 7}, 0.02254220222992223], 
                    ArrowBox[{1, 9}, 0.02254220222992223], 
                    ArrowBox[{1, 11}, 0.02254220222992223], 
                    ArrowBox[{1, 13}, 0.02254220222992223], 
                    ArrowBox[{1, 15}, 0.02254220222992223], 
                    ArrowBox[{1, 17}, 0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-2.1409496216940123`*^-16, -1.0434049156924905`}, 5}],
                     0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {1.0704748108470062`*^-15, -0.9225412836753133}, 5}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.19317181243605622`, -1.0333779239158283`}, 7}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.1495108326247347, -0.7998123114976872}, 7}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.3696769958201283, -0.9542463251548349}, 9}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.24459071364353785`, -0.6313614109083246}, 9}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.5056775470872312, -0.8166972803055038}, 11}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.272398578269021, -0.43993880945047653`}, 11}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.582805838183662, -0.6393075500603161}, 13}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.229178820294798, -0.251397190160288}, 13}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.590645266014236, -0.4460346004393019}, 15}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.12076850752425144`, -0.09120014346806327}, 15}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {-0.04103500681170743, -0.01167546606958506}, 4}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.5674671696890601, 0.16145833033997112`}, 4}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.15069014333422975`, 0.013963498134084052`}, 6}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.7369836857302795, 0.06829159554065786}, 6}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.33873038367193714`, -0.031387992444006356`}, 8}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.8613974228519735, -0.07982022606495483}, 8}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.49768983777687453`, -0.14160496769998895`}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.9239056164555438, -0.26287381225308243`}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.6061001505474233, -0.3018020143922123}, 12}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.9160661886249679, -0.45614676187410347`}, 12}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.6493199085216432, -0.4903436336824059}, 14}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.8389378975285393, -0.633536492119288}, 14}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.6215120438961692, -0.6817662351402451}, 16}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.7029373462614268, -0.7710855369686257}, 16}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.19172515014593514`, 1.0256389642036672`}, 6}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.16951651604121815`, 0.9068332652006886}, 6}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.37976539048364444`, 0.9802874736255784}, 8}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.2939302531629152, 0.7587214435950802}, 8}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.5387248445885809, 0.8700704983695936}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.35643844676648223`, 0.5756678574069446}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.6471351573591255, 0.7098734516773724}, 12}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.34859901893590606`, 0.3823949077859304}, 12}], 
                    0.02254220222992223], 
                    ArrowBox[
                    BezierCurveBox[{
                    4, {0.6903549153333459, 0.5213318323871787}, 14}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.27147072783947207`, 0.20500517754074105`}, 14}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.3769213302526145, -0.9729461079072422}, 7}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.33326035044130586`, -0.8602441275062771}, 7}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.5534265136367049, -0.8938145091462413}, 9}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.4283402314601095, -0.6917932269169124}, 9}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.6894270649037971, -0.7562654642969203}, 11}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.4561480960855884, -0.500370625459065}, 11}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.7665553560002341, -0.5788757340517223}, 13}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.41292833811137236`, -0.31182900616887055`}, 13}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5492819065248636, 0.887120738826274}, 8}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.4856554033088557, 0.7843604077987405}, 8}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.7082413606297987, 0.7769037635702826}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5481635969124143, 0.6013068216106137}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.8166516734003458, 0.616706716878059}, 12}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5403241690818401, 0.4080338719895959}, 12}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.7029373462614349, -0.7710855369686219}, 9}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.6215120438961611, -0.6817662351402489}, 9}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.8389378975285295, -0.6335364921192947}, 11}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.6493199085216452, -0.4903436336824001}, 11}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    8, {0.83265509775149, 0.6287919419646689}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    8, {0.7362038372501287, 0.5559553310325218}, 10}], 
                    0.02254220222992223]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    DiskBox[1, 0.02254220222992223], 
                    DiskBox[2, 0.02254220222992223], 
                    DiskBox[3, 0.02254220222992223], 
                    DiskBox[4, 0.02254220222992223], 
                    DiskBox[5, 0.02254220222992223], 
                    DiskBox[6, 0.02254220222992223], 
                    DiskBox[7, 0.02254220222992223], 
                    DiskBox[8, 0.02254220222992223], 
                    DiskBox[9, 0.02254220222992223], 
                    DiskBox[10, 0.02254220222992223], 
                    DiskBox[11, 0.02254220222992223], 
                    DiskBox[12, 0.02254220222992223], 
                    DiskBox[13, 0.02254220222992223], 
                    DiskBox[14, 0.02254220222992223], 
                    DiskBox[15, 0.02254220222992223], 
                    DiskBox[16, 0.02254220222992223], 
                    DiskBox[17, 0.02254220222992223]}}], {
                    Background -> GrayLevel[0, 0], FormatType -> 
                    TraditionalForm, FrameTicks -> None, ImageSize -> 32}], 
                   GridBox[{{
                    TagBox[
                    TemplateBox[{
                    StyleBox["\"Points: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox[
                    "\"\\!\\(\\*RowBox[{\\\"15\\\"}]\\)\"", 
                    StringForm["``", 15], Editable -> False]}, "RowDefault"], 
                    "SummaryItem"]}, {
                    TagBox[
                    TemplateBox[{
                    StyleBox["\"Dimensions: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox["\"\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\"", 
                    StringForm["``", 3], Editable -> False]}, "RowDefault"], 
                    "SummaryItem"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[
                    GraphicsComplexBox[CompressedData["
1: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
DD7UNnFU6mGhG2+T145RH+SY9ZrzutlY7vy4V2ngKex2UAy4ntEDQ02/GiX9
uKDJkxbtMe2FnIE50gkPudC2yslK4U8vuN6sNTtygQs/bOInhsL7oH7xMpH5
+7lwbMI9rWBHP9j/elIzto4Ll5b2/DvS2g+9zSapiqJcyHELv6J/bQB6/5yh
fejhwNU9a713TQzAq5uXer3SOCCd1ZT4e5IEwwV3F73RYsFbYtPio/vJMLLR
fO8MwblvmZvRMhMfMhyJ/r1/YTsT+vpG+7sayVDt3Z3WHckE0a8R/0rmUaA7
Oumf62UmxF97+LHnEAVWe4QHrlVlQqhcYuJcdwoo+ob4MzkMMFzx1E+lmAJP
OM5No4Lzu/PamhCp6m4ItV2u09LCgSGFhxdOa/XAj6p/Tv2CcyO6d17KS+yB
343jjjHHOSBRFJTLV+yFXRmsOQdlOHA6amCsMKYXjOuKzbkDbBg02+Jet7EP
ajPeVeQlsqEjeJP/18w+UFDZ9aXyPhuIPzddcNbrh/Xha36rG7Khdd7JEBkF
EnhTNTbtaWZACvvN+uBrJNAx116zIZYBpxTHLBbkCtrPDc7GPmLA4CbFZ+Zi
ZEg4K6XXZMaAV38W9+07LpgfvcezC3cwYNUq5eQ4Qf0YSm1IfyjHAG5Oj7nh
TzJYO778IT+DAVfutr2eEtQb29zf6xTx6FCrrrpJn9gHZZcC51i3cUBWN/n9
tiUDsENcpnOpHwcub7w5sn7XINSfJDzw0ufA/Tei9ReshuDYjxADBpcNexLt
Y1fvIkCLiXjhlSA20C6/qPKuIoCLYp+97hY2KPgFPl9tSARH20Huu3oWyJR1
/A6oJoJVGdO/zpIFJZe/kOXfMcDN/l5Y3xoKUHYVqm+QZoLCTHkbqTQyPHE+
mejkzQSKpTbtvRYZhtXvz20ZZcKPubvnlgvmRaPGMpgneE7RxhzWF01BHi35
rhNayoIfzPK0yUQinPb9Xum7jA3K3j3HC+SIQH/aRv9wnQ2h/PYHh3wIsEp/
nVdGUA/0nv31bsZrNuipMFratXvhwOfvn4P/sUBSnkn4zBXk/wWJK8Z3WPAq
b7H60vQ+yFu7TNWLwYR59EEDk8f98ETfb56vDRN4xuvERc0F+c0L2JxOZcD6
BvM/sXsGweRgaubOmwxwcNLzz9AYAn6/6eM7Y4J6keK/lWZHg8W+RI/npYLx
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
                    "], {{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    Arrowheads[0.], {
                    ArrowBox[{1, 2}, 0.02254220222992223], 
                    ArrowBox[{1, 5}, 0.02254220222992223], 
                    ArrowBox[{1, 7}, 0.02254220222992223], 
                    ArrowBox[{1, 9}, 0.02254220222992223], 
                    ArrowBox[{1, 11}, 0.02254220222992223], 
                    ArrowBox[{1, 13}, 0.02254220222992223], 
                    ArrowBox[{1, 15}, 0.02254220222992223], 
                    ArrowBox[{1, 17}, 0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-2.1409496216940123`*^-16, -1.0434049156924905`}, 5}],
                     0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {1.0704748108470062`*^-15, -0.9225412836753133}, 5}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.19317181243605622`, -1.0333779239158283`}, 7}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.1495108326247347, -0.7998123114976872}, 7}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.3696769958201283, -0.9542463251548349}, 9}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.24459071364353785`, -0.6313614109083246}, 9}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.5056775470872312, -0.8166972803055038}, 11}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.272398578269021, -0.43993880945047653`}, 11}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.582805838183662, -0.6393075500603161}, 13}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.229178820294798, -0.251397190160288}, 13}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.590645266014236, -0.4460346004393019}, 15}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.12076850752425144`, -0.09120014346806327}, 15}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {-0.04103500681170743, -0.01167546606958506}, 4}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.5674671696890601, 0.16145833033997112`}, 4}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.15069014333422975`, 0.013963498134084052`}, 6}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.7369836857302795, 0.06829159554065786}, 6}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.33873038367193714`, -0.031387992444006356`}, 8}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.8613974228519735, -0.07982022606495483}, 8}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.49768983777687453`, -0.14160496769998895`}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.9239056164555438, -0.26287381225308243`}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.6061001505474233, -0.3018020143922123}, 12}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.9160661886249679, -0.45614676187410347`}, 12}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.6493199085216432, -0.4903436336824059}, 14}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.8389378975285393, -0.633536492119288}, 14}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.6215120438961692, -0.6817662351402451}, 16}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.7029373462614268, -0.7710855369686257}, 16}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.19172515014593514`, 1.0256389642036672`}, 6}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.16951651604121815`, 0.9068332652006886}, 6}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.37976539048364444`, 0.9802874736255784}, 8}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.2939302531629152, 0.7587214435950802}, 8}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.5387248445885809, 0.8700704983695936}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.35643844676648223`, 0.5756678574069446}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.6471351573591255, 0.7098734516773724}, 12}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.34859901893590606`, 0.3823949077859304}, 12}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.6903549153333459, 0.5213318323871787}, 14}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.27147072783947207`, 0.20500517754074105`}, 14}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.3769213302526145, -0.9729461079072422}, 7}], 
                    0.02254220222992223], 
                    ArrowBox[
                    BezierCurveBox[{
                    5, {-0.33326035044130586`, -0.8602441275062771}, 7}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.5534265136367049, -0.8938145091462413}, 9}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.4283402314601095, -0.6917932269169124}, 9}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.6894270649037971, -0.7562654642969203}, 11}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.4561480960855884, -0.500370625459065}, 11}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.7665553560002341, -0.5788757340517223}, 13}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.41292833811137236`, -0.31182900616887055`}, 13}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5492819065248636, 0.887120738826274}, 8}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.4856554033088557, 0.7843604077987405}, 8}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.7082413606297987, 0.7769037635702826}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5481635969124143, 0.6013068216106137}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.8166516734003458, 0.616706716878059}, 12}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5403241690818401, 0.4080338719895959}, 12}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.7029373462614349, -0.7710855369686219}, 9}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.6215120438961611, -0.6817662351402489}, 9}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.8389378975285295, -0.6335364921192947}, 11}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.6493199085216452, -0.4903436336824001}, 11}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    8, {0.83265509775149, 0.6287919419646689}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    8, {0.7362038372501287, 0.5559553310325218}, 10}], 
                    0.02254220222992223]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    DiskBox[1, 0.02254220222992223], 
                    DiskBox[2, 0.02254220222992223], 
                    DiskBox[3, 0.02254220222992223], 
                    DiskBox[4, 0.02254220222992223], 
                    DiskBox[5, 0.02254220222992223], 
                    DiskBox[6, 0.02254220222992223], 
                    DiskBox[7, 0.02254220222992223], 
                    DiskBox[8, 0.02254220222992223], 
                    DiskBox[9, 0.02254220222992223], 
                    DiskBox[10, 0.02254220222992223], 
                    DiskBox[11, 0.02254220222992223], 
                    DiskBox[12, 0.02254220222992223], 
                    DiskBox[13, 0.02254220222992223], 
                    DiskBox[14, 0.02254220222992223], 
                    DiskBox[15, 0.02254220222992223], 
                    DiskBox[16, 0.02254220222992223], 
                    DiskBox[17, 0.02254220222992223]}}], {
                    Background -> GrayLevel[0, 0], FormatType -> 
                    TraditionalForm, FrameTicks -> None, ImageSize -> 32}], 
                   GridBox[{{
                    TagBox[
                    TemplateBox[{
                    StyleBox["\"Points: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox[
                    "\"\\!\\(\\*RowBox[{\\\"15\\\"}]\\)\"", 
                    StringForm["``", 15], Editable -> False]}, "RowDefault"], 
                    "SummaryItem"]}, {
                    TagBox[
                    TemplateBox[{
                    StyleBox["\"Dimensions: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox["\"\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\"", 
                    StringForm["``", 3], Editable -> False]}, "RowDefault"], 
                    "SummaryItem"]}, {
                    TagBox[
                    TemplateBox[{
                    StyleBox["\"Simplex Count: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox[
                    "\"\\!\\(\\*RowBox[{\\\"1848\\\"}]\\)\"", 
                    StringForm["``", 1848], Editable -> False]}, 
                    "RowDefault"], "SummaryItem"]}, {
                    TagBox[
                    TemplateBox[{
                    StyleBox["\"Filtration Length: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox["\"\\!\\(\\*RowBox[{\\\"104\\\"}]\\)\"", 
                    StringForm["``", 104], Editable -> False]}, "RowDefault"],
                     "SummaryItem"]}, {
                    TagBox[
                    TemplateBox[{
                    StyleBox["\"Generators: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox[
                    "\"\\!\\(\\*RowBox[{\\\"17\\\"}]\\)\"", 
                    StringForm["``", 17], Editable -> False]}, "RowDefault"], 
                    "SummaryItem"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
            "SummaryPanel"], 
           ButtonBox[
            DynamicBox[
             ToBoxes[
              If[
               
               Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
                "Local"], 
               Style["This object cannot be used as input.", "SummaryEmbed"], 
               
               BoxForm`EmbedSummaryLabel[
               "PersistentHomologyObject", 1192864, 
                Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
            ButtonFunction :> 
            BoxForm`EmbedSummaryInterpretation[
             "PersistentHomologyObject", 
              10740114598802730289645251208157634389226696961652409539968, 
              EvaluationBox[], 
              Dynamic[Typeset`embedState$$], StandardForm, 
              ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
            "SummaryEmbedButton", ImageSize -> Inherited, 
            BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
              
              And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
               "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
            Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
          "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->(
      "PersistentHomologyObject[<|Points -> {{0.407456, 0.324138, 0.252778}, \
{0.966994, 0.613372, 0.815813}, {0.336938, 0.54071, 0.372096}, {0.028556, \
0.764784, 0.736238}, {0.736004, 0.350236, 0.99665}, {0.815259, 0.247619, \
0.242471}, {0.168575, 0.126054, 0.407273}, <<5>>, {0.0485355, 0.101531, \
0.487586}, {0.164593, 0.391053, 0.7659}, {0.0732095, 0.775192, 0.537681}}, \
<<8>>|>]"& )],
    False,
    BoxID -> 10740114598802730289645251208157634389226696961652409539968,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8230216732362967`*^9},
 CellID->834110351]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   InterpretationBox[
    TagBox[
     DynamicModuleBox[{Typeset`open = False}, 
      FrameBox[
       PaneSelectorBox[{False->GridBox[{
          {
           PaneBox[GridBox[{
              {
               StyleBox[
                StyleBox[
                 AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                  BoxBaselineShift->-0.25,
                  BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                 
                 FontColor->RGBColor[
                  0.8745098039215686, 0.2784313725490196, 
                   0.03137254901960784]],
                ShowStringCharacters->False,
                FontFamily->"Source Sans Pro Black",
                FontSize->0.6538461538461539 Inherited,
                FontWeight->"Heavy",
                PrivateFontOptions->{"OperatorSubstitution"->False}], 
               StyleBox[
                RowBox[{
                 StyleBox["PersistentHomology", "ResourceFunctionLabel"], 
                 " "}],
                ShowAutoStyles->False,
                ShowStringCharacters->False,
                FontSize->Rational[12, 13] Inherited,
                FontColor->GrayLevel[0.1]]}
             },
             GridBoxSpacings->{"Columns" -> {{0.25}}}],
            Alignment->Left,
            BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
            BaselinePosition->Baseline,
            FrameMargins->{{3, 0}, {0, 0}}], 
           ItemBox[
            PaneBox[
             TogglerBox[Dynamic[Typeset`open], {True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "IconizeCloser"],
               ImageSizeCache->{11., {1., 10.}}], False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "IconizeOpener"],
               ImageSizeCache->{11., {1., 10.}}]},
              Appearance->None,
              BaselinePosition->Baseline,
              ContentPadding->False,
              FrameMargins->0],
             Alignment->Left,
             BaselinePosition->Baseline,
             FrameMargins->{{1, 1}, {0, 0}}],
            Frame->{{
               RGBColor[
               0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                0.5], False}, {False, False}}]}
         },
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
        GridBox[{
          {GridBox[{
             {
              PaneBox[GridBox[{
                 {
                  StyleBox[
                   StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                   ShowStringCharacters->False,
                   FontFamily->"Source Sans Pro Black",
                   FontSize->0.6538461538461539 Inherited,
                   FontWeight->"Heavy",
                   PrivateFontOptions->{"OperatorSubstitution"->False}], 
                  StyleBox[
                   RowBox[{
                    StyleBox["PersistentHomology", "ResourceFunctionLabel"], 
                    " "}],
                   ShowAutoStyles->False,
                   ShowStringCharacters->False,
                   FontSize->Rational[12, 13] Inherited,
                   FontColor->GrayLevel[0.1]]}
                },
                GridBoxSpacings->{"Columns" -> {{0.25}}}],
               Alignment->Left,
               BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
               BaselinePosition->Baseline,
               FrameMargins->{{3, 0}, {0, 0}}], 
              ItemBox[
               PaneBox[
                TogglerBox[Dynamic[Typeset`open], {True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "IconizeCloser"]], False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "IconizeOpener"]]},
                 Appearance->None,
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0],
                Alignment->Left,
                BaselinePosition->Baseline,
                FrameMargins->{{1, 1}, {0, 0}}],
               Frame->{{
                  RGBColor[
                  0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                   0.5], False}, {False, False}}]}
            },
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
          {
           StyleBox[
            PaneBox[GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Version (latest): \"\>",
                  "IconizedLabel"], " ", 
                 TagBox["\<\"1.0.1\"\>",
                  "IconizedItem"]}]},
               {
                TagBox[
                 
                 TemplateBox[{
                  "\"Documentation \[RightGuillemet]\"", 
                   "https://resources.wolframcloud.com/FunctionRepository/\
resources/PersistentHomology"},
                  "HyperlinkURL"],
                 "IconizedItem"]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             Alignment->Left,
             BaselinePosition->Baseline,
             FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
            FontFamily->"Roboto",
            FontSize->11]}
         },
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
              GrayLevel[0.8]}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open],
        BaselinePosition->Baseline,
        ImageSize->Automatic],
       Background->RGBColor[
        0.9686274509803922, 0.9764705882352941, 0.984313725490196],
       BaselinePosition->Baseline,
       DefaultBaseStyle->{},
       FrameMargins->{{0, 0}, {1, 0}},
       FrameStyle->RGBColor[
        0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
       RoundingRadius->4]],
     {"FunctionResourceBox", 
      RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
      "PersistentHomology"},
     TagBoxNote->"FunctionResourceBox"],
    ResourceFunction["PersistentHomology"],
    BoxID -> "PersistentHomology",
    Selectable->False], "[", 
   RowBox[{"data", "\[LeftDoubleBracket]", 
    RowBox[{"1", ";;", "20"}], "\[RightDoubleBracket]"}], "]"}], 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{3.823021624132258*^9},
 CellID->883458296],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"225.9660524`", ",", 
   TagBox[
    TemplateBox[{
      RowBox[{
        StyleBox[
         TagBox["PersistentHomologyObject", "SummaryHead"], 
         "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{
         Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
         TemplateBox[{
           TemplateBox[{
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[
                    GraphicsComplexBox[CompressedData["
1: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
DD7UNnFU6mGhG2+T145RH+SY9ZrzutlY7vy4V2ngKex2UAy4ntEDQ02/GiX9
uKDJkxbtMe2FnIE50gkPudC2yslK4U8vuN6sNTtygQs/bOInhsL7oH7xMpH5
+7lwbMI9rWBHP9j/elIzto4Ll5b2/DvS2g+9zSapiqJcyHELv6J/bQB6/5yh
fejhwNU9a713TQzAq5uXer3SOCCd1ZT4e5IEwwV3F73RYsFbYtPio/vJMLLR
fO8MwblvmZvRMhMfMhyJ/r1/YTsT+vpG+7sayVDt3Z3WHckE0a8R/0rmUaA7
Oumf62UmxF97+LHnEAVWe4QHrlVlQqhcYuJcdwoo+ob4MzkMMFzx1E+lmAJP
OM5No4Lzu/PamhCp6m4ItV2u09LCgSGFhxdOa/XAj6p/Tv2CcyO6d17KS+yB
343jjjHHOSBRFJTLV+yFXRmsOQdlOHA6amCsMKYXjOuKzbkDbBg02+Jet7EP
ajPeVeQlsqEjeJP/18w+UFDZ9aXyPhuIPzddcNbrh/Xha36rG7Khdd7JEBkF
EnhTNTbtaWZACvvN+uBrJNAx116zIZYBpxTHLBbkCtrPDc7GPmLA4CbFZ+Zi
ZEg4K6XXZMaAV38W9+07LpgfvcezC3cwYNUq5eQ4Qf0YSm1IfyjHAG5Oj7nh
TzJYO778IT+DAVfutr2eEtQb29zf6xTx6FCrrrpJn9gHZZcC51i3cUBWN/n9
tiUDsENcpnOpHwcub7w5sn7XINSfJDzw0ufA/Tei9ReshuDYjxADBpcNexLt
Y1fvIkCLiXjhlSA20C6/qPKuIoCLYp+97hY2KPgFPl9tSARH20Huu3oWyJR1
/A6oJoJVGdO/zpIFJZe/kOXfMcDN/l5Y3xoKUHYVqm+QZoLCTHkbqTQyPHE+
mejkzQSKpTbtvRYZhtXvz20ZZcKPubvnlgvmRaPGMpgneE7RxhzWF01BHi35
rhNayoIfzPK0yUQinPb9Xum7jA3K3j3HC+SIQH/aRv9wnQ2h/PYHh3wIsEp/
nVdGUA/0nv31bsZrNuipMFratXvhwOfvn4P/sUBSnkn4zBXk/wWJK8Z3WPAq
b7H60vQ+yFu7TNWLwYR59EEDk8f98ETfb56vDRN4xuvERc0F+c0L2JxOZcD6
BvM/sXsGweRgaubOmwxwcNLzz9AYAn6/6eM7Y4J6keK/lWZHg8W+RI/npYLx
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
                    "], {{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    Arrowheads[0.], {
                    ArrowBox[{1, 2}, 0.02254220222992223], 
                    ArrowBox[{1, 5}, 0.02254220222992223], 
                    ArrowBox[{1, 7}, 0.02254220222992223], 
                    ArrowBox[{1, 9}, 0.02254220222992223], 
                    ArrowBox[{1, 11}, 0.02254220222992223], 
                    ArrowBox[{1, 13}, 0.02254220222992223], 
                    ArrowBox[{1, 15}, 0.02254220222992223], 
                    ArrowBox[{1, 17}, 0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-2.1409496216940123`*^-16, -1.0434049156924905`}, 5}],
                     0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {1.0704748108470062`*^-15, -0.9225412836753133}, 5}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.19317181243605622`, -1.0333779239158283`}, 7}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.1495108326247347, -0.7998123114976872}, 7}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.3696769958201283, -0.9542463251548349}, 9}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.24459071364353785`, -0.6313614109083246}, 9}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.5056775470872312, -0.8166972803055038}, 11}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.272398578269021, -0.43993880945047653`}, 11}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.582805838183662, -0.6393075500603161}, 13}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.229178820294798, -0.251397190160288}, 13}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.590645266014236, -0.4460346004393019}, 15}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.12076850752425144`, -0.09120014346806327}, 15}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {-0.04103500681170743, -0.01167546606958506}, 4}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.5674671696890601, 0.16145833033997112`}, 4}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.15069014333422975`, 0.013963498134084052`}, 6}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.7369836857302795, 0.06829159554065786}, 6}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.33873038367193714`, -0.031387992444006356`}, 8}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.8613974228519735, -0.07982022606495483}, 8}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.49768983777687453`, -0.14160496769998895`}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.9239056164555438, -0.26287381225308243`}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.6061001505474233, -0.3018020143922123}, 12}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.9160661886249679, -0.45614676187410347`}, 12}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.6493199085216432, -0.4903436336824059}, 14}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.8389378975285393, -0.633536492119288}, 14}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.6215120438961692, -0.6817662351402451}, 16}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.7029373462614268, -0.7710855369686257}, 16}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.19172515014593514`, 1.0256389642036672`}, 6}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.16951651604121815`, 0.9068332652006886}, 6}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.37976539048364444`, 0.9802874736255784}, 8}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.2939302531629152, 0.7587214435950802}, 8}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.5387248445885809, 0.8700704983695936}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.35643844676648223`, 0.5756678574069446}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.6471351573591255, 0.7098734516773724}, 12}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.34859901893590606`, 0.3823949077859304}, 12}], 
                    0.02254220222992223], 
                    ArrowBox[
                    BezierCurveBox[{
                    4, {0.6903549153333459, 0.5213318323871787}, 14}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.27147072783947207`, 0.20500517754074105`}, 14}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.3769213302526145, -0.9729461079072422}, 7}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.33326035044130586`, -0.8602441275062771}, 7}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.5534265136367049, -0.8938145091462413}, 9}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.4283402314601095, -0.6917932269169124}, 9}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.6894270649037971, -0.7562654642969203}, 11}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.4561480960855884, -0.500370625459065}, 11}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.7665553560002341, -0.5788757340517223}, 13}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.41292833811137236`, -0.31182900616887055`}, 13}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5492819065248636, 0.887120738826274}, 8}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.4856554033088557, 0.7843604077987405}, 8}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.7082413606297987, 0.7769037635702826}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5481635969124143, 0.6013068216106137}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.8166516734003458, 0.616706716878059}, 12}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5403241690818401, 0.4080338719895959}, 12}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.7029373462614349, -0.7710855369686219}, 9}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.6215120438961611, -0.6817662351402489}, 9}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.8389378975285295, -0.6335364921192947}, 11}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.6493199085216452, -0.4903436336824001}, 11}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    8, {0.83265509775149, 0.6287919419646689}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    8, {0.7362038372501287, 0.5559553310325218}, 10}], 
                    0.02254220222992223]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    DiskBox[1, 0.02254220222992223], 
                    DiskBox[2, 0.02254220222992223], 
                    DiskBox[3, 0.02254220222992223], 
                    DiskBox[4, 0.02254220222992223], 
                    DiskBox[5, 0.02254220222992223], 
                    DiskBox[6, 0.02254220222992223], 
                    DiskBox[7, 0.02254220222992223], 
                    DiskBox[8, 0.02254220222992223], 
                    DiskBox[9, 0.02254220222992223], 
                    DiskBox[10, 0.02254220222992223], 
                    DiskBox[11, 0.02254220222992223], 
                    DiskBox[12, 0.02254220222992223], 
                    DiskBox[13, 0.02254220222992223], 
                    DiskBox[14, 0.02254220222992223], 
                    DiskBox[15, 0.02254220222992223], 
                    DiskBox[16, 0.02254220222992223], 
                    DiskBox[17, 0.02254220222992223]}}], {
                    Background -> GrayLevel[0, 0], FormatType -> 
                    TraditionalForm, FrameTicks -> None, ImageSize -> 32}], 
                   GridBox[{{
                    TagBox[
                    TemplateBox[{
                    StyleBox["\"Points: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox[
                    "\"\\!\\(\\*RowBox[{\\\"20\\\"}]\\)\"", 
                    StringForm["``", 20], Editable -> False]}, "RowDefault"], 
                    "SummaryItem"]}, {
                    TagBox[
                    TemplateBox[{
                    StyleBox["\"Dimensions: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox["\"\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\"", 
                    StringForm["``", 3], Editable -> False]}, "RowDefault"], 
                    "SummaryItem"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[
                    GraphicsComplexBox[CompressedData["
1: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
DD7UNnFU6mGhG2+T145RH+SY9ZrzutlY7vy4V2ngKex2UAy4ntEDQ02/GiX9
uKDJkxbtMe2FnIE50gkPudC2yslK4U8vuN6sNTtygQs/bOInhsL7oH7xMpH5
+7lwbMI9rWBHP9j/elIzto4Ll5b2/DvS2g+9zSapiqJcyHELv6J/bQB6/5yh
fejhwNU9a713TQzAq5uXer3SOCCd1ZT4e5IEwwV3F73RYsFbYtPio/vJMLLR
fO8MwblvmZvRMhMfMhyJ/r1/YTsT+vpG+7sayVDt3Z3WHckE0a8R/0rmUaA7
Oumf62UmxF97+LHnEAVWe4QHrlVlQqhcYuJcdwoo+ob4MzkMMFzx1E+lmAJP
OM5No4Lzu/PamhCp6m4ItV2u09LCgSGFhxdOa/XAj6p/Tv2CcyO6d17KS+yB
343jjjHHOSBRFJTLV+yFXRmsOQdlOHA6amCsMKYXjOuKzbkDbBg02+Jet7EP
ajPeVeQlsqEjeJP/18w+UFDZ9aXyPhuIPzddcNbrh/Xha36rG7Khdd7JEBkF
EnhTNTbtaWZACvvN+uBrJNAx116zIZYBpxTHLBbkCtrPDc7GPmLA4CbFZ+Zi
ZEg4K6XXZMaAV38W9+07LpgfvcezC3cwYNUq5eQ4Qf0YSm1IfyjHAG5Oj7nh
TzJYO778IT+DAVfutr2eEtQb29zf6xTx6FCrrrpJn9gHZZcC51i3cUBWN/n9
tiUDsENcpnOpHwcub7w5sn7XINSfJDzw0ufA/Tei9ReshuDYjxADBpcNexLt
Y1fvIkCLiXjhlSA20C6/qPKuIoCLYp+97hY2KPgFPl9tSARH20Huu3oWyJR1
/A6oJoJVGdO/zpIFJZe/kOXfMcDN/l5Y3xoKUHYVqm+QZoLCTHkbqTQyPHE+
mejkzQSKpTbtvRYZhtXvz20ZZcKPubvnlgvmRaPGMpgneE7RxhzWF01BHi35
rhNayoIfzPK0yUQinPb9Xum7jA3K3j3HC+SIQH/aRv9wnQ2h/PYHh3wIsEp/
nVdGUA/0nv31bsZrNuipMFratXvhwOfvn4P/sUBSnkn4zBXk/wWJK8Z3WPAq
b7H60vQ+yFu7TNWLwYR59EEDk8f98ETfb56vDRN4xuvERc0F+c0L2JxOZcD6
BvM/sXsGweRgaubOmwxwcNLzz9AYAn6/6eM7Y4J6keK/lWZHg8W+RI/npYLx
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
                    "], {{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    Arrowheads[0.], {
                    ArrowBox[{1, 2}, 0.02254220222992223], 
                    ArrowBox[{1, 5}, 0.02254220222992223], 
                    ArrowBox[{1, 7}, 0.02254220222992223], 
                    ArrowBox[{1, 9}, 0.02254220222992223], 
                    ArrowBox[{1, 11}, 0.02254220222992223], 
                    ArrowBox[{1, 13}, 0.02254220222992223], 
                    ArrowBox[{1, 15}, 0.02254220222992223], 
                    ArrowBox[{1, 17}, 0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-2.1409496216940123`*^-16, -1.0434049156924905`}, 5}],
                     0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {1.0704748108470062`*^-15, -0.9225412836753133}, 5}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.19317181243605622`, -1.0333779239158283`}, 7}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.1495108326247347, -0.7998123114976872}, 7}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.3696769958201283, -0.9542463251548349}, 9}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.24459071364353785`, -0.6313614109083246}, 9}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.5056775470872312, -0.8166972803055038}, 11}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.272398578269021, -0.43993880945047653`}, 11}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.582805838183662, -0.6393075500603161}, 13}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.229178820294798, -0.251397190160288}, 13}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.590645266014236, -0.4460346004393019}, 15}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    2, {-0.12076850752425144`, -0.09120014346806327}, 15}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {-0.04103500681170743, -0.01167546606958506}, 4}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.5674671696890601, 0.16145833033997112`}, 4}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.15069014333422975`, 0.013963498134084052`}, 6}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.7369836857302795, 0.06829159554065786}, 6}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.33873038367193714`, -0.031387992444006356`}, 8}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.8613974228519735, -0.07982022606495483}, 8}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.49768983777687453`, -0.14160496769998895`}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.9239056164555438, -0.26287381225308243`}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.6061001505474233, -0.3018020143922123}, 12}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.9160661886249679, -0.45614676187410347`}, 12}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.6493199085216432, -0.4903436336824059}, 14}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.8389378975285393, -0.633536492119288}, 14}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.6215120438961692, -0.6817662351402451}, 16}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.7029373462614268, -0.7710855369686257}, 16}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.19172515014593514`, 1.0256389642036672`}, 6}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.16951651604121815`, 0.9068332652006886}, 6}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.37976539048364444`, 0.9802874736255784}, 8}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.2939302531629152, 0.7587214435950802}, 8}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.5387248445885809, 0.8700704983695936}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.35643844676648223`, 0.5756678574069446}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.6471351573591255, 0.7098734516773724}, 12}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.34859901893590606`, 0.3823949077859304}, 12}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.6903549153333459, 0.5213318323871787}, 14}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.27147072783947207`, 0.20500517754074105`}, 14}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.3769213302526145, -0.9729461079072422}, 7}], 
                    0.02254220222992223], 
                    ArrowBox[
                    BezierCurveBox[{
                    5, {-0.33326035044130586`, -0.8602441275062771}, 7}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.5534265136367049, -0.8938145091462413}, 9}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.4283402314601095, -0.6917932269169124}, 9}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.6894270649037971, -0.7562654642969203}, 11}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.4561480960855884, -0.500370625459065}, 11}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.7665553560002341, -0.5788757340517223}, 13}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.41292833811137236`, -0.31182900616887055`}, 13}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5492819065248636, 0.887120738826274}, 8}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.4856554033088557, 0.7843604077987405}, 8}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.7082413606297987, 0.7769037635702826}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5481635969124143, 0.6013068216106137}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.8166516734003458, 0.616706716878059}, 12}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    6, {0.5403241690818401, 0.4080338719895959}, 12}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.7029373462614349, -0.7710855369686219}, 9}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.6215120438961611, -0.6817662351402489}, 9}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.8389378975285295, -0.6335364921192947}, 11}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    7, {-0.6493199085216452, -0.4903436336824001}, 11}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    8, {0.83265509775149, 0.6287919419646689}, 10}], 
                    0.02254220222992223], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    8, {0.7362038372501287, 0.5559553310325218}, 10}], 
                    0.02254220222992223]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    DiskBox[1, 0.02254220222992223], 
                    DiskBox[2, 0.02254220222992223], 
                    DiskBox[3, 0.02254220222992223], 
                    DiskBox[4, 0.02254220222992223], 
                    DiskBox[5, 0.02254220222992223], 
                    DiskBox[6, 0.02254220222992223], 
                    DiskBox[7, 0.02254220222992223], 
                    DiskBox[8, 0.02254220222992223], 
                    DiskBox[9, 0.02254220222992223], 
                    DiskBox[10, 0.02254220222992223], 
                    DiskBox[11, 0.02254220222992223], 
                    DiskBox[12, 0.02254220222992223], 
                    DiskBox[13, 0.02254220222992223], 
                    DiskBox[14, 0.02254220222992223], 
                    DiskBox[15, 0.02254220222992223], 
                    DiskBox[16, 0.02254220222992223], 
                    DiskBox[17, 0.02254220222992223]}}], {
                    Background -> GrayLevel[0, 0], FormatType -> 
                    TraditionalForm, FrameTicks -> None, ImageSize -> 32}], 
                   GridBox[{{
                    TagBox[
                    TemplateBox[{
                    StyleBox["\"Points: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox[
                    "\"\\!\\(\\*RowBox[{\\\"20\\\"}]\\)\"", 
                    StringForm["``", 20], Editable -> False]}, "RowDefault"], 
                    "SummaryItem"]}, {
                    TagBox[
                    TemplateBox[{
                    StyleBox["\"Dimensions: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox["\"\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\"", 
                    StringForm["``", 3], Editable -> False]}, "RowDefault"], 
                    "SummaryItem"]}, {
                    TagBox[
                    TemplateBox[{
                    StyleBox["\"Simplex Count: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox[
                    "\"\\!\\(\\*RowBox[{\\\"6023\\\"}]\\)\"", 
                    StringForm["``", 6023], Editable -> False]}, 
                    "RowDefault"], "SummaryItem"]}, {
                    TagBox[
                    TemplateBox[{
                    StyleBox["\"Filtration Length: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox["\"\\!\\(\\*RowBox[{\\\"189\\\"}]\\)\"", 
                    StringForm["``", 189], Editable -> False]}, "RowDefault"],
                     "SummaryItem"]}, {
                    TagBox[
                    TemplateBox[{
                    StyleBox["\"Generators: \"", 
                    RGBColor[0.43, 0.43, 0.43], StripOnInput -> False], 
                    InterpretationBox[
                    "\"\\!\\(\\*RowBox[{\\\"23\\\"}]\\)\"", 
                    StringForm["``", 23], Editable -> False]}, "RowDefault"], 
                    "SummaryItem"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
            "SummaryPanel"], 
           ButtonBox[
            DynamicBox[
             ToBoxes[
              If[
               
               Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
                "Local"], 
               Style["This object cannot be used as input.", "SummaryEmbed"], 
               
               BoxForm`EmbedSummaryLabel[
               "PersistentHomologyObject", 4678888, 
                Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
            ButtonFunction :> 
            BoxForm`EmbedSummaryInterpretation[
             "PersistentHomologyObject", 
              10740114598802730289645251208157634389245143705726216277440, 
              EvaluationBox[], 
              Dynamic[Typeset`embedState$$], StandardForm, 
              ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
            "SummaryEmbedButton", ImageSize -> Inherited, 
            BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
              
              And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
               "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
            Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
          "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->(
      "PersistentHomologyObject[<|Points -> {{0.407456, 0.324138, 0.252778}, \
{0.966994, 0.613372, 0.815813}, {0.336938, 0.54071, 0.372096}, {0.028556, \
0.764784, 0.736238}, {0.736004, 0.350236, 0.99665}, {0.815259, 0.247619, \
0.242471}, {0.168575, 0.126054, 0.407273}, <<10>>, {0.248729, 0.295658, \
0.758131}, {0.398079, 0.758276, 0.725927}, {0.348824, 0.452581, 0.362966}}, \
<<8>>|>]"& )],
    False,
    BoxID -> 10740114598802730289645251208157634389245143705726216277440,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8230218999785166`*^9},
 CellID->364319106]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Neat Examples",
 "\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"],
 "\[NonBreakingSpace]"
}], "Subsection",
 TaggingRules->{},
 CellID->461278909],

Cell[TextData[{
 "Draw some data in ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    TagBox[
     SuperscriptBox[
      TemplateBox[{},
       "Reals"], "2"],
     "ForceRasterization"], "MarkedForRasterization"], TraditionalForm]]],
 " and perform ",
 Cell[BoxData[
  StyleBox["PersistentHomology", "InlineResourceFunction"]], "InlineFormula",
  FontFamily->"Source Sans Pro"],
 " on it:"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.824896064308267*^9, 3.824896079764258*^9}},
 CellID->636979983],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"data", "=", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"phom", "=", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", "}"}], "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Column", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Button", "[", 
        RowBox[{"\"\<Compute\>\"", ",", 
         RowBox[{"phom", "=", 
          RowBox[{
           RowBox[{
            InterpretationBox[
             TagBox[
              DynamicModuleBox[{Typeset`open = False}, 
               FrameBox[
                PaneSelectorBox[{False->GridBox[{
                   {
                    PaneBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.6538461538461539 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                    StyleBox[
                    RowBox[{
                    StyleBox["PersistentHomology", "ResourceFunctionLabel"], 
                    " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->Rational[12, 13] Inherited,
                    FontColor->GrayLevel[0.1]]}
                    },
                    GridBoxSpacings->{"Columns" -> {{0.25}}}],
                    Alignment->Left,
                    BaseStyle->{
                    LineSpacing -> {0, 0}, LineBreakWithin -> False},
                    BaselinePosition->Baseline,
                    FrameMargins->{{3, 0}, {0, 0}}], 
                    ItemBox[
                    PaneBox[
                    TogglerBox[Dynamic[Typeset`open], {True->
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "FEBitmaps", "IconizeCloser"],
                    ImageSizeCache->{11., {1., 10.}}], False->
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "FEBitmaps", "IconizeOpener"],
                    ImageSizeCache->{11., {1., 10.}}]},
                    Appearance->None,
                    BaselinePosition->Baseline,
                    ContentPadding->False,
                    FrameMargins->0],
                    Alignment->Left,
                    BaselinePosition->Baseline,
                    FrameMargins->{{1, 1}, {0, 0}}],
                    Frame->{{
                    RGBColor[
                    0.8313725490196079, 0.8470588235294118, 
                    0.8509803921568627, 0.5], False}, {False, False}}]}
                  },
                  BaselinePosition->{1, 1},
                  
                  GridBoxAlignment->{
                   "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], 
                 True->GridBox[{
                   {GridBox[{
                    {
                    PaneBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.6538461538461539 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                    StyleBox[
                    RowBox[{
                    StyleBox["PersistentHomology", "ResourceFunctionLabel"], 
                    " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->Rational[12, 13] Inherited,
                    FontColor->GrayLevel[0.1]]}
                    },
                    GridBoxSpacings->{"Columns" -> {{0.25}}}],
                    Alignment->Left,
                    
                    BaseStyle->{
                    LineSpacing -> {0, 0}, LineBreakWithin -> False},
                    BaselinePosition->Baseline,
                    FrameMargins->{{3, 0}, {0, 0}}], 
                    ItemBox[
                    PaneBox[
                    TogglerBox[Dynamic[Typeset`open], {True->
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "FEBitmaps", "IconizeCloser"]], False->
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "FEBitmaps", "IconizeOpener"]]},
                    Appearance->None,
                    BaselinePosition->Baseline,
                    ContentPadding->False,
                    FrameMargins->0],
                    Alignment->Left,
                    BaselinePosition->Baseline,
                    FrameMargins->{{1, 1}, {0, 0}}],
                    Frame->{{
                    RGBColor[
                    0.8313725490196079, 0.8470588235294118, 
                    0.8509803921568627, 0.5], False}, {False, False}}]}
                    },
                    BaselinePosition->{1, 1},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
                   {
                    StyleBox[
                    PaneBox[GridBox[{
                    {
                    RowBox[{
                    TagBox["\<\"Version (latest): \"\>",
                    "IconizedLabel"], " ", 
                    TagBox["\<\"1.0.1\"\>",
                    "IconizedItem"]}]},
                    {
                    TagBox[
                    
                    TemplateBox[{
                    "\"Documentation \[RightGuillemet]\"", 
                    "https://resources.wolframcloud.com/FunctionRepository/\
resources/PersistentHomology"},
                    "HyperlinkURL"],
                    "IconizedItem"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    Alignment->Left,
                    BaselinePosition->Baseline,
                    FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
                    FontFamily->"Roboto",
                    FontSize->11]}
                  },
                  BaselinePosition->{1, 1},
                  
                  GridBoxAlignment->{
                   "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                  
                  GridBoxDividers->{
                   "Columns" -> {{None}}, "Rows" -> {False, {
                    GrayLevel[0.8]}, False}},
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
                 Dynamic[Typeset`open],
                 BaselinePosition->Baseline,
                 ImageSize->Automatic],
                
                Background->RGBColor[
                 0.9686274509803922, 0.9764705882352941, 0.984313725490196],
                BaselinePosition->Baseline,
                DefaultBaseStyle->{},
                FrameMargins->{{0, 0}, {1, 0}},
                
                FrameStyle->RGBColor[
                 0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
                RoundingRadius->4]],
              {"FunctionResourceBox", 
               RGBColor[
               0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
               "PersistentHomology"},
              TagBoxNote->"FunctionResourceBox"],
             ResourceFunction["PersistentHomology"],
             BoxID -> "PersistentHomology",
             Selectable->False], "[", "data", "]"}], "[", "\"\<Barcode\>\"", 
           "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Row", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ClickPane", "[", 
           RowBox[{
            RowBox[{"Framed", "@", 
             RowBox[{"Dynamic", "[", 
              RowBox[{
               RowBox[{"ListPlot", "[", 
                RowBox[{"data", ",", 
                 RowBox[{"PlotRange", "\[Rule]", 
                  RowBox[{"{", " ", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}], " ", "}"}]}], 
                 ",", 
                 RowBox[{"PlotStyle", "\[Rule]", 
                  RowBox[{"PointSize", "[", "Large", "]"}]}], ",", 
                 RowBox[{"ImageSize", "\[Rule]", "250"}], ",", 
                 RowBox[{"PlotLabel", "\[Rule]", 
                  RowBox[{"Length", "[", "data", "]"}]}]}], "]"}], ",", 
               InterpretationBox[
                DynamicModuleBox[{Typeset`open = False}, 
                 TemplateBox[{"Expression", 
                   RowBox[{"RuleDelayed", "[", 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "IconizeEllipsis"]], "]"}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Byte count: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["1640", "IconizedItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   Dynamic[Typeset`open]},
                  "IconizedObject"]],
                
                Initialization :> {$CellContext`introdata = \
{{-0.6276498538011699, 0.2755882642199108}, {-0.4923245614035091, 
                   0.5533552010221645}, {-0.2955729166666671, 
                   0.6799858764026732}, {-0.09562317251462027, 
                   0.5479957591277764}, {-0.1305738304093571, 
                   0.16936042970631437`}, {-0.3572505482456144, \
-0.12215624768016273`}, {-0.5747898391812869, 0.00902071289351639}, {
                   0.25758406432748493`, 0.46985879247442125`}, {
                   0.413788377192982, 0.7182412030281331}, {
                   0.7561220760233913, 0.6458332949515377}, {
                   0.7347176535087716, 0.19375513074283965`}, {
                   0.6180327119883036, -0.1418198551823316}, {
                   0.4325886330409352, -0.18868725050704988`}, {
                   0.20876736111111072`, -0.11716642246814621`}, {
                   0.19435307017543813`, 0.19434651743463421`}}},
                SelectWithContents->True,
                Selectable->False]}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{"data", ",", "#"}], "]"}], "&"}]}], "]"}], ",", 
          RowBox[{"Dynamic", "[", 
           RowBox[{"Show", "[", 
            RowBox[{"phom", ",", 
             RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}], "]"}]}], 
         "}"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"Alignment", "\[Rule]", "Left"}]}], "\[IndentingNewLine]", 
    "]"}]}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.804494270299645*^9, 3.804494291686594*^9}, {
  3.804494328156687*^9, 3.804494343142049*^9}, {3.8230219315703735`*^9, 
  3.8230219564526396`*^9}, {3.823022134844832*^9, 3.8230222436179075`*^9}, {
  3.823022281113943*^9, 3.8230223989941473`*^9}, {3.8230224330851974`*^9, 
  3.8230224369540844`*^9}},
 CellID->90457746],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
ZufCTo+06QhAfVll/vtH+EdkfhiW5UP248sH95f/OjrR7Vj/0o2636QieOYv
nZy6VCT/F37+YRH1n3/tyGv7Txz/7FzoSZG+aDvCwqnT88dO3PnKu2AT8598
WizU4kVf4cEw5JP5x5fS/vjk0h9kfhi88oj9mkP0HX7U6U6b/S5gVSSZH4KI
sCPMHfn9he/tOv/AQ+W4vPup21NnQ08qRjf2v3vhwUdXF+rKk89K/gxaDDl2
K+pn/onxe62Vn8v8MHjlYf118X0p0nc5jN/bYX6Zn6zF1hEWTp1u7di5mmPL
cfGR3Xfn5kNPLS7FntG6VSr3j0LPi8TFkGO3oo9rdcr8MBQd433HHYH1dxqf
nKx+7rfLDoDMT85i6whXHh9pj7L30+wPfzIz9oaxOlqVI/zFOLfyhxv73w39
GpKyGHLsVsj8EKt+Mn/Hi/Z0ub3MT86i6gh35+bbD/IbdUbruw+Xf7j23N7Q
LyMpiyHHDpnMD0PR+cz8rufrr3zKd+VTv/ev9DnaLfXL/OQsqo6weH0meHhu
6FjN/P/px8+HfhlJWQw5dshkftgGrY0t36Kvc3s66Pa53/ZfCfT5dKCBYusI
07ue6Jhpp3c/Ffx0mqjGul+IrJ7b882b+0K/hqQshhw7ZDI/bNkG5+CMVK/F
uV2Zv9tdhHxyFltHuPnOoQ4HsXfsdNHOdWZff6t9oS58b9fi9ZnQUyNlMeTY
IZP5ydP56dlf/e6LsX0f73n1/Zff/ujA4dNnvr7a96O1Jje2cl5OP9ft6fRP
yfzQUYQdYWbsjTU59sFHbx38IPSkYnTtub3rAv/8J5+GnhSJiyHHDpnMT4be
O3rm6ZcOtn9XbJH8F24vDugf7f36/J32CMrIv8FugsxPzuLsCLenzn7z5r4i
/N/Y/65rznexcOr07OtvFQt1851DjvAzBDHk2CGT+cnNL399sj3tr46X3/5o
UP9wmfBX83qr++dxv71H9TO8412/u1fmJ2c6AlBfDDm2KWJYKxWeXp34/EKX
wF+OQ8f/OKB/fTn1b3jdzbYD+x0/KLDxuUAyPznTEYD6YsixTRHDWqnw9GrP
q+9vmvmffungjVsLg/n3W5MT1e/Xmlyb3juezFO5R4e7rCHzkzMdAagvhhzb
FDGslQpPT6av3tw08Jfj87ONPO1W5idnOgJQXww5tiliWCsVnp7UObFn0Kf3
DJTMT850BKC+GHJsU8SwVio8PTn+2bmamf+9o2dCT7YfMj850xGA+mLIsU0R
w1qp8PTk/PRszcx/cupS6Mn2Q+YnZzoCUF8MObYpYlgrFZ5ePfPKb+tk/oF9
hnewZH5ypiMA9cWQY5sihrVS4enV4T98uWngP3D4dOhp9knmJ2c6AlBfDDm2
KWJYKxWePozt+7hL4H/xF0cH91W8gybzkzMdAagvhhzbFDGslQpPH27cWtjo
q3iL3YFrs3OhJ9i/6jd3hZ4LDJuOANQXQ45tihjWSoWnbyenLhXJ/4Wff1hE
/edfO/La/hPHPzsXelJbJeqTMx0BqC+GHNsUMayVCg9VMj850xGA+mLIsU0R
w1qp8ETl/PTsr373xdi+j/e8+v7Lb3904PDpM19fHeYEZH5ypiMA9cWQY5si
hrVS4YnHe0fPPP3SwY5XARrah4JlfnKmIwD1/Xt6IfNDaaMPBZfj5bc/Gs40
ZH5ypiMA9RUh1uhphH29VHhicOLzC5te8//Q8T8OYSYyPznTEQBSpcITgz2v
vr9p5n/6pYND+G5fmZ+c6QgAqVLhCW766s1NA385Pj97edCTkfnJWZwd4e7c
/PyxEzf2vzv/yaeh5zJAC6dOf/O3f1c80+L5hp4LkKA4KzxZqXNiz9BO75H5
yVmEHeHWwQ8ufG/X+QceKsfl3U/dnjobelLbrHhGxfNafY4XHny02MEJPSkg
NRFWeHJz/LNzNTP/e0fPDHoyMj85i60jzH/y6WoS/jYSf2/X4vWZ0FPbNnfn
5i8+srv9ac4d+X3oqQFJia3Ck6Hz07M1M//JqUuDnozMT85i6wjVo9/Vcfmf
/Xhm7I00xuU/fabjc7z0/cdCLz+QlNgqPHl65pXf1sn8PsMLAxVVR7g7N9/a
sbNjHs5kpPTrDCC4qCo82Tr8hy83DfwHDp8ewkxkfnIWVUcoMn/w1B04818c
+FULgHxEVeHJ2di+j7sE/hd/cXQ4X8Ur85Oz2DrC9K4nOobh6d1PBT8nZ9vO
7fnhTzo+x4uP7A69/EBSYqvwZOvGrYWNvoq32B24Njs3nGmMVAznX4R4xNYR
5o78vj0MX3jw0ZQOgBfPpXphotXh0j3A9oqtwpO5k1OXiuT/ws8/LKL+868d
eW3/ieOfnRvmBER9chZhR/jmzX3Vs/qLeDx/7EToSW2z+U8+vfT9x1afY/F8
Z19/K/SkgNREWOEhIJmfnMXZEe58de7G/ndnxt64dfCDVD/Wenduvnh2xXMs
nmnxfENPB0hQnBUeQpH5yZmOAJAqFR6qZH5ypiMApEqFhyqZn5zpCACpUuGh
SuYnZzoCQKpUeKiS+cmZjgCQKhUeqmR+cqYjAKRKhYcqmZ+c6QgAqVLhoUrm
J2c6AkCqVHiokvnJmY4AkCoVHqpkfnKmIwCkSoWHKpmfnOkIAKlS4aFqpCL0
XGDYdASAVKnwUCXqkzMdASBVKjxUyfzkTEcASJUKD1UyPznTEQBSpcJDlcxP
znQEgFSp8FAl85MzHQEgVSo8VMn85CzmjuC92Z316c76dGd9uktjfWKu8DB8
abyvoT8xdwTvze6sT3fWpzvr010a6xNzhYfhS+N9Df2pdoTtei94HI/jcTyO
x4nhcWR+qJL5yZnM73E8jsfxOKk+jswPVTI/OZP5PY7H8TgeJ9XHkfmhSuYn
Z2VHGAEgLfdkflhrROYnYzoCQKpUeKiS+cmZjgCQKhUeqtb9IgyyoiMApEqF
hypRn5zpCACpUuGhSuYnZzoCQKpUeKiS+cmZjgCQKhUeqmR+cqYjAKRKhYcq
mZ+c6QgAqVLhoUrmJ2c6AkCqVHgaa3J8ZGR8ss4tW5MT46PLF+AcHZ+YbG18
U5mfnAXqCD28Q7dwl+bq/cm2JsdHV+4xMjo6bn02dr+T1GwlDdXP+rS+vcv9
+9h+1t/l2zdYk95fMj/N1JpYer/VKdRLFX2tje8m85OzIB2hp3do33dprp6f
7HJ1XGs02di2tY1h+d7pbj7b9P5Kd4V6X59Ob7CGvL9kfhro23fc5mVodeeg
Vf3rhu/PEZmfjAXoCD2+Q/u8S3P1/GRXb7Fy7PH+Icl0F2hrG8Nq3ks20fax
PuWirB68bk2m/AbbjvVp0G6jzE+zrLav0aVfrG36LivfjWtu1uFH35L5ydnw
O0Kv79D+7tJcvT/ZTqeqlEnG+nS6c81W0lC9r0+5rawNvZ1+loY+tp8Ob6Zy
Q2rC8sj8NMrSu21p/7peE+t4q27vT5mfnA29I/T8Du3rLs21XU/W+rRb3jlK
d3/oXl/rk/7HGyr62X5kfhiaVmvl99W1CnXHt2K3u8r85GzoHaHnd2hfd2mu
bXqyyf4epP/1WY22qW46S3pfn/K42kSr+iHedD/D29f2s/xbj8q5Pc35LYjM
T0PJ/LDtZP7IbMuTTffMjL7XZ+km5S1S3XSW9L4+lfOd1kpyhfrcflbOMV7V
mCv3yPw0VA+Zv+1GXX55KfOTszCZv5d3aF93aa5teLLLnzhMMfH3uz6rx7JX
/5LgprOk9/VZ/VTz6ofAVz7Dm+Ia9bn9rI/8S6F/sDPdJjI/sWhtrOPNB3ac
f50+nw40kOP8kdnik23UJUX60c/6rEn86W46S/o8zt/5FPcEF6nv7afDPlEj
dqtlfuLQ8YrSq8cbOryVBpT5IWcyf2S28mRXsklTTjvoxxbOV69166brN/Ov
/5+pLlK/9aex+0QyP5FoTW6sU8ca0HV7IGeu2xOZfp/sygH+BJdkjZ7Xp9vR
pSZkth71vv107qypZv5tu65RU84tlPlpqJo1KKtLecMWuT5/bPp6suu+NChl
va5PZpm/3+93WB95U92n7nt9HOeHoap73GHd4a6Vit+ANycMXYCO0Mc7NKs3
de9PtjH5Y1tseWNI9RD2st7XZ/05YY06X71n/b6/GvoZZ5mfhtqgUHc4HLF6
HYKkD+fANgjSETZ7h+b+pu5tfbocyE4ztPWz/VQlnvn7WZ9O21CiG8+9ftan
wz2asgXJ/DRU/cy/tB9e/XaRDH7hDX0J1BG6v0O9qXtZn455JPHY1sf2U7lz
6pl/6++v1M8S62d9JiqX62zQd5bJ/ACUdASAVKnwAJR0BIBUqfAAlHQEgFSp
8ACUdASAVKnwAJR0BIBUqfAAlHQEgFSp8ACUdASAVKnwAJR0BIBUqfAAlHQE
gFSp8ACUdASAVKnwAJR0BIBUqfAAlHQEgFSp8ACUdASAVJUVfi8A2ZP5AVL1
HQCoCN2XANh+oY8qARCX0H0JAAAAgB78/4qMFQo=
    "], {{0, 207.5}, {510., 0}}, {0, 
    255},
    ColorFunction->RGBColor,
    ImageResolution->144.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{510., 207.5},
  PlotRange->{{0, 510.}, {0, 207.5}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.823022226212785*^9, {3.8230223420520067`*^9, 3.8230223998081446`*^9}, 
   3.8230224373940716`*^9, 3.8230224836401215`*^9},
 CellID->770189828]
}, Open  ]]
}, Closed]]
},
ClosingSaveDialog->False,
WindowSize->Automatic,
WindowMargins->Automatic,
WindowTitle->"PersistentHomology | Example Notebook",
Visible->False,
FrontEndVersion->"13.0 for Mac OS X x86 (64-bit) (December 9, 2021)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> 
     FrontEnd`FileName[{"Wolfram"}, "Reference.nb", CharacterEncoding -> 
       "UTF-8"]]], 
   Cell[
    StyleData[All, "Working"], Editable -> True, DockedCells -> {}], 
   Cell[
    StyleData["Notebook"], Editable -> True, DockedCells -> {}, 
    ScrollingOptions -> {"VerticalScrollRange" -> Automatic}], 
   Cell[
    StyleData[
    "Section", StyleDefinitions -> StyleData["PrimaryExamplesSection"]], 
    Editable -> True, ShowGroupOpener -> "Inline", WholeCellGroupOpener -> 
    True], 
   Cell[
    StyleData["Subsection", StyleDefinitions -> StyleData["ExampleSection"]], 
    Editable -> True, ShowGroupOpener -> "Inline", WholeCellGroupOpener -> 
    True], 
   Cell[
    StyleData[
    "Subsubsection", StyleDefinitions -> StyleData["ExampleSubsection"]], 
    Editable -> True, ShowGroupOpener -> "Inline", WholeCellGroupOpener -> 
    True], 
   Cell[
    StyleData[
    "Subsubsubsection", StyleDefinitions -> 
     StyleData["ExampleSubsubsection"]], Editable -> True, ShowGroupOpener -> 
    "Inline", WholeCellGroupOpener -> True], 
   Cell[
    StyleData["Text", StyleDefinitions -> StyleData["ExampleText"]], Editable -> 
    True]}, Visible -> False, FrontEndVersion -> 
  "13.0 for Mac OS X x86 (64-bit) (December 9, 2021)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[631, 23, 168, 7, 70, "Subsection",ExpressionUUID->"7cde7198-1576-44ed-8dbc-b87195b9545e",
 CellID->904125756],
Cell[802, 32, 98, 2, 70, "Text",ExpressionUUID->"6a8315a4-b981-49d0-8bcb-a7e2206bdb02",
 CellID->235333725],
Cell[CellGroupData[{
Cell[925, 38, 7949, 197, 70, "Input",ExpressionUUID->"dafb0133-20cb-4c97-a35f-048ee50cb4c3",
 CellID->947072097],
Cell[8877, 237, 114625, 2759, 70, "Output",ExpressionUUID->"04edd61c-aa00-45cc-933e-cd710d013af9",
 CellID->267060057]
}, Open  ]],
Cell[123517, 2999, 88, 2, 70, "Text",ExpressionUUID->"fd178fc4-78ff-4eee-90f0-ae9f717440b2",
 CellID->346154384],
Cell[CellGroupData[{
Cell[123630, 3005, 366, 7, 70, "Input",ExpressionUUID->"acd6fb38-d4e2-473e-ad18-ab3814b56f84",
 CellID->439064472],
Cell[123999, 3014, 26079, 589, 70, "Output",ExpressionUUID->"5bbf3669-99f2-4d7e-b229-256e068fc7f9",
 CellID->514785356]
}, Open  ]],
Cell[150093, 3606, 783, 27, 70, "Text",ExpressionUUID->"4fbb7261-78d8-4d6e-9e5d-728747c3e200",
 CellID->836514830],
Cell[CellGroupData[{
Cell[150901, 3637, 234, 6, 70, "Input",ExpressionUUID->"903fe109-29fb-4fa7-9fe0-ad2510d379df",
 CellID->514133384],
Cell[151138, 3645, 1639, 40, 70, "Output",ExpressionUUID->"072f869e-8d29-45bd-8802-ddc7fb1e1b15",
 CellID->282956686]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[152826, 3691, 159, 7, 70, "Subsection",ExpressionUUID->"8f19f3ef-98d0-4de8-acc7-ee4aa1176342",
 CellID->204653245],
Cell[CellGroupData[{
Cell[153010, 3702, 237, 8, 70, "Subsubsection",ExpressionUUID->"889b9099-55d9-4a1d-9cfa-c89f677943de",
 CellID->433069224],
Cell[153250, 3712, 435, 10, 70, "Text",ExpressionUUID->"eadab3fd-1071-4a92-9749-fcf3ccd0b8ee",
 CellID->274257899],
Cell[153688, 3724, 444, 13, 70, "Input",ExpressionUUID->"3765cbcf-4f69-4881-a1b8-36b6a19b86d7",
 CellID->538180133],
Cell[CellGroupData[{
Cell[154157, 3741, 7180, 180, 70, "Input",ExpressionUUID->"22140377-ec8d-493c-a6d8-ef11f9298c33",
 CellID->48854436],
Cell[161340, 3923, 147854, 3602, 70, "Output",ExpressionUUID->"c252ea2b-1691-4b81-bda7-a743d2a9392b",
 CellID->294722460]
}, Open  ]],
Cell[CellGroupData[{
Cell[309231, 7530, 145, 4, 70, "ExampleDelimiter",ExpressionUUID->"d866ef37-2b9b-49d4-93e4-dd21ca06226e",
 CellID->1613114934],
Cell[309379, 7536, 124, 4, 70, "Text",ExpressionUUID->"52d351d0-43d7-449a-8507-727957e1b56c",
 CellID->794679850],
Cell[309506, 7542, 402, 13, 70, "Input",ExpressionUUID->"c72dfb73-6c75-4e14-8cbc-7d9b64813d16",
 CellID->851132889],
Cell[CellGroupData[{
Cell[309933, 7559, 7180, 180, 70, "Input",ExpressionUUID->"dd5a8436-9389-4399-a791-f19fead9eadd",
 CellID->48854437],
Cell[317116, 7741, 263344, 5784, 70, "Output",ExpressionUUID->"e80d0c8b-2a26-46f9-9dd8-ea3695720883",
 CellID->3720168]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[580533, 13533, 161, 7, 70, "Subsection",ExpressionUUID->"baadc145-d878-40c7-8017-771f314d804c",
 CellID->890561554],
Cell[CellGroupData[{
Cell[580719, 13544, 330, 10, 70, "Subsubsection",ExpressionUUID->"2dc0e313-17a3-46fb-867a-ee1b719afdb5",
 CellID->375358416],
Cell[581052, 13556, 379, 6, 70, "Text",ExpressionUUID->"ae83549c-124f-4d95-8cbd-121657bd0ad2",
 CellID->178252614],
Cell[581434, 13564, 443, 13, 70, "Input",ExpressionUUID->"b790eaed-6ab6-436a-ac34-5e359c70274b",
 CellID->898078306],
Cell[CellGroupData[{
Cell[581902, 13581, 7372, 184, 70, "Input",ExpressionUUID->"e4a64a38-06df-4437-88fc-d0dcb905405b",
 CellID->375620034],
Cell[589277, 13767, 71767, 1456, 70, "Output",ExpressionUUID->"f308721b-362c-43df-9436-076d963854ad",
 CellID->765950919]
}, Open  ]],
Cell[661059, 15226, 440, 7, 70, "Text",ExpressionUUID->"f6b55a96-81ac-4740-83d5-59f2561a0096",
 CellID->276646032],
Cell[CellGroupData[{
Cell[661524, 15237, 7564, 188, 70, "Input",ExpressionUUID->"30f58426-0b00-455d-a55b-969a07f94865",
 CellID->610217151],
Cell[669091, 15427, 73517, 1463, 70, "Output",ExpressionUUID->"9e6dcbb3-7f1d-4aef-a864-a84fd1cca7e4",
 CellID->698752409]
}, Open  ]],
Cell[CellGroupData[{
Cell[742645, 16895, 7413, 184, 70, "Input",ExpressionUUID->"8e133750-bbd1-4016-858c-195d3a0c363b",
 CellID->362745272],
Cell[750061, 17081, 125488, 2969, 70, "Output",ExpressionUUID->"ee0a52cc-5265-4a9a-a698-b3bbfaf9c653",
 CellID->623458033]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[875598, 20056, 278, 9, 70, "Subsubsection",ExpressionUUID->"507c78f9-0627-49f1-9ca3-b8495a1d455f",
 CellID->938320731],
Cell[875879, 20067, 327, 5, 70, "Text",ExpressionUUID->"f18a87b7-721d-4493-b65e-862e608f8ab5",
 CellID->539258826],
Cell[876209, 20074, 445, 13, 70, "Input",ExpressionUUID->"d3d694a0-a4e1-4029-a69f-57d7cafafb1b",
 CellID->151121168],
Cell[CellGroupData[{
Cell[876679, 20091, 7275, 183, 70, "Input",ExpressionUUID->"26f105e8-004b-4d17-816f-16be54bedca3",
 CellID->127582908],
Cell[883957, 20276, 71097, 1397, 70, "Output",ExpressionUUID->"898ea323-c16a-412d-b8dd-85e37562ca33",
 CellID->149730145]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[955115, 21680, 178, 7, 70, "Subsection",ExpressionUUID->"1e5b3530-f122-449b-ba9e-b25041e35364",
 CellID->232113220],
Cell[955296, 21689, 642, 13, 70, "Text",ExpressionUUID->"dc56aad8-7068-4486-9643-77f1eda558b1",
 CellID->525250214],
Cell[955941, 21704, 268, 8, 70, "Input",ExpressionUUID->"747940d9-4746-4c5c-86eb-2d9f8090e88d",
 CellID->841205276],
Cell[CellGroupData[{
Cell[956234, 21716, 7625, 188, 70, "Input",ExpressionUUID->"362b1b94-9201-4b41-bd66-1cb58c5e42b8",
 CellID->949887617],
Cell[963862, 21906, 25864, 583, 70, "Output",ExpressionUUID->"1d83854e-41aa-4ff4-ab38-97f51ba8287e",
 CellID->929953772]
}, Open  ]],
Cell[CellGroupData[{
Cell[989763, 22494, 7674, 193, 70, "Input",ExpressionUUID->"f66940c4-86c5-4433-a973-e949bc972214",
 CellID->628606760],
Cell[997440, 22689, 25862, 583, 70, "Output",ExpressionUUID->"0f81736f-90f8-48f0-9629-3d1dd435b19a",
 CellID->950355228]
}, Open  ]],
Cell[CellGroupData[{
Cell[1023339, 23277, 7615, 191, 70, "Input",ExpressionUUID->"71a24043-22d1-41bd-9207-aeac8eb8cb04",
 CellID->998028113],
Cell[1030957, 23470, 25864, 583, 70, "Output",ExpressionUUID->"b6421035-67d9-4125-af00-e290ba66c996",
 CellID->444771532]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1056870, 24059, 169, 7, 70, "Subsection",ExpressionUUID->"5d31a05a-fe7e-4d4d-8a1a-6340152a1a2d",
 CellID->158766396],
Cell[1057042, 24068, 768, 14, 70, "Text",ExpressionUUID->"960c717f-2063-4c7c-acdc-1e255608e748",
 CellID->839895801],
Cell[CellGroupData[{
Cell[1057835, 24086, 7865, 196, 70, "Input",ExpressionUUID->"469aa6b3-deab-4781-8db9-1a746861a775",
 CellID->740852838],
Cell[1065703, 24284, 70807, 1394, 70, "Output",ExpressionUUID->"366663e7-fb36-4829-aa92-bb57f32d7228",
 CellID->883757733]
}, Open  ]],
Cell[CellGroupData[{
Cell[1136547, 25683, 7564, 188, 70, "Input",ExpressionUUID->"d8f0340e-b1af-4775-b7ad-e05f5c5fca22",
 CellID->95312061],
Cell[1144114, 25873, 121235, 2837, 70, "Output",ExpressionUUID->"e966f1a6-a99a-4873-8f7d-1487b4b70112",
 CellID->806379295]
}, Open  ]],
Cell[CellGroupData[{
Cell[1265386, 28715, 7565, 188, 70, "Input",ExpressionUUID->"ae20f413-99a0-434d-bc23-12cbabfbc79f",
 CellID->389359194],
Cell[1272954, 28905, 71255, 1397, 70, "Output",ExpressionUUID->"dcce19ad-de82-47d3-bf95-3ba4a43b4197",
 CellID->834110351]
}, Open  ]],
Cell[CellGroupData[{
Cell[1344246, 30307, 7511, 187, 70, "Input",ExpressionUUID->"8f3c30b5-ab4d-4560-bb06-4983154938b1",
 CellID->883458296],
Cell[1351760, 30496, 71257, 1397, 70, "Output",ExpressionUUID->"8fab3f3f-f761-4dc5-a640-15c970be0a94",
 CellID->364319106]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1423066, 31899, 167, 7, 70, "Subsection",ExpressionUUID->"e2c5b4b3-c81f-425f-a6c4-d481f800bb2d",
 CellID->461278909],
Cell[1423236, 31908, 503, 18, 70, "Text",ExpressionUUID->"51772c45-e67a-42c2-a9dd-0c939c54a1de",
 CellID->636979983],
Cell[CellGroupData[{
Cell[1423764, 31930, 12856, 290, 70, "Input",ExpressionUUID->"cf8fe4a2-556c-4d05-a7d4-8b697f1dc182",
 CellID->90457746],
Cell[1436623, 32222, 17324, 291, 70, "Output",ExpressionUUID->"8540ed69-04a7-4ee5-86f8-705fd507a513",
 CellID->770189828]
}, Open  ]]
}, Closed]]
}
]
*)

(* End of internal cache information *)
